

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 29 15:29:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataCOMMON
   186  0513                     __pidataCOMMON:
   187                           
   188                           ;initializer for _userFalse
   189  0513  3401               	retlw	1
   190  0514  3400               	retlw	0
   191                           
   192                           	psect	idataBANK0
   193  05B2                     __pidataBANK0:
   194                           
   195                           ;initializer for _painel
   196  05B2  3401               	retlw	1
   197  05B3  3400               	retlw	0
   198                           
   199                           ;initializer for _msg
   200  05B4  3444               	retlw	68
   201  05B5  3469               	retlw	105
   202  05B6  3467               	retlw	103
   203  05B7  3469               	retlw	105
   204  05B8  3474               	retlw	116
   205  05B9  3465               	retlw	101
   206  05BA  3420               	retlw	32
   207  05BB  3461               	retlw	97
   208  05BC  3420               	retlw	32
   209  05BD  3473               	retlw	115
   210  05BE  3465               	retlw	101
   211  05BF  346E               	retlw	110
   212  05C0  3468               	retlw	104
   213  05C1  3461               	retlw	97
   214  05C2  3400               	retlw	0
   215                           
   216                           ;initializer for _msg2
   217  05C3  345F               	retlw	95
   218  05C4  345F               	retlw	95
   219  05C5  345F               	retlw	95
   220  05C6  345F               	retlw	95
   221  05C7  3400               	retlw	0
   222                           
   223                           ;initializer for _senhaUserConfere
   224  05C8  3431               	retlw	49
   225  05C9  3432               	retlw	50
   226  05CA  3431               	retlw	49
   227  05CB  3438               	retlw	56
   228  05CC  3400               	retlw	0
   229                           
   230                           ;initializer for _senhaUser
   231  05CD  3431               	retlw	49
   232  05CE  3432               	retlw	50
   233  05CF  3431               	retlw	49
   234  05D0  3432               	retlw	50
   235  05D1  3400               	retlw	0
   236  0006                     _PORTB	set	6
   237  0009                     _PORTE	set	9
   238  0008                     _PORTD	set	8
   239  0033                     _RB3	set	51
   240  0032                     _RB2	set	50
   241  0031                     _RB1	set	49
   242  0030                     _RB0	set	48
   243  002B                     _RA3	set	43
   244  002C                     _RA4	set	44
   245  002D                     _RA5	set	45
   246  0029                     _RA1	set	41
   247  0086                     _TRISB	set	134
   248  0089                     _TRISE	set	137
   249  0088                     _TRISD	set	136
   250  0085                     _TRISA	set	133
   251  009F                     _ADCON1	set	159
   252                           
   253                           	psect	cinit
   254  07D3                     start_initialization:	
   255                           ; #config settings
   256                           
   257  07D3                     __initialization:
   258                           
   259                           ; Initialize objects allocated to BANK0
   260  07D3  1383               	bcf	3,7	;select IRP bank0
   261  07D4  3040               	movlw	low (__pdataBANK0+32)
   262  07D5  00FD               	movwf	btemp+-1
   263  07D6  3005               	movlw	high __pidataBANK0
   264  07D7  00FE               	movwf	btemp
   265  07D8  30B2               	movlw	low __pidataBANK0
   266  07D9  00FF               	movwf	btemp+1
   267  07DA  3020               	movlw	low __pdataBANK0
   268  07DB  0084               	movwf	4
   269  07DC  120A  118A  2574  120A  118A  	fcall	init_ram0
   270                           
   271                           ; Initialize objects allocated to COMMON
   272  07E1  120A  118A  2513  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   273  07E6  00FA               	movwf	__pdataCOMMON& (0+127)
   274  07E7  120A  118A  2514  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   275  07EC  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   276                           
   277                           ; Clear objects allocated to BANK0
   278  07ED  01C0               	clrf	__pbssBANK0& (0+127)
   279  07EE  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   280  07EF  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   281  07F0  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   282  07F1  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   283  07F2  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   284  07F3  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   285  07F4  01C7               	clrf	(__pbssBANK0+7)& (0+127)
   286  07F5  01C8               	clrf	(__pbssBANK0+8)& (0+127)
   287  07F6  01C9               	clrf	(__pbssBANK0+9)& (0+127)
   288  07F7  01CA               	clrf	(__pbssBANK0+10)& (0+127)
   289  07F8  01CB               	clrf	(__pbssBANK0+11)& (0+127)
   290  07F9  01CC               	clrf	(__pbssBANK0+12)& (0+127)
   291  07FA  01CD               	clrf	(__pbssBANK0+13)& (0+127)
   292                           
   293                           ; Clear objects allocated to COMMON
   294  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   295  07FC                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  07FC                     __end_of__initialization:
   299  07FC  0183               	clrf	3
   300  07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  007C                     __pbssCOMMON:
   304  007C                     _aux:
   305  007C                     	ds	1
   306                           
   307                           	psect	dataCOMMON
   308  007A                     __pdataCOMMON:
   309  007A                     _userFalse:
   310  007A                     	ds	2
   311                           
   312                           	psect	bssBANK0
   313  0040                     __pbssBANK0:
   314  0040                     _senhaConfig:
   315  0040                     	ds	5
   316  0045                     _senhaCoa:
   317  0045                     	ds	5
   318  004A                     _config:
   319  004A                     	ds	2
   320  004C                     _input:
   321  004C                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324  0020                     __pdataBANK0:
   325  0020                     _painel:
   326  0020                     	ds	2
   327  0022                     _msg:
   328  0022                     	ds	15
   329  0031                     _msg2:
   330  0031                     	ds	5
   331  0036                     _senhaUserConfere:
   332  0036                     	ds	5
   333  003B                     _senhaUser:
   334  003B                     	ds	5
   335                           
   336                           	psect	inittext
   337  0570                     init_fetch0:	
   338                           ;	Called with low address in FSR and high address in W
   339                           
   340  0570  087E               	movf	btemp,w
   341  0571  008A               	movwf	10
   342  0572  087F               	movf	btemp+1,w
   343  0573  0082               	movwf	2
   344  0574                     init_ram0:	
   345                           ;Called with:
   346                           ;	high address of idata address in btemp 
   347                           ;	low address of idata address in btemp+1 
   348                           ;	low address of data in FSR
   349                           ;	high address + 1 of data in btemp-1
   350                           
   351  0574  120A  118A  2570  120A  118A  	fcall	init_fetch0
   352  0579  0080               	movwf	0
   353  057A  0A84               	incf	4,f
   354  057B  0804               	movf	4,w
   355  057C  067D               	xorwf	btemp+-1,w
   356  057D  1903               	btfsc	3,2
   357  057E  3400               	retlw	0
   358  057F  0AFF               	incf	btemp+1,f
   359  0580  1903               	btfsc	3,2
   360  0581  0AFE               	incf	btemp,f
   361  0582  2D74               	goto	init_ram0
   362                           
   363                           	psect	cstackCOMMON
   364  0070                     __pcstackCOMMON:
   365  0070                     ?_LCD_enable:
   366  0070                     ?_delay:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ??_delay:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_telaInicial:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_Linha2:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_validaUser:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_espacoLivre:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_init:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ??_init:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_LCD_init:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_LCD_escreve:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_LCD_limpa:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_LCD_linha1:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_LCD_linha2:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_main:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_strlen:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_strcmp:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0070                     strcmp@s2:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0070                     delay@i:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 2 bytes @ 0x0
   422  0070                     	ds	2
   423  0072                     ??_LCD_enable:
   424  0072                     ??_strlen:	
   425                           ; 1 bytes @ 0x2
   426                           
   427  0072                     ??_strcmp:	
   428                           ; 1 bytes @ 0x2
   429                           
   430  0072                     ??_LCD_init:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     ??_LCD_escreve:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ??_LCD_limpa:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ??_LCD_linha1:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     ??_LCD_linha2:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     LCD_escreve@x:	
   446                           ; 1 bytes @ 0x2
   447                           
   448                           
   449                           ; 1 bytes @ 0x2
   450  0072                     	ds	1
   451  0073                     ??_espacoLivre:
   452  0073                     strlen@cp:	
   453                           ; 1 bytes @ 0x3
   454                           
   455                           
   456                           ; 1 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     strlen@s:
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     ??_telaInicial:
   463  0075                     ??_Linha2:	
   464                           ; 1 bytes @ 0x5
   465                           
   466  0075                     strcmp@r:	
   467                           ; 1 bytes @ 0x5
   468                           
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     strcmp@s1:
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ??_validaUser:
   477  0077                     telaInicial@i:	
   478                           ; 1 bytes @ 0x7
   479                           
   480  0077                     Linha2@i:	
   481                           ; 2 bytes @ 0x7
   482                           
   483                           
   484                           ; 2 bytes @ 0x7
   485  0077                     	ds	3
   486  007A                     ??_main:
   487                           
   488                           	psect	maintext
   489  06D1                     __pmaintext:	
   490                           ; 1 bytes @ 0xA
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 39 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B00/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels required when called: 4
   516 ;; This function calls:
   517 ;;		_LCD_escreve
   518 ;;		_LCD_init
   519 ;;		_LCD_limpa
   520 ;;		_Linha2
   521 ;;		_telaInicial
   522 ;;		_validaUser
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _main
   530  06D1                     _main:
   531  06D1                     l1586:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   534                           
   535                           
   536                           ;main.c: 40:     TRISE = 0;
   537  06D1  1683               	bsf	3,5	;RP0=1, select bank1
   538  06D2  1303               	bcf	3,6	;RP1=0, select bank1
   539  06D3  0189               	clrf	9	;volatile
   540                           
   541                           ;main.c: 41:     TRISD = 0;
   542  06D4  0188               	clrf	8	;volatile
   543  06D5                     l1588:
   544                           
   545                           ;main.c: 42:     TRISB = 0x0F;
   546  06D5  300F               	movlw	15
   547  06D6  0086               	movwf	6	;volatile
   548  06D7                     l1590:
   549                           
   550                           ;main.c: 44:     PORTE = 0x01;
   551  06D7  3001               	movlw	1
   552  06D8  1283               	bcf	3,5	;RP0=0, select bank0
   553  06D9  1303               	bcf	3,6	;RP1=0, select bank0
   554  06DA  0089               	movwf	9	;volatile
   555  06DB                     l1592:
   556                           
   557                           ;main.c: 47:     LCD_init();
   558  06DB  120A  118A  2626  120A  118A  	fcall	_LCD_init
   559  06E0                     l1594:
   560                           
   561                           ;main.c: 48:     LCD_limpa();
   562  06E0  120A  118A  252F  120A  118A  	fcall	_LCD_limpa
   563  06E5                     l1596:
   564                           
   565                           ;main.c: 53:         if (painel){
   566  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   567  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   568  06E7  0820               	movf	_painel,w
   569  06E8  0421               	iorwf	_painel+1,w
   570  06E9  1903               	btfsc	3,2
   571  06EA  2EEC               	goto	u951
   572  06EB  2EED               	goto	u950
   573  06EC                     u951:
   574  06EC  2EFB               	goto	l1602
   575  06ED                     u950:
   576  06ED                     l1598:
   577                           
   578                           ;main.c: 54:             telaInicial();
   579  06ED  120A  118A  2694  120A  118A  	fcall	_telaInicial
   580                           
   581                           ;main.c: 55:             Linha2();
   582  06F2  120A  118A  2659  120A  118A  	fcall	_Linha2
   583  06F7                     l1600:
   584                           
   585                           ;main.c: 56:             painel = 0;
   586  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   587  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   588  06F9  01A0               	clrf	_painel
   589  06FA  01A1               	clrf	_painel+1
   590  06FB                     l1602:
   591                           
   592                           ;main.c: 59:         if (userFalse == 1){
   593  06FB  037A               	decf	_userFalse,w
   594  06FC  047B               	iorwf	_userFalse+1,w
   595  06FD  1D03               	btfss	3,2
   596  06FE  2F00               	goto	u961
   597  06FF  2F01               	goto	u960
   598  0700                     u961:
   599  0700  2EE5               	goto	l1596
   600  0701                     u960:
   601  0701                     l1604:
   602                           
   603                           ;main.c: 60:             LCD_limpa();
   604  0701  120A  118A  252F  120A  118A  	fcall	_LCD_limpa
   605                           
   606                           ;main.c: 61:             LCD_escreve('E');
   607  0706  3045               	movlw	69
   608  0707  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   609  070C                     l1606:
   610                           
   611                           ;main.c: 63:             validaUser();
   612  070C  120A  118A  2715  120A  118A  	fcall	_validaUser
   613  0711  2EE5               	goto	l1596
   614  0712  120A  118A  2800   	ljmp	start
   615  0715                     __end_of_main:
   616                           
   617                           	psect	text1
   618  0715                     __ptext1:	
   619 ;; *************** function _validaUser *****************
   620 ;; Defined at:
   621 ;;		line 365 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          3       0       0       0       0
   638 ;;      Totals:         3       0       0       0       0
   639 ;;Total ram usage:        3 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 2
   642 ;; This function calls:
   643 ;;		_LCD_escreve
   644 ;;		_strcmp
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _validaUser
   652  0715                     _validaUser:
   653  0715                     l1332:	
   654                           ;incstack = 0
   655                           ; Regs used in _validaUser: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;main.c: 367:     while(userFalse == 1){
   659  0715  2FCC               	goto	l1368
   660  0716                     l1334:
   661                           
   662                           ;main.c: 405:         if (strcmp(senhaUser, senhaUserConfere)==0){
   663  0716  3036               	movlw	(low (_senhaUserConfere| 0))& (0+255)
   664  0717  00F7               	movwf	??_validaUser
   665  0718  0877               	movf	??_validaUser,w
   666  0719  00F0               	movwf	strcmp@s2
   667  071A  303B               	movlw	(low (_senhaUser| 0))& (0+255)
   668  071B  120A  118A  25FC  120A  118A  	fcall	_strcmp
   669  0720  0870               	movf	?_strcmp,w
   670  0721  0471               	iorwf	?_strcmp+1,w
   671  0722  1D03               	btfss	3,2
   672  0723  2F25               	goto	u451
   673  0724  2F26               	goto	u450
   674  0725                     u451:
   675  0725  2F84               	goto	l1366
   676  0726                     u450:
   677  0726                     l1336:
   678                           
   679                           ;main.c: 406:             userFalse = 0;
   680  0726  01FA               	clrf	_userFalse
   681  0727  01FB               	clrf	_userFalse+1
   682  0728                     l1338:
   683                           
   684                           ;main.c: 407:             LCD_escreve('S');
   685  0728  3053               	movlw	83
   686  0729  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   687  072E                     l1340:
   688                           
   689                           ;main.c: 408:             LCD_escreve('e');
   690  072E  3065               	movlw	101
   691  072F  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   692  0734                     l1342:
   693                           
   694                           ;main.c: 409:             LCD_escreve('n');
   695  0734  306E               	movlw	110
   696  0735  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   697  073A                     l1344:
   698                           
   699                           ;main.c: 410:             LCD_escreve('h');
   700  073A  3068               	movlw	104
   701  073B  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   702  0740                     l1346:
   703                           
   704                           ;main.c: 411:             LCD_escreve('a');
   705  0740  3061               	movlw	97
   706  0741  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   707  0746                     l1348:
   708                           
   709                           ;main.c: 412:             LCD_escreve(' ');
   710  0746  3020               	movlw	32
   711  0747  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   712  074C                     l1350:
   713                           
   714                           ;main.c: 413:             LCD_escreve('c');
   715  074C  3063               	movlw	99
   716  074D  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   717  0752                     l1352:
   718                           
   719                           ;main.c: 414:             LCD_escreve('o');
   720  0752  306F               	movlw	111
   721  0753  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   722  0758                     l1354:
   723                           
   724                           ;main.c: 415:             LCD_escreve('r');
   725  0758  3072               	movlw	114
   726  0759  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   727  075E                     l1356:
   728                           
   729                           ;main.c: 416:             LCD_escreve('r');
   730  075E  3072               	movlw	114
   731  075F  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   732  0764                     l1358:
   733                           
   734                           ;main.c: 417:             LCD_escreve('e');
   735  0764  3065               	movlw	101
   736  0765  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   737  076A                     l1360:
   738                           
   739                           ;main.c: 418:             LCD_escreve('t');
   740  076A  3074               	movlw	116
   741  076B  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   742  0770                     l1362:
   743                           
   744                           ;main.c: 419:             LCD_escreve('a');
   745  0770  3061               	movlw	97
   746  0771  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   747  0776                     l1364:
   748                           
   749                           ;main.c: 420:             _delay((unsigned long)((2500)*(20000000/4000.0)));
   750  0776  3040               	movlw	64
   751  0777  00F9               	movwf	??_validaUser+2
   752  0778  306A               	movlw	106
   753  0779  00F8               	movwf	??_validaUser+1
   754  077A  3097               	movlw	151
   755  077B  00F7               	movwf	??_validaUser
   756  077C                     u1707:
   757  077C  0BF7               	decfsz	??_validaUser,f
   758  077D  2F7C               	goto	u1707
   759  077E  0BF8               	decfsz	??_validaUser+1,f
   760  077F  2F7C               	goto	u1707
   761  0780  0BF9               	decfsz	??_validaUser+2,f
   762  0781  2F7C               	goto	u1707
   763  0782  2F83               	nop2
   764                           
   765                           ;main.c: 421:         }
   766  0783  2FCC               	goto	l1368
   767  0784                     l1366:
   768                           
   769                           ;main.c: 424:             LCD_escreve('S');
   770  0784  3053               	movlw	83
   771  0785  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   772                           
   773                           ;main.c: 425:             LCD_escreve('e');
   774  078A  3065               	movlw	101
   775  078B  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   776                           
   777                           ;main.c: 426:             LCD_escreve('n');
   778  0790  306E               	movlw	110
   779  0791  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   780                           
   781                           ;main.c: 427:             LCD_escreve('h');
   782  0796  3068               	movlw	104
   783  0797  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   784                           
   785                           ;main.c: 428:             LCD_escreve('a');
   786  079C  3061               	movlw	97
   787  079D  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   788                           
   789                           ;main.c: 429:             LCD_escreve(' ');
   790  07A2  3020               	movlw	32
   791  07A3  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   792                           
   793                           ;main.c: 430:             LCD_escreve('e');
   794  07A8  3065               	movlw	101
   795  07A9  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   796                           
   797                           ;main.c: 431:             LCD_escreve('r');
   798  07AE  3072               	movlw	114
   799  07AF  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   800                           
   801                           ;main.c: 432:             LCD_escreve('r');
   802  07B4  3072               	movlw	114
   803  07B5  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   804                           
   805                           ;main.c: 433:             LCD_escreve('a');
   806  07BA  3061               	movlw	97
   807  07BB  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   808                           
   809                           ;main.c: 434:             LCD_escreve('d');
   810  07C0  3064               	movlw	100
   811  07C1  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   812                           
   813                           ;main.c: 435:             LCD_escreve('a');
   814  07C6  3061               	movlw	97
   815  07C7  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   816  07CC                     l1368:
   817                           
   818                           ;main.c: 367:     while(userFalse == 1){
   819  07CC  037A               	decf	_userFalse,w
   820  07CD  047B               	iorwf	_userFalse+1,w
   821  07CE  1903               	btfsc	3,2
   822  07CF  2FD1               	goto	u461
   823  07D0  2FD2               	goto	u460
   824  07D1                     u461:
   825  07D1  2F16               	goto	l1334
   826  07D2                     u460:
   827  07D2                     l172:
   828  07D2  0008               	return
   829  07D3                     __end_of_validaUser:
   830                           
   831                           	psect	text2
   832  05FC                     __ptext2:	
   833 ;; *************** function _strcmp *****************
   834 ;; Defined at:
   835 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcmp.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  s1              1    wreg     PTR const unsigned char 
   838 ;;		 -> senhaUser(5), 
   839 ;;  s2              1    0[COMMON] PTR const unsigned char 
   840 ;;		 -> senhaUserConfere(5), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  s1              1    6[COMMON] PTR const unsigned char 
   843 ;;		 -> senhaUser(5), 
   844 ;;  r               1    5[COMMON] char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    0[COMMON] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         2       0       0       0       0
   855 ;;      Locals:         2       0       0       0       0
   856 ;;      Temps:          3       0       0       0       0
   857 ;;      Totals:         7       0       0       0       0
   858 ;;Total ram usage:        7 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_validaUser
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _strcmp
   869  05FC                     _strcmp:
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
   873                           ;strcmp@s1 stored from wreg
   874  05FC  00F6               	movwf	strcmp@s1
   875  05FD                     l1260:
   876  05FD  2E06               	goto	l1266
   877  05FE                     l1262:
   878  05FE  3001               	movlw	1
   879  05FF  00F2               	movwf	??_strcmp
   880  0600  0872               	movf	??_strcmp,w
   881  0601  07F6               	addwf	strcmp@s1,f
   882  0602                     l1264:
   883  0602  3001               	movlw	1
   884  0603  00F2               	movwf	??_strcmp
   885  0604  0872               	movf	??_strcmp,w
   886  0605  07F0               	addwf	strcmp@s2,f
   887  0606                     l1266:
   888  0606  0870               	movf	strcmp@s2,w
   889  0607  0084               	movwf	4
   890  0608  1383               	bcf	3,7	;select IRP bank0
   891  0609  0800               	movf	0,w
   892  060A  00F2               	movwf	??_strcmp
   893  060B  0876               	movf	strcmp@s1,w
   894  060C  0084               	movwf	4
   895  060D  0800               	movf	0,w
   896  060E  00F3               	movwf	??_strcmp+1
   897  060F  0872               	movf	??_strcmp,w
   898  0610  0273               	subwf	??_strcmp+1,w
   899  0611  00F4               	movwf	??_strcmp+2
   900  0612  0874               	movf	??_strcmp+2,w
   901  0613  00F5               	movwf	strcmp@r
   902  0614  0875               	movf	strcmp@r,w
   903  0615  1D03               	btfss	3,2
   904  0616  2E18               	goto	u411
   905  0617  2E19               	goto	u410
   906  0618                     u411:
   907  0618  2E20               	goto	l1270
   908  0619                     u410:
   909  0619                     l1268:
   910  0619  0876               	movf	strcmp@s1,w
   911  061A  0084               	movwf	4
   912  061B  0800               	movf	0,w
   913  061C  1D03               	btfss	3,2
   914  061D  2E1F               	goto	u421
   915  061E  2E20               	goto	u420
   916  061F                     u421:
   917  061F  2DFE               	goto	l1262
   918  0620                     u420:
   919  0620                     l1270:
   920  0620  0875               	movf	strcmp@r,w
   921  0621  00F0               	movwf	?_strcmp
   922  0622  01F1               	clrf	?_strcmp+1
   923  0623  1BF0               	btfsc	?_strcmp,7
   924  0624  03F1               	decf	?_strcmp+1,f
   925  0625                     l714:
   926  0625  0008               	return
   927  0626                     __end_of_strcmp:
   928                           
   929                           	psect	text3
   930  0694                     __ptext3:	
   931 ;; *************** function _telaInicial *****************
   932 ;; Defined at:
   933 ;;		line 327 in file "main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  i               2    7[COMMON] int 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         2       0       0       0       0
   949 ;;      Temps:          2       0       0       0       0
   950 ;;      Totals:         4       0       0       0       0
   951 ;;Total ram usage:        4 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 2
   954 ;; This function calls:
   955 ;;		_LCD_escreve
   956 ;;		_LCD_linha1
   957 ;;		_strlen
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _telaInicial
   965  0694                     _telaInicial:
   966  0694                     l1308:	
   967                           ;incstack = 0
   968                           ; Regs used in _telaInicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   969                           
   970                           
   971                           ;main.c: 329:     LCD_linha1();
   972  0694  120A  118A  254F  120A  118A  	fcall	_LCD_linha1
   973                           
   974                           ;main.c: 330:     LCD_escreve(' ');
   975  0699  3020               	movlw	32
   976  069A  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   977  069F                     l1310:
   978                           
   979                           ;main.c: 331:     for (int i = 0; i <= strlen(msg)-1; i++){
   980  069F  01F7               	clrf	telaInicial@i
   981  06A0  01F8               	clrf	telaInicial@i+1
   982  06A1  2EB2               	goto	l1316
   983  06A2                     l1312:
   984                           
   985                           ;main.c: 332:         LCD_escreve(msg[i]);
   986  06A2  0877               	movf	telaInicial@i,w
   987  06A3  3E22               	addlw	(low (_msg| 0))& (0+255)
   988  06A4  0084               	movwf	4
   989  06A5  1383               	bcf	3,7	;select IRP bank0
   990  06A6  0800               	movf	0,w
   991  06A7  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
   992  06AC                     l1314:
   993                           
   994                           ;main.c: 333:     }
   995  06AC  3001               	movlw	1
   996  06AD  07F7               	addwf	telaInicial@i,f
   997  06AE  1803               	skipnc
   998  06AF  0AF8               	incf	telaInicial@i+1,f
   999  06B0  3000               	movlw	0
  1000  06B1  07F8               	addwf	telaInicial@i+1,f
  1001  06B2                     l1316:
  1002  06B2  3022               	movlw	(low (_msg| 0))& (0+255)
  1003  06B3  120A  118A  2599  120A  118A  	fcall	_strlen
  1004  06B8  0870               	movf	?_strlen,w
  1005  06B9  3EFF               	addlw	255
  1006  06BA  00F5               	movwf	??_telaInicial
  1007  06BB  0871               	movf	?_strlen+1,w
  1008  06BC  1803               	skipnc
  1009  06BD  3E01               	addlw	1
  1010  06BE  3EFF               	addlw	255
  1011  06BF  00F6               	movwf	??_telaInicial+1
  1012  06C0  0878               	movf	telaInicial@i+1,w
  1013  06C1  0276               	subwf	??_telaInicial+1,w
  1014  06C2  1D03               	skipz
  1015  06C3  2EC6               	goto	u435
  1016  06C4  0877               	movf	telaInicial@i,w
  1017  06C5  0275               	subwf	??_telaInicial,w
  1018  06C6                     u435:
  1019  06C6  1803               	skipnc
  1020  06C7  2EC9               	goto	u431
  1021  06C8  2ECA               	goto	u430
  1022  06C9                     u431:
  1023  06C9  2EA2               	goto	l1312
  1024  06CA                     u430:
  1025  06CA                     l1318:
  1026                           
  1027                           ;main.c: 334:     LCD_escreve(' ');
  1028  06CA  3020               	movlw	32
  1029  06CB  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1030  06D0                     l155:
  1031  06D0  0008               	return
  1032  06D1                     __end_of_telaInicial:
  1033                           
  1034                           	psect	text4
  1035  054F                     __ptext4:	
  1036 ;; *************** function _LCD_linha1 *****************
  1037 ;; Defined at:
  1038 ;;		line 65 in file "./lcd.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 1
  1059 ;; This function calls:
  1060 ;;		_delay
  1061 ;; This function is called by:
  1062 ;;		_telaInicial
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _LCD_linha1
  1068  054F                     _LCD_linha1:
  1069  054F                     l1236:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _LCD_linha1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1072                           
  1073                           
  1074                           ;./lcd.h: 66:     PORTD = 0x02;
  1075  054F  3002               	movlw	2
  1076  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0552  0088               	movwf	8	;volatile
  1079  0553                     l1238:
  1080                           
  1081                           ;./lcd.h: 67:     RA5 = 0;
  1082  0553  1285               	bcf	5,5	;volatile
  1083  0554                     l1240:
  1084                           
  1085                           ;./lcd.h: 68:     RA4 = 0;
  1086  0554  1205               	bcf	5,4	;volatile
  1087  0555                     l1242:
  1088                           
  1089                           ;./lcd.h: 69:     RA3=0;
  1090  0555  1185               	bcf	5,3	;volatile
  1091  0556                     l1244:
  1092                           
  1093                           ;./lcd.h: 70:     delay();
  1094  0556  120A  118A  2583  120A  118A  	fcall	_delay
  1095  055B                     l1246:
  1096                           
  1097                           ;./lcd.h: 71:  RA3 = 1;
  1098  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1099  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1100  055D  1585               	bsf	5,3	;volatile
  1101  055E                     l65:
  1102  055E  0008               	return
  1103  055F                     __end_of_LCD_linha1:
  1104                           
  1105                           	psect	text5
  1106  0659                     __ptext5:	
  1107 ;; *************** function _Linha2 *****************
  1108 ;; Defined at:
  1109 ;;		line 342 in file "main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  i               2    7[COMMON] int 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         2       0       0       0       0
  1125 ;;      Temps:          2       0       0       0       0
  1126 ;;      Totals:         4       0       0       0       0
  1127 ;;Total ram usage:        4 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 3
  1130 ;; This function calls:
  1131 ;;		_LCD_escreve
  1132 ;;		_LCD_linha2
  1133 ;;		_espacoLivre
  1134 ;;		_strlen
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _Linha2
  1142  0659                     _Linha2:
  1143  0659                     l1320:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _Linha2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1146                           
  1147                           
  1148                           ;main.c: 343:     LCD_linha2();
  1149  0659  120A  118A  253F  120A  118A  	fcall	_LCD_linha2
  1150                           
  1151                           ;main.c: 344:     espacoLivre();
  1152  065E  120A  118A  25D2  120A  118A  	fcall	_espacoLivre
  1153  0663                     l1322:
  1154                           
  1155                           ;main.c: 345:     for (int i = 0; i <= strlen(msg2)-1; i++){
  1156  0663  01F7               	clrf	Linha2@i
  1157  0664  01F8               	clrf	Linha2@i+1
  1158  0665  2E76               	goto	l1328
  1159  0666                     l1324:
  1160                           
  1161                           ;main.c: 346:         LCD_escreve(msg2[i]);
  1162  0666  0877               	movf	Linha2@i,w
  1163  0667  3E31               	addlw	(low (_msg2| 0))& (0+255)
  1164  0668  0084               	movwf	4
  1165  0669  1383               	bcf	3,7	;select IRP bank0
  1166  066A  0800               	movf	0,w
  1167  066B  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1168  0670                     l1326:
  1169                           
  1170                           ;main.c: 347:     }
  1171  0670  3001               	movlw	1
  1172  0671  07F7               	addwf	Linha2@i,f
  1173  0672  1803               	skipnc
  1174  0673  0AF8               	incf	Linha2@i+1,f
  1175  0674  3000               	movlw	0
  1176  0675  07F8               	addwf	Linha2@i+1,f
  1177  0676                     l1328:
  1178  0676  3031               	movlw	(low (_msg2| 0))& (0+255)
  1179  0677  120A  118A  2599  120A  118A  	fcall	_strlen
  1180  067C  0870               	movf	?_strlen,w
  1181  067D  3EFF               	addlw	255
  1182  067E  00F5               	movwf	??_Linha2
  1183  067F  0871               	movf	?_strlen+1,w
  1184  0680  1803               	skipnc
  1185  0681  3E01               	addlw	1
  1186  0682  3EFF               	addlw	255
  1187  0683  00F6               	movwf	??_Linha2+1
  1188  0684  0878               	movf	Linha2@i+1,w
  1189  0685  0276               	subwf	??_Linha2+1,w
  1190  0686  1D03               	skipz
  1191  0687  2E8A               	goto	u445
  1192  0688  0877               	movf	Linha2@i,w
  1193  0689  0275               	subwf	??_Linha2,w
  1194  068A                     u445:
  1195  068A  1803               	skipnc
  1196  068B  2E8D               	goto	u441
  1197  068C  2E8E               	goto	u440
  1198  068D                     u441:
  1199  068D  2E66               	goto	l1324
  1200  068E                     u440:
  1201  068E                     l1330:
  1202                           
  1203                           ;main.c: 348:     espacoLivre();
  1204  068E  120A  118A  25D2  120A  118A  	fcall	_espacoLivre
  1205  0693                     l161:
  1206  0693  0008               	return
  1207  0694                     __end_of_Linha2:
  1208                           
  1209                           	psect	text6
  1210  0599                     __ptext6:	
  1211 ;; *************** function _strlen *****************
  1212 ;; Defined at:
  1213 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  s               1    wreg     PTR const unsigned char 
  1216 ;;		 -> msg2(5), msg(15), 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  s               1    4[COMMON] PTR const unsigned char 
  1219 ;;		 -> msg2(5), msg(15), 
  1220 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1221 ;;		 -> msg2(5), msg(15), 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    0[COMMON] unsigned int 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         2       0       0       0       0
  1232 ;;      Locals:         2       0       0       0       0
  1233 ;;      Temps:          1       0       0       0       0
  1234 ;;      Totals:         5       0       0       0       0
  1235 ;;Total ram usage:        5 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_telaInicial
  1241 ;;		_Linha2
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _strlen
  1247  0599                     _strlen:
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1251                           ;strlen@s stored from wreg
  1252  0599  00F4               	movwf	strlen@s
  1253  059A                     l1248:
  1254  059A  0874               	movf	strlen@s,w
  1255  059B  00F2               	movwf	??_strlen
  1256  059C  0872               	movf	??_strlen,w
  1257  059D  00F3               	movwf	strlen@cp
  1258  059E  2DA3               	goto	l1252
  1259  059F                     l1250:
  1260  059F  3001               	movlw	1
  1261  05A0  00F2               	movwf	??_strlen
  1262  05A1  0872               	movf	??_strlen,w
  1263  05A2  07F3               	addwf	strlen@cp,f
  1264  05A3                     l1252:
  1265  05A3  0873               	movf	strlen@cp,w
  1266  05A4  0084               	movwf	4
  1267  05A5  1383               	bcf	3,7	;select IRP bank0
  1268  05A6  0800               	movf	0,w
  1269  05A7  1D03               	btfss	3,2
  1270  05A8  2DAA               	goto	u401
  1271  05A9  2DAB               	goto	u400
  1272  05AA                     u401:
  1273  05AA  2D9F               	goto	l1250
  1274  05AB                     u400:
  1275  05AB                     l1254:
  1276  05AB  0874               	movf	strlen@s,w
  1277  05AC  0273               	subwf	strlen@cp,w
  1278  05AD  00F0               	movwf	?_strlen
  1279  05AE  01F1               	clrf	?_strlen+1
  1280  05AF  1BF0               	btfsc	?_strlen,7
  1281  05B0  03F1               	decf	?_strlen+1,f
  1282  05B1                     l720:
  1283  05B1  0008               	return
  1284  05B2                     __end_of_strlen:
  1285                           
  1286                           	psect	text7
  1287  05D2                     __ptext7:	
  1288 ;; *************** function _espacoLivre *****************
  1289 ;; Defined at:
  1290 ;;		line 354 in file "main.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0
  1307 ;;      Totals:         0       0       0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 2
  1311 ;; This function calls:
  1312 ;;		_LCD_escreve
  1313 ;;		_LCD_linha2
  1314 ;; This function is called by:
  1315 ;;		_Linha2
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _espacoLivre
  1321  05D2                     _espacoLivre:
  1322  05D2                     l1258:	
  1323                           ;incstack = 0
  1324                           ; Regs used in _espacoLivre: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1325                           
  1326                           
  1327                           ;main.c: 355:     LCD_linha2();
  1328  05D2  120A  118A  253F  120A  118A  	fcall	_LCD_linha2
  1329                           
  1330                           ;main.c: 356:     LCD_escreve(' ');
  1331  05D7  3020               	movlw	32
  1332  05D8  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1333                           
  1334                           ;main.c: 357:     LCD_escreve(' ');
  1335  05DD  3020               	movlw	32
  1336  05DE  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1337                           
  1338                           ;main.c: 358:     LCD_escreve(' ');
  1339  05E3  3020               	movlw	32
  1340  05E4  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1341                           
  1342                           ;main.c: 359:     LCD_escreve(' ');
  1343  05E9  3020               	movlw	32
  1344  05EA  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1345                           
  1346                           ;main.c: 360:     LCD_escreve(' ');
  1347  05EF  3020               	movlw	32
  1348  05F0  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1349                           
  1350                           ;main.c: 361:     LCD_escreve(' ');
  1351  05F5  3020               	movlw	32
  1352  05F6  120A  118A  255F  120A  118A  	fcall	_LCD_escreve
  1353  05FB                     l164:
  1354  05FB  0008               	return
  1355  05FC                     __end_of_espacoLivre:
  1356                           
  1357                           	psect	text8
  1358  053F                     __ptext8:	
  1359 ;; *************** function _LCD_linha2 *****************
  1360 ;; Defined at:
  1361 ;;		line 73 in file "./lcd.h"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 1
  1382 ;; This function calls:
  1383 ;;		_delay
  1384 ;; This function is called by:
  1385 ;;		_Linha2
  1386 ;;		_espacoLivre
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _LCD_linha2
  1392  053F                     _LCD_linha2:
  1393  053F                     l1210:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _LCD_linha2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1396                           
  1397                           
  1398                           ;./lcd.h: 74:     PORTD = 0xC0;
  1399  053F  30C0               	movlw	192
  1400  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0542  0088               	movwf	8	;volatile
  1403  0543                     l1212:
  1404                           
  1405                           ;./lcd.h: 75:     RA5 = 0;
  1406  0543  1285               	bcf	5,5	;volatile
  1407  0544                     l1214:
  1408                           
  1409                           ;./lcd.h: 76:     RA4 = 0;
  1410  0544  1205               	bcf	5,4	;volatile
  1411  0545                     l1216:
  1412                           
  1413                           ;./lcd.h: 77:     RA3=0;
  1414  0545  1185               	bcf	5,3	;volatile
  1415  0546                     l1218:
  1416                           
  1417                           ;./lcd.h: 78:     delay();
  1418  0546  120A  118A  2583  120A  118A  	fcall	_delay
  1419  054B                     l1220:
  1420                           
  1421                           ;./lcd.h: 79:  RA3 = 1;
  1422  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1423  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1424  054D  1585               	bsf	5,3	;volatile
  1425  054E                     l68:
  1426  054E  0008               	return
  1427  054F                     __end_of_LCD_linha2:
  1428                           
  1429                           	psect	text9
  1430  055F                     __ptext9:	
  1431 ;; *************** function _LCD_escreve *****************
  1432 ;; Defined at:
  1433 ;;		line 46 in file "./lcd.h"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  x               1    wreg     unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  x               1    2[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         1       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         1       0       0       0       0
  1451 ;;Total ram usage:        1 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 1
  1454 ;; This function calls:
  1455 ;;		_delay
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;;		_telaInicial
  1459 ;;		_Linha2
  1460 ;;		_espacoLivre
  1461 ;;		_validaUser
  1462 ;;		_LCD_escreveFrase
  1463 ;;		_teclado
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _LCD_escreve
  1469  055F                     _LCD_escreve:
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _LCD_escreve: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1473                           ;LCD_escreve@x stored from wreg
  1474  055F  00F2               	movwf	LCD_escreve@x
  1475  0560                     l1198:
  1476                           
  1477                           ;./lcd.h: 46: void LCD_escreve(char x);./lcd.h: 47: {;./lcd.h: 48:  PORTD = x;
  1478  0560  0872               	movf	LCD_escreve@x,w
  1479  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0563  0088               	movwf	8	;volatile
  1482  0564                     l1200:
  1483                           
  1484                           ;./lcd.h: 49:  RA5 = 1;
  1485  0564  1685               	bsf	5,5	;volatile
  1486  0565                     l1202:
  1487                           
  1488                           ;./lcd.h: 50:  RA4 = 0;
  1489  0565  1205               	bcf	5,4	;volatile
  1490  0566                     l1204:
  1491                           
  1492                           ;./lcd.h: 51:  RA3 = 0;
  1493  0566  1185               	bcf	5,3	;volatile
  1494  0567                     l1206:
  1495                           
  1496                           ;./lcd.h: 52:  delay();
  1497  0567  120A  118A  2583  120A  118A  	fcall	_delay
  1498  056C                     l1208:
  1499                           
  1500                           ;./lcd.h: 53:  RA3 = 1;
  1501  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1502  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1503  056E  1585               	bsf	5,3	;volatile
  1504  056F                     l59:
  1505  056F  0008               	return
  1506  0570                     __end_of_LCD_escreve:
  1507                           
  1508                           	psect	text10
  1509  052F                     __ptext10:	
  1510 ;; *************** function _LCD_limpa *****************
  1511 ;; Defined at:
  1512 ;;		line 56 in file "./lcd.h"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 1
  1533 ;; This function calls:
  1534 ;;		_delay
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _LCD_limpa
  1542  052F                     _LCD_limpa:
  1543  052F                     l1296:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _LCD_limpa: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1546                           
  1547                           
  1548                           ;./lcd.h: 57:     PORTD = 0x01;
  1549  052F  3001               	movlw	1
  1550  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0532  0088               	movwf	8	;volatile
  1553  0533                     l1298:
  1554                           
  1555                           ;./lcd.h: 58:     RA5 = 0;
  1556  0533  1285               	bcf	5,5	;volatile
  1557  0534                     l1300:
  1558                           
  1559                           ;./lcd.h: 59:     RA4 = 0;
  1560  0534  1205               	bcf	5,4	;volatile
  1561  0535                     l1302:
  1562                           
  1563                           ;./lcd.h: 60:     RA3=0;
  1564  0535  1185               	bcf	5,3	;volatile
  1565  0536                     l1304:
  1566                           
  1567                           ;./lcd.h: 61:     delay();
  1568  0536  120A  118A  2583  120A  118A  	fcall	_delay
  1569  053B                     l1306:
  1570                           
  1571                           ;./lcd.h: 62:  RA3 = 1;
  1572  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1573  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1574  053D  1585               	bsf	5,3	;volatile
  1575  053E                     l62:
  1576  053E  0008               	return
  1577  053F                     __end_of_LCD_limpa:
  1578                           
  1579                           	psect	text11
  1580  0626                     __ptext11:	
  1581 ;; *************** function _LCD_init *****************
  1582 ;; Defined at:
  1583 ;;		line 31 in file "./lcd.h"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 2
  1604 ;; This function calls:
  1605 ;;		_LCD_enable
  1606 ;;		_init
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _LCD_init
  1614  0626                     _LCD_init:
  1615  0626                     l1274:	
  1616                           ;incstack = 0
  1617                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1618                           
  1619                           
  1620                           ;./lcd.h: 33:     init();
  1621  0626  120A  118A  2515  120A  118A  	fcall	_init
  1622  062B                     l1276:
  1623                           
  1624                           ;./lcd.h: 34:  PORTD = 0X1;
  1625  062B  3001               	movlw	1
  1626  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1627  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1628  062E  0088               	movwf	8	;volatile
  1629  062F                     l1278:
  1630                           
  1631                           ;./lcd.h: 35:  LCD_enable();
  1632  062F  120A  118A  2521  120A  118A  	fcall	_LCD_enable
  1633  0634                     l1280:
  1634                           
  1635                           ;./lcd.h: 36:  PORTD = 0X38;
  1636  0634  3038               	movlw	56
  1637  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0637  0088               	movwf	8	;volatile
  1640  0638                     l1282:
  1641                           
  1642                           ;./lcd.h: 37:  LCD_enable();
  1643  0638  120A  118A  2521  120A  118A  	fcall	_LCD_enable
  1644  063D                     l1284:
  1645                           
  1646                           ;./lcd.h: 38:  PORTD = 0X0e;
  1647  063D  300E               	movlw	14
  1648  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1649  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0640  0088               	movwf	8	;volatile
  1651  0641                     l1286:
  1652                           
  1653                           ;./lcd.h: 39:  LCD_enable();
  1654  0641  120A  118A  2521  120A  118A  	fcall	_LCD_enable
  1655  0646                     l1288:
  1656                           
  1657                           ;./lcd.h: 40:  PORTD = 0X06;
  1658  0646  3006               	movlw	6
  1659  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0649  0088               	movwf	8	;volatile
  1662  064A                     l1290:
  1663                           
  1664                           ;./lcd.h: 41:  LCD_enable();
  1665  064A  120A  118A  2521  120A  118A  	fcall	_LCD_enable
  1666  064F                     l1292:
  1667                           
  1668                           ;./lcd.h: 42:  PORTD = 0X80;
  1669  064F  3080               	movlw	128
  1670  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0652  0088               	movwf	8	;volatile
  1673  0653                     l1294:
  1674                           
  1675                           ;./lcd.h: 43:  LCD_enable();
  1676  0653  120A  118A  2521  120A  118A  	fcall	_LCD_enable
  1677  0658                     l56:
  1678  0658  0008               	return
  1679  0659                     __end_of_LCD_init:
  1680                           
  1681                           	psect	text12
  1682  0515                     __ptext12:	
  1683 ;; *************** function _init *****************
  1684 ;; Defined at:
  1685 ;;		line 23 in file "./lcd.h"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_LCD_init
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _init
  1714  0515                     _init:
  1715  0515                     l1222:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _init: [wreg+status,2]
  1718                           
  1719                           
  1720                           ;./lcd.h: 25:  ADCON1 = 0X07;
  1721  0515  3007               	movlw	7
  1722  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0518  009F               	movwf	31	;volatile
  1725  0519                     l1224:
  1726                           
  1727                           ;./lcd.h: 26:      RA1=1;
  1728  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1729  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1730  051B  1485               	bsf	5,1	;volatile
  1731  051C                     l1226:
  1732                           
  1733                           ;./lcd.h: 27:  TRISA = 0X00;
  1734  051C  1683               	bsf	3,5	;RP0=1, select bank1
  1735  051D  1303               	bcf	3,6	;RP1=0, select bank1
  1736  051E  0185               	clrf	5	;volatile
  1737  051F                     l1228:
  1738                           
  1739                           ;./lcd.h: 28:  TRISD = 0X00;
  1740  051F  0188               	clrf	8	;volatile
  1741  0520                     l53:
  1742  0520  0008               	return
  1743  0521                     __end_of_init:
  1744                           
  1745                           	psect	text13
  1746  0521                     __ptext13:	
  1747 ;; *************** function _LCD_enable *****************
  1748 ;; Defined at:
  1749 ;;		line 85 in file "./lcd.h"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0
  1766 ;;      Totals:         0       0       0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 1
  1770 ;; This function calls:
  1771 ;;		_delay
  1772 ;; This function is called by:
  1773 ;;		_LCD_init
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _LCD_enable
  1779  0521                     _LCD_enable:
  1780  0521                     l1230:	
  1781                           ;incstack = 0
  1782                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1783                           
  1784                           
  1785                           ;./lcd.h: 87:  RA5 = 0;
  1786  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0523  1285               	bcf	5,5	;volatile
  1789                           
  1790                           ;./lcd.h: 88:  RA4 = 0;
  1791  0524  1205               	bcf	5,4	;volatile
  1792                           
  1793                           ;./lcd.h: 89:  RA3 = 0;
  1794  0525  1185               	bcf	5,3	;volatile
  1795  0526                     l1232:
  1796                           
  1797                           ;./lcd.h: 90:  delay();
  1798  0526  120A  118A  2583  120A  118A  	fcall	_delay
  1799  052B                     l1234:
  1800                           
  1801                           ;./lcd.h: 91:  RA3 = 1;
  1802  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1803  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1804  052D  1585               	bsf	5,3	;volatile
  1805  052E                     l71:
  1806  052E  0008               	return
  1807  052F                     __end_of_LCD_enable:
  1808                           
  1809                           	psect	text14
  1810  0583                     __ptext14:	
  1811 ;; *************** function _delay *****************
  1812 ;; Defined at:
  1813 ;;		line 94 in file "./lcd.h"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  i               2    0[COMMON] int 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, btemp+1
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         2       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0
  1830 ;;      Totals:         2       0       0       0       0
  1831 ;;Total ram usage:        2 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_LCD_escreve
  1837 ;;		_LCD_limpa
  1838 ;;		_LCD_linha1
  1839 ;;		_LCD_linha2
  1840 ;;		_LCD_enable
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _delay
  1846  0583                     _delay:
  1847  0583                     l1188:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1850                           
  1851                           
  1852                           ;./lcd.h: 96:  int i;;./lcd.h: 97:  for (i = 0;i < 5000;i++);
  1853  0583  01F0               	clrf	delay@i
  1854  0584  01F1               	clrf	delay@i+1
  1855  0585                     l1194:
  1856  0585  3001               	movlw	1
  1857  0586  07F0               	addwf	delay@i,f
  1858  0587  1803               	skipnc
  1859  0588  0AF1               	incf	delay@i+1,f
  1860  0589  3000               	movlw	0
  1861  058A  07F1               	addwf	delay@i+1,f
  1862  058B                     l1196:
  1863  058B  0871               	movf	delay@i+1,w
  1864  058C  3A80               	xorlw	128
  1865  058D  00FF               	movwf	btemp+1
  1866  058E  3093               	movlw	147
  1867  058F  027F               	subwf	btemp+1,w
  1868  0590  1D03               	skipz
  1869  0591  2D94               	goto	u395
  1870  0592  3088               	movlw	136
  1871  0593  0270               	subwf	delay@i,w
  1872  0594                     u395:
  1873  0594  1C03               	skipc
  1874  0595  2D97               	goto	u391
  1875  0596  2D98               	goto	u390
  1876  0597                     u391:
  1877  0597  2D85               	goto	l1194
  1878  0598                     u390:
  1879  0598                     l76:
  1880  0598  0008               	return
  1881  0599                     __end_of_delay:
  1882  007E                     btemp	set	126	;btemp
  1883  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    aux	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> senhaUserConfere(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> senhaUser(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_validaUser
    _validaUser->_strcmp
    _telaInicial->_strlen
    _LCD_linha1->_delay
    _Linha2->_strlen
    _espacoLivre->_LCD_escreve
    _LCD_linha2->_delay
    _LCD_escreve->_delay
    _LCD_limpa->_delay
    _LCD_enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1174
                        _LCD_escreve
                           _LCD_init
                          _LCD_limpa
                             _Linha2
                        _telaInicial
                         _validaUser
 ---------------------------------------------------------------------------------
 (1) _validaUser                                           3     3      0     268
                                              7 COMMON     3     3      0
                        _LCD_escreve
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _telaInicial                                          4     4      0     316
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LCD_linha1                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _Linha2                                               4     4      0     430
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha2
                        _espacoLivre
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _espacoLivre                                          0     0      0     114
                        _LCD_escreve
                         _LCD_linha2
 ---------------------------------------------------------------------------------
 (3) _LCD_linha2                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_escreve                                          1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_limpa                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      46
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_escreve
     _delay
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_limpa
     _delay
   _Linha2
     _LCD_escreve
     _LCD_linha2
       _delay
     _espacoLivre
       _LCD_escreve
       _LCD_linha2
     _strlen
   _telaInicial
     _LCD_escreve
     _LCD_linha1
       _delay
     _strlen
   _validaUser
     _LCD_escreve
     _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 29 15:29:41 2021

                      pc 0002                       l53 0520                       l62 053E  
                     l71 052E                       l56 0658                       l65 055E  
                     l59 056F                       l76 0598                       l68 054E  
                     fsr 0004              ?_LCD_enable 0070                      l161 0693  
                    l155 06D0                      l164 05FB                      l172 07D2  
                    l720 05B1                      l714 0625                      _RA1 0029  
                    _RB0 0030                      _RA3 002B                      _RB1 0031  
                    _RA4 002C                      _RB2 0032                      _RA5 002D  
                    _RB3 0033                      u400 05AB                      u401 05AA  
                    u410 0619                      u411 0618                      u420 0620  
                    u421 061F                      u430 06CA                      u431 06C9  
                    u440 068E                      u441 068D                      u450 0726  
                    u435 06C6                      u451 0725                      u460 07D2  
                    u445 068A                      u461 07D1                      u390 0598  
                    u391 0597                      u395 0594                      u950 06ED  
                    u951 06EC                      u960 0701                      u961 0700  
            ?_LCD_linha1 0070              ?_LCD_linha2 0070                      _aux 007C  
                    _msg 0022                      fsr0 0004                      indf 0000  
                   l1200 0564                     l1202 0565                     l1210 053F  
                   l1300 0534                     l1204 0566                     l1220 054B  
                   l1212 0543                     l1230 0521                     l1222 0515  
                   l1302 0535                     l1206 0567                     l1214 0544  
                   l1310 069F                     l1232 0526                     l1224 0519  
                   l1304 0536                     l1208 056C                     l1216 0545  
                   l1320 0659                     l1240 0554                     l1312 06A2  
                   l1234 052B                     l1226 051C                     l1306 053B  
                   l1218 0546                     l1250 059F                     l1330 068E  
                   l1322 0663                     l1242 0555                     l1314 06AC  
                   l1228 051F                     l1252 05A3                     l1324 0666  
                   l1244 0556                     l1236 054F                     l1316 06B2  
                   l1308 0694                     l1260 05FD                     l1340 072E  
                   l1332 0715                     l1254 05AB                     l1326 0670  
                   l1246 055B                     l1238 0553                     l1318 06CA  
                   l1270 0620                     l1262 05FE                     l1350 074C  
                   l1342 0734                     l1334 0716                     l1280 0634  
                   l1248 059A                     l1328 0676                     l1264 0602  
                   l1360 076A                     l1352 0752                     l1344 073A  
                   l1336 0726                     l1600 06F7                     l1194 0585  
                   l1290 064A                     l1282 0638                     l1274 0626  
                   l1258 05D2                     l1266 0606                     l1362 0770  
                   l1354 0758                     l1346 0740                     l1338 0728  
                   l1602 06FB                     l1196 058B                     l1188 0583  
                   l1292 064F                     l1284 063D                     l1276 062B  
                   l1268 0619                     l1364 0776                     l1356 075E  
                   l1348 0746                     l1604 0701                     l1294 0653  
                   l1286 0641                     l1278 062F                     l1198 0560  
                   l1358 0764                     l1366 0784                     l1606 070C  
                   l1288 0646                     l1296 052F                     l1368 07CC  
                   l1298 0533                     l1590 06D7                     l1592 06DB  
                   l1594 06E0                     l1586 06D1                     l1596 06E5  
                   l1588 06D5                     l1598 06ED                     u1707 077C  
           ?_LCD_escreve 0070                     _main 06D1                     _msg2 0031  
                   _init 0515                     btemp 007E             ?_espacoLivre 0070  
       _senhaUserConfere 0036                     start 0000       __size_of_LCD_limpa 0010  
       __end_of_LCD_init 0659                    ?_main 0070                    ?_init 0070  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    _delay 0583                    _input 004C  
                  pclath 000A                    status 0003                    wtemp0 007E  
    __size_of_LCD_enable 000E      __size_of_LCD_linha1 0010      __size_of_LCD_linha2 0010  
        __initialization 07D3             __end_of_main 0715             __end_of_init 0521  
           ?_telaInicial 0070                   ??_main 007A                   ??_init 0070  
      __end_of_LCD_limpa 053F                   ?_delay 0070                   _ADCON1 009F  
                 _Linha2 0659                   _config 004A                   _painel 0020  
                 delay@i 0070                   _strcmp 05FC                   _strlen 0599  
           __pdataCOMMON 007A  __end_of__initialization 07FC                ?_LCD_init 0070  
   __size_of_LCD_escreve 0011             LCD_escreve@x 0072     __size_of_espacoLivre 002A  
         __pcstackCOMMON 0070             __pidataBANK0 05B2            __end_of_delay 0599  
           ??_LCD_enable 0072             ??_LCD_linha1 0072             ??_LCD_linha2 0072  
                ??_delay 0070               __pbssBANK0 0040               ??_LCD_init 0072  
                ?_Linha2 0070       __end_of_LCD_enable 052F       __end_of_LCD_linha1 055F  
     __end_of_LCD_linha2 054F               __pmaintext 06D1                  ?_strcmp 0070  
                ?_strlen 0070     __size_of_telaInicial 003D                  Linha2@i 0077  
        __size_of_Linha2 003B                  __ptext1 0715                  __ptext2 05FC  
                __ptext3 0694                  __ptext4 054F                  __ptext5 0659  
                __ptext6 0599                  __ptext7 05D2                  __ptext8 053F  
                __ptext9 055F          __size_of_strcmp 002A          __size_of_strlen 0019  
   end_of_initialization 07FC                _LCD_limpa 052F               _validaUser 0715  
                strcmp@r 0075                  strlen@s 0074               ?_LCD_limpa 0070  
      __size_of_LCD_init 0033           __end_of_Linha2 0694            __pidataCOMMON 0513  
         __end_of_strcmp 0626           __end_of_strlen 05B2      start_initialization 07D3  
          ??_LCD_escreve 0072            ??_espacoLivre 0073              ?_validaUser 0070  
               ??_Linha2 0075               init_fetch0 0570              __pdataBANK0 0020  
               ??_strcmp 0072                 ??_strlen 0072              __pbssCOMMON 007C  
              ___latbits 0002              ??_LCD_limpa 0072      __end_of_LCD_escreve 0570  
    __end_of_espacoLivre 05FC             telaInicial@i 0077            ??_telaInicial 0075  
    __size_of_validaUser 00BE           __size_of_delay 0016                 _LCD_init 0626  
              _senhaUser 003B                _userFalse 007A      __end_of_telaInicial 06D1  
            _LCD_escreve 055F              _espacoLivre 05D2                 __ptext10 052F  
               __ptext11 0626                 __ptext12 0515                 __ptext13 0521  
               __ptext14 0583            __size_of_main 0044            __size_of_init 000C  
           ??_validaUser 0077                 _senhaCoa 0045              _telaInicial 0694  
             _LCD_enable 0521               _LCD_linha1 054F               _LCD_linha2 053F  
            _senhaConfig 0040                 init_ram0 0574       __end_of_validaUser 07D3  
               strcmp@s1 0076                 strcmp@s2 0070                 strlen@cp 0073  
