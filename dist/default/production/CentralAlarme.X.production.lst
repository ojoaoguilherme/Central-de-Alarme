

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 28 18:09:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183  04BA                     __pidataBANK0:
   184                           
   185                           ;initializer for _msg
   186  04BA  3444               	retlw	68
   187  04BB  3469               	retlw	105
   188  04BC  3467               	retlw	103
   189  04BD  3469               	retlw	105
   190  04BE  3474               	retlw	116
   191  04BF  3465               	retlw	101
   192  04C0  3420               	retlw	32
   193  04C1  3461               	retlw	97
   194  04C2  3420               	retlw	32
   195  04C3  3473               	retlw	115
   196  04C4  3465               	retlw	101
   197  04C5  346E               	retlw	110
   198  04C6  3468               	retlw	104
   199  04C7  3461               	retlw	97
   200  04C8  3400               	retlw	0
   201                           
   202                           ;initializer for _msg2
   203  04C9  345F               	retlw	95
   204  04CA  345F               	retlw	95
   205  04CB  345F               	retlw	95
   206  04CC  345F               	retlw	95
   207  04CD  3400               	retlw	0
   208  0006                     _PORTB	set	6
   209  0009                     _PORTE	set	9
   210  0008                     _PORTD	set	8
   211  0033                     _RB3	set	51
   212  0032                     _RB2	set	50
   213  0031                     _RB1	set	49
   214  0030                     _RB0	set	48
   215  002B                     _RA3	set	43
   216  002C                     _RA4	set	44
   217  002D                     _RA5	set	45
   218  0029                     _RA1	set	41
   219  0086                     _TRISB	set	134
   220  0089                     _TRISE	set	137
   221  0088                     _TRISD	set	136
   222  0085                     _TRISA	set	133
   223  009F                     _ADCON1	set	159
   224                           
   225                           	psect	cinit
   226  07EA                     start_initialization:	
   227                           ; #config settings
   228                           
   229  07EA                     __initialization:
   230                           
   231                           ; Initialize objects allocated to BANK0
   232  07EA  1383               	bcf	3,7	;select IRP bank0
   233  07EB  3034               	movlw	low (__pdataBANK0+20)
   234  07EC  00FD               	movwf	btemp+-1
   235  07ED  3004               	movlw	high __pidataBANK0
   236  07EE  00FE               	movwf	btemp
   237  07EF  30BA               	movlw	low __pidataBANK0
   238  07F0  00FF               	movwf	btemp+1
   239  07F1  3020               	movlw	low __pdataBANK0
   240  07F2  0084               	movwf	4
   241  07F3  120A  118A  24AB  120A  118A  	fcall	init_ram0
   242                           
   243                           ; Clear objects allocated to COMMON
   244  07F8  01F9               	clrf	__pbssCOMMON& (0+127)
   245  07F9  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   246  07FA  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   247  07FB  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   248  07FC                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  07FC                     __end_of__initialization:
   252  07FC  0183               	clrf	3
   253  07FD  120A  118A  2D27   	ljmp	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMMON
   256  0079                     __pbssCOMMON:
   257  0079                     _config:
   258  0079                     	ds	2
   259  007B                     _painel:
   260  007B                     	ds	2
   261                           
   262                           	psect	dataBANK0
   263  0020                     __pdataBANK0:
   264  0020                     _msg:
   265  0020                     	ds	15
   266  002F                     _msg2:
   267  002F                     	ds	5
   268                           
   269                           	psect	inittext
   270  04A7                     init_fetch0:	
   271                           ;	Called with low address in FSR and high address in W
   272                           
   273  04A7  087E               	movf	btemp,w
   274  04A8  008A               	movwf	10
   275  04A9  087F               	movf	btemp+1,w
   276  04AA  0082               	movwf	2
   277  04AB                     init_ram0:	
   278                           ;Called with:
   279                           ;	high address of idata address in btemp 
   280                           ;	low address of idata address in btemp+1 
   281                           ;	low address of data in FSR
   282                           ;	high address + 1 of data in btemp-1
   283                           
   284  04AB  120A  118A  24A7  120A  118A  	fcall	init_fetch0
   285  04B0  0080               	movwf	0
   286  04B1  0A84               	incf	4,f
   287  04B2  0804               	movf	4,w
   288  04B3  067D               	xorwf	btemp+-1,w
   289  04B4  1903               	btfsc	3,2
   290  04B5  3400               	retlw	0
   291  04B6  0AFF               	incf	btemp+1,f
   292  04B7  1903               	btfsc	3,2
   293  04B8  0AFE               	incf	btemp,f
   294  04B9  2CAB               	goto	init_ram0
   295                           
   296                           	psect	cstackCOMMON
   297  0070                     __pcstackCOMMON:
   298  0070                     ?_LCD_enable:
   299  0070                     ?_delay:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ??_delay:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_telaInicial:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_Linha2:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_teclado:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_espacoLivre:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_init:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ??_init:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_LCD_init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_LCD_escreve:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_LCD_limpa:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_LCD_linha1:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_LCD_linha2:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_liga_buzzer:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_liga_buzzer:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_strlen:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     delay@i:	
   351                           ; 2 bytes @ 0x0
   352                           
   353                           
   354                           ; 2 bytes @ 0x0
   355  0070                     	ds	2
   356  0072                     ??_LCD_enable:
   357  0072                     ??_strlen:	
   358                           ; 1 bytes @ 0x2
   359                           
   360  0072                     ??_LCD_init:	
   361                           ; 1 bytes @ 0x2
   362                           
   363  0072                     ??_LCD_escreve:	
   364                           ; 1 bytes @ 0x2
   365                           
   366  0072                     ??_LCD_limpa:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  0072                     ??_LCD_linha1:	
   370                           ; 1 bytes @ 0x2
   371                           
   372  0072                     ??_LCD_linha2:	
   373                           ; 1 bytes @ 0x2
   374                           
   375  0072                     LCD_escreve@x:	
   376                           ; 1 bytes @ 0x2
   377                           
   378                           
   379                           ; 1 bytes @ 0x2
   380  0072                     	ds	1
   381  0073                     ??_teclado:
   382  0073                     ??_espacoLivre:	
   383                           ; 1 bytes @ 0x3
   384                           
   385  0073                     strlen@cp:	
   386                           ; 1 bytes @ 0x3
   387                           
   388                           
   389                           ; 1 bytes @ 0x3
   390  0073                     	ds	1
   391  0074                     strlen@s:
   392                           
   393                           ; 1 bytes @ 0x4
   394  0074                     	ds	1
   395  0075                     ??_telaInicial:
   396  0075                     ??_Linha2:	
   397                           ; 1 bytes @ 0x5
   398                           
   399                           
   400                           ; 1 bytes @ 0x5
   401  0075                     	ds	2
   402  0077                     telaInicial@i:
   403  0077                     Linha2@i:	
   404                           ; 2 bytes @ 0x7
   405                           
   406                           
   407                           ; 2 bytes @ 0x7
   408  0077                     	ds	2
   409  0079                     ??_main:
   410                           
   411                           	psect	maintext
   412  0527                     __pmaintext:	
   413                           ; 1 bytes @ 0x9
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 26 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels required when called: 4
   439 ;; This function calls:
   440 ;;		_LCD_init
   441 ;;		_LCD_limpa
   442 ;;		_Linha2
   443 ;;		_teclado
   444 ;;		_telaInicial
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function _main
   452  0527                     _main:
   453  0527                     l1297:	
   454                           ;incstack = 0
   455                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   456                           
   457                           
   458                           ;main.c: 27:     TRISE = 0;
   459  0527  1683               	bsf	3,5	;RP0=1, select bank1
   460  0528  1303               	bcf	3,6	;RP1=0, select bank1
   461  0529  0189               	clrf	9	;volatile
   462                           
   463                           ;main.c: 28:     TRISD = 0;
   464  052A  0188               	clrf	8	;volatile
   465  052B                     l1299:
   466                           
   467                           ;main.c: 29:     TRISB = 0x0F;
   468  052B  300F               	movlw	15
   469  052C  0086               	movwf	6	;volatile
   470  052D                     l1301:
   471                           
   472                           ;main.c: 31:     PORTE = 0x01;
   473  052D  3001               	movlw	1
   474  052E  1283               	bcf	3,5	;RP0=0, select bank0
   475  052F  1303               	bcf	3,6	;RP1=0, select bank0
   476  0530  0089               	movwf	9	;volatile
   477  0531                     l1303:
   478                           
   479                           ;main.c: 33:     LCD_init();
   480  0531  120A  118A  2554  120A  118A  	fcall	_LCD_init
   481  0536                     l1305:
   482                           
   483                           ;main.c: 34:     LCD_limpa();
   484  0536  120A  118A  2466  120A  118A  	fcall	_LCD_limpa
   485  053B                     l1307:
   486                           
   487                           ;main.c: 39:         if (painel == 0){
   488  053B  087B               	movf	_painel,w
   489  053C  047C               	iorwf	_painel+1,w
   490  053D  1D03               	btfss	3,2
   491  053E  2D40               	goto	u441
   492  053F  2D41               	goto	u440
   493  0540                     u441:
   494  0540  2D50               	goto	l97
   495  0541                     u440:
   496  0541                     l1309:
   497                           
   498                           ;main.c: 40:             telaInicial();
   499  0541  120A  118A  25C2  120A  118A  	fcall	_telaInicial
   500                           
   501                           ;main.c: 41:             Linha2();
   502  0546  120A  118A  2587  120A  118A  	fcall	_Linha2
   503  054B                     l1311:
   504                           
   505                           ;main.c: 42:             painel = 1;
   506  054B  3001               	movlw	1
   507  054C  00FB               	movwf	_painel
   508  054D  3000               	movlw	0
   509  054E  00FC               	movwf	_painel+1
   510  054F  2D3B               	goto	l1307
   511  0550                     l97:
   512  0550  2D3B               	goto	l1307
   513  0551  120A  118A  2800   	ljmp	start
   514  0554                     __end_of_main:
   515                           
   516                           	psect	text1
   517  05C2                     __ptext1:	
   518 ;; *************** function _telaInicial *****************
   519 ;; Defined at:
   520 ;;		line 241 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  i               2    7[COMMON] int 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         2       0       0       0       0
   536 ;;      Temps:          2       0       0       0       0
   537 ;;      Totals:         4       0       0       0       0
   538 ;;Total ram usage:        4 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; Hardware stack levels required when called: 2
   541 ;; This function calls:
   542 ;;		_LCD_escreve
   543 ;;		_LCD_linha1
   544 ;;		_strlen
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _telaInicial
   552  05C2                     _telaInicial:
   553  05C2                     l1129:	
   554                           ;incstack = 0
   555                           ; Regs used in _telaInicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   556                           
   557                           
   558                           ;main.c: 243:     LCD_linha1();
   559  05C2  120A  118A  2486  120A  118A  	fcall	_LCD_linha1
   560                           
   561                           ;main.c: 244:     LCD_escreve(' ');
   562  05C7  3020               	movlw	32
   563  05C8  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   564  05CD                     l1131:
   565                           
   566                           ;main.c: 245:     for (int i = 0; i <= strlen(msg)-1; i++){
   567  05CD  01F7               	clrf	telaInicial@i
   568  05CE  01F8               	clrf	telaInicial@i+1
   569  05CF  2DE0               	goto	l1137
   570  05D0                     l1133:
   571                           
   572                           ;main.c: 246:         LCD_escreve(msg[i]);
   573  05D0  0877               	movf	telaInicial@i,w
   574  05D1  3E20               	addlw	(low (_msg| 0))& (0+255)
   575  05D2  0084               	movwf	4
   576  05D3  1383               	bcf	3,7	;select IRP bank0
   577  05D4  0800               	movf	0,w
   578  05D5  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   579  05DA                     l1135:
   580                           
   581                           ;main.c: 247:     }
   582  05DA  3001               	movlw	1
   583  05DB  07F7               	addwf	telaInicial@i,f
   584  05DC  1803               	skipnc
   585  05DD  0AF8               	incf	telaInicial@i+1,f
   586  05DE  3000               	movlw	0
   587  05DF  07F8               	addwf	telaInicial@i+1,f
   588  05E0                     l1137:
   589  05E0  3020               	movlw	(low (_msg| 0))& (0+255)
   590  05E1  120A  118A  24E4  120A  118A  	fcall	_strlen
   591  05E6  0870               	movf	?_strlen,w
   592  05E7  3EFF               	addlw	255
   593  05E8  00F5               	movwf	??_telaInicial
   594  05E9  0871               	movf	?_strlen+1,w
   595  05EA  1803               	skipnc
   596  05EB  3E01               	addlw	1
   597  05EC  3EFF               	addlw	255
   598  05ED  00F6               	movwf	??_telaInicial+1
   599  05EE  0878               	movf	telaInicial@i+1,w
   600  05EF  0276               	subwf	??_telaInicial+1,w
   601  05F0  1D03               	skipz
   602  05F1  2DF4               	goto	u255
   603  05F2  0877               	movf	telaInicial@i,w
   604  05F3  0275               	subwf	??_telaInicial,w
   605  05F4                     u255:
   606  05F4  1803               	skipnc
   607  05F5  2DF7               	goto	u251
   608  05F6  2DF8               	goto	u250
   609  05F7                     u251:
   610  05F7  2DD0               	goto	l1133
   611  05F8                     u250:
   612  05F8                     l1139:
   613                           
   614                           ;main.c: 248:     LCD_escreve(' ');
   615  05F8  3020               	movlw	32
   616  05F9  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   617  05FE                     l128:
   618  05FE  0008               	return
   619  05FF                     __end_of_telaInicial:
   620                           
   621                           	psect	text2
   622  0486                     __ptext2:	
   623 ;; *************** function _LCD_linha1 *****************
   624 ;; Defined at:
   625 ;;		line 65 in file "./lcd.h"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0
   642 ;;      Totals:         0       0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; Hardware stack levels required when called: 1
   646 ;; This function calls:
   647 ;;		_delay
   648 ;; This function is called by:
   649 ;;		_telaInicial
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _LCD_linha1
   655  0486                     _LCD_linha1:
   656  0486                     l1071:	
   657                           ;incstack = 0
   658                           ; Regs used in _LCD_linha1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   659                           
   660                           
   661                           ;./lcd.h: 66:     PORTD = 0x02;
   662  0486  3002               	movlw	2
   663  0487  1283               	bcf	3,5	;RP0=0, select bank0
   664  0488  1303               	bcf	3,6	;RP1=0, select bank0
   665  0489  0088               	movwf	8	;volatile
   666  048A                     l1073:
   667                           
   668                           ;./lcd.h: 67:     RA5 = 0;
   669  048A  1285               	bcf	5,5	;volatile
   670  048B                     l1075:
   671                           
   672                           ;./lcd.h: 68:     RA4 = 0;
   673  048B  1205               	bcf	5,4	;volatile
   674  048C                     l1077:
   675                           
   676                           ;./lcd.h: 69:     RA3=0;
   677  048C  1185               	bcf	5,3	;volatile
   678  048D                     l1079:
   679                           
   680                           ;./lcd.h: 70:     delay();
   681  048D  120A  118A  24CE  120A  118A  	fcall	_delay
   682  0492                     l1081:
   683                           
   684                           ;./lcd.h: 71:  RA3 = 1;
   685  0492  1283               	bcf	3,5	;RP0=0, select bank0
   686  0493  1303               	bcf	3,6	;RP1=0, select bank0
   687  0494  1585               	bsf	5,3	;volatile
   688  0495                     l63:
   689  0495  0008               	return
   690  0496                     __end_of_LCD_linha1:
   691                           
   692                           	psect	text3
   693  05FF                     __ptext3:	
   694 ;; *************** function _teclado *****************
   695 ;; Defined at:
   696 ;;		line 61 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          3       0       0       0       0
   713 ;;      Totals:         3       0       0       0       0
   714 ;;Total ram usage:        3 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 2
   717 ;; This function calls:
   718 ;;		_LCD_escreve
   719 ;;		_liga_buzzer
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _teclado
   727  05FF                     _teclado:
   728  05FF                     l1153:	
   729                           ;incstack = 0
   730                           ; Regs used in _teclado: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   731                           
   732                           
   733                           ;main.c: 63:     PORTE = 0x01;
   734  05FF  3001               	movlw	1
   735  0600  1283               	bcf	3,5	;RP0=0, select bank0
   736  0601  1303               	bcf	3,6	;RP1=0, select bank0
   737  0602  0089               	movwf	9	;volatile
   738                           
   739                           ;main.c: 67:     PORTB = 0b11101111;
   740  0603  30EF               	movlw	239
   741  0604  0086               	movwf	6	;volatile
   742  0605                     l1155:
   743                           
   744                           ;main.c: 71:     if (RB0 == 0){
   745  0605  1806               	btfsc	6,0	;volatile
   746  0606  2E08               	goto	u271
   747  0607  2E09               	goto	u270
   748  0608                     u271:
   749  0608  2E21               	goto	l1163
   750  0609                     u270:
   751  0609                     l1157:
   752                           
   753                           ;main.c: 72:         _delay((unsigned long)((200)*(20000000/4000.0)));
   754  0609  3006               	movlw	6
   755  060A  00F5               	movwf	??_teclado+2
   756  060B  3013               	movlw	19
   757  060C  00F4               	movwf	??_teclado+1
   758  060D  30AD               	movlw	173
   759  060E  00F3               	movwf	??_teclado
   760  060F                     u457:
   761  060F  0BF3               	decfsz	??_teclado,f
   762  0610  2E0F               	goto	u457
   763  0611  0BF4               	decfsz	??_teclado+1,f
   764  0612  2E0F               	goto	u457
   765  0613  0BF5               	decfsz	??_teclado+2,f
   766  0614  2E0F               	goto	u457
   767  0615  2E16               	nop2
   768  0616                     l1159:
   769                           
   770                           ;main.c: 73:         liga_buzzer();
   771  0616  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   772  061B                     l1161:
   773                           
   774                           ;main.c: 74:         LCD_escreve('0');
   775  061B  3030               	movlw	48
   776  061C  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   777  0621                     l1163:
   778                           
   779                           ;main.c: 80:     if (RB1 == 0){
   780  0621  1283               	bcf	3,5	;RP0=0, select bank0
   781  0622  1303               	bcf	3,6	;RP1=0, select bank0
   782  0623  1886               	btfsc	6,1	;volatile
   783  0624  2E26               	goto	u281
   784  0625  2E27               	goto	u280
   785  0626                     u281:
   786  0626  2E3F               	goto	l1171
   787  0627                     u280:
   788  0627                     l1165:
   789                           
   790                           ;main.c: 81:         _delay((unsigned long)((200)*(20000000/4000.0)));
   791  0627  3006               	movlw	6
   792  0628  00F5               	movwf	??_teclado+2
   793  0629  3013               	movlw	19
   794  062A  00F4               	movwf	??_teclado+1
   795  062B  30AD               	movlw	173
   796  062C  00F3               	movwf	??_teclado
   797  062D                     u467:
   798  062D  0BF3               	decfsz	??_teclado,f
   799  062E  2E2D               	goto	u467
   800  062F  0BF4               	decfsz	??_teclado+1,f
   801  0630  2E2D               	goto	u467
   802  0631  0BF5               	decfsz	??_teclado+2,f
   803  0632  2E2D               	goto	u467
   804  0633  2E34               	nop2
   805  0634                     l1167:
   806                           
   807                           ;main.c: 82:         liga_buzzer();
   808  0634  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   809  0639                     l1169:
   810                           
   811                           ;main.c: 83:         LCD_escreve('1');
   812  0639  3031               	movlw	49
   813  063A  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   814  063F                     l1171:
   815                           
   816                           ;main.c: 90:     if (RB2 == 0){
   817  063F  1283               	bcf	3,5	;RP0=0, select bank0
   818  0640  1303               	bcf	3,6	;RP1=0, select bank0
   819  0641  1906               	btfsc	6,2	;volatile
   820  0642  2E44               	goto	u291
   821  0643  2E45               	goto	u290
   822  0644                     u291:
   823  0644  2E5D               	goto	l1179
   824  0645                     u290:
   825  0645                     l1173:
   826                           
   827                           ;main.c: 91:         _delay((unsigned long)((200)*(20000000/4000.0)));
   828  0645  3006               	movlw	6
   829  0646  00F5               	movwf	??_teclado+2
   830  0647  3013               	movlw	19
   831  0648  00F4               	movwf	??_teclado+1
   832  0649  30AD               	movlw	173
   833  064A  00F3               	movwf	??_teclado
   834  064B                     u477:
   835  064B  0BF3               	decfsz	??_teclado,f
   836  064C  2E4B               	goto	u477
   837  064D  0BF4               	decfsz	??_teclado+1,f
   838  064E  2E4B               	goto	u477
   839  064F  0BF5               	decfsz	??_teclado+2,f
   840  0650  2E4B               	goto	u477
   841  0651  2E52               	nop2
   842  0652                     l1175:
   843                           
   844                           ;main.c: 92:         liga_buzzer();
   845  0652  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   846  0657                     l1177:
   847                           
   848                           ;main.c: 93:         LCD_escreve('2');
   849  0657  3032               	movlw	50
   850  0658  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   851  065D                     l1179:
   852                           
   853                           ;main.c: 99:     if (RB3 == 0){
   854  065D  1283               	bcf	3,5	;RP0=0, select bank0
   855  065E  1303               	bcf	3,6	;RP1=0, select bank0
   856  065F  1986               	btfsc	6,3	;volatile
   857  0660  2E62               	goto	u301
   858  0661  2E63               	goto	u300
   859  0662                     u301:
   860  0662  2E7B               	goto	l1187
   861  0663                     u300:
   862  0663                     l1181:
   863                           
   864                           ;main.c: 100:         _delay((unsigned long)((200)*(20000000/4000.0)));
   865  0663  3006               	movlw	6
   866  0664  00F5               	movwf	??_teclado+2
   867  0665  3013               	movlw	19
   868  0666  00F4               	movwf	??_teclado+1
   869  0667  30AD               	movlw	173
   870  0668  00F3               	movwf	??_teclado
   871  0669                     u487:
   872  0669  0BF3               	decfsz	??_teclado,f
   873  066A  2E69               	goto	u487
   874  066B  0BF4               	decfsz	??_teclado+1,f
   875  066C  2E69               	goto	u487
   876  066D  0BF5               	decfsz	??_teclado+2,f
   877  066E  2E69               	goto	u487
   878  066F  2E70               	nop2
   879  0670                     l1183:
   880                           
   881                           ;main.c: 101:         liga_buzzer();
   882  0670  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   883  0675                     l1185:
   884                           
   885                           ;main.c: 102:         LCD_escreve('3');
   886  0675  3033               	movlw	51
   887  0676  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   888  067B                     l1187:
   889                           
   890                           ;main.c: 109:     PORTB = 0b11011111;
   891  067B  30DF               	movlw	223
   892  067C  1283               	bcf	3,5	;RP0=0, select bank0
   893  067D  1303               	bcf	3,6	;RP1=0, select bank0
   894  067E  0086               	movwf	6	;volatile
   895  067F                     l1189:
   896                           
   897                           ;main.c: 114:     if (RB0 == 0){
   898  067F  1806               	btfsc	6,0	;volatile
   899  0680  2E82               	goto	u311
   900  0681  2E83               	goto	u310
   901  0682                     u311:
   902  0682  2E9B               	goto	l1197
   903  0683                     u310:
   904  0683                     l1191:
   905                           
   906                           ;main.c: 115:         _delay((unsigned long)((200)*(20000000/4000.0)));
   907  0683  3006               	movlw	6
   908  0684  00F5               	movwf	??_teclado+2
   909  0685  3013               	movlw	19
   910  0686  00F4               	movwf	??_teclado+1
   911  0687  30AD               	movlw	173
   912  0688  00F3               	movwf	??_teclado
   913  0689                     u497:
   914  0689  0BF3               	decfsz	??_teclado,f
   915  068A  2E89               	goto	u497
   916  068B  0BF4               	decfsz	??_teclado+1,f
   917  068C  2E89               	goto	u497
   918  068D  0BF5               	decfsz	??_teclado+2,f
   919  068E  2E89               	goto	u497
   920  068F  2E90               	nop2
   921  0690                     l1193:
   922                           
   923                           ;main.c: 116:         liga_buzzer();
   924  0690  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   925  0695                     l1195:
   926                           
   927                           ;main.c: 117:         LCD_escreve('4');
   928  0695  3034               	movlw	52
   929  0696  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   930  069B                     l1197:
   931                           
   932                           ;main.c: 123:     if (RB1 == 0){
   933  069B  1283               	bcf	3,5	;RP0=0, select bank0
   934  069C  1303               	bcf	3,6	;RP1=0, select bank0
   935  069D  1886               	btfsc	6,1	;volatile
   936  069E  2EA0               	goto	u321
   937  069F  2EA1               	goto	u320
   938  06A0                     u321:
   939  06A0  2EB9               	goto	l1205
   940  06A1                     u320:
   941  06A1                     l1199:
   942                           
   943                           ;main.c: 124:         _delay((unsigned long)((200)*(20000000/4000.0)));
   944  06A1  3006               	movlw	6
   945  06A2  00F5               	movwf	??_teclado+2
   946  06A3  3013               	movlw	19
   947  06A4  00F4               	movwf	??_teclado+1
   948  06A5  30AD               	movlw	173
   949  06A6  00F3               	movwf	??_teclado
   950  06A7                     u507:
   951  06A7  0BF3               	decfsz	??_teclado,f
   952  06A8  2EA7               	goto	u507
   953  06A9  0BF4               	decfsz	??_teclado+1,f
   954  06AA  2EA7               	goto	u507
   955  06AB  0BF5               	decfsz	??_teclado+2,f
   956  06AC  2EA7               	goto	u507
   957  06AD  2EAE               	nop2
   958  06AE                     l1201:
   959                           
   960                           ;main.c: 125:         liga_buzzer();
   961  06AE  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   962  06B3                     l1203:
   963                           
   964                           ;main.c: 126:         LCD_escreve('5');
   965  06B3  3035               	movlw	53
   966  06B4  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
   967  06B9                     l1205:
   968                           
   969                           ;main.c: 133:     if (RB2 == 0){
   970  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   971  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   972  06BB  1906               	btfsc	6,2	;volatile
   973  06BC  2EBE               	goto	u331
   974  06BD  2EBF               	goto	u330
   975  06BE                     u331:
   976  06BE  2ED7               	goto	l1213
   977  06BF                     u330:
   978  06BF                     l1207:
   979                           
   980                           ;main.c: 134:         _delay((unsigned long)((200)*(20000000/4000.0)));
   981  06BF  3006               	movlw	6
   982  06C0  00F5               	movwf	??_teclado+2
   983  06C1  3013               	movlw	19
   984  06C2  00F4               	movwf	??_teclado+1
   985  06C3  30AD               	movlw	173
   986  06C4  00F3               	movwf	??_teclado
   987  06C5                     u517:
   988  06C5  0BF3               	decfsz	??_teclado,f
   989  06C6  2EC5               	goto	u517
   990  06C7  0BF4               	decfsz	??_teclado+1,f
   991  06C8  2EC5               	goto	u517
   992  06C9  0BF5               	decfsz	??_teclado+2,f
   993  06CA  2EC5               	goto	u517
   994  06CB  2ECC               	nop2
   995  06CC                     l1209:
   996                           
   997                           ;main.c: 135:         liga_buzzer();
   998  06CC  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
   999  06D1                     l1211:
  1000                           
  1001                           ;main.c: 136:         LCD_escreve('6');
  1002  06D1  3036               	movlw	54
  1003  06D2  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1004  06D7                     l1213:
  1005                           
  1006                           ;main.c: 142:     if (RB3 == 0){
  1007  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1008  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1009  06D9  1986               	btfsc	6,3	;volatile
  1010  06DA  2EDC               	goto	u341
  1011  06DB  2EDD               	goto	u340
  1012  06DC                     u341:
  1013  06DC  2EF5               	goto	l1221
  1014  06DD                     u340:
  1015  06DD                     l1215:
  1016                           
  1017                           ;main.c: 143:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1018  06DD  3006               	movlw	6
  1019  06DE  00F5               	movwf	??_teclado+2
  1020  06DF  3013               	movlw	19
  1021  06E0  00F4               	movwf	??_teclado+1
  1022  06E1  30AD               	movlw	173
  1023  06E2  00F3               	movwf	??_teclado
  1024  06E3                     u527:
  1025  06E3  0BF3               	decfsz	??_teclado,f
  1026  06E4  2EE3               	goto	u527
  1027  06E5  0BF4               	decfsz	??_teclado+1,f
  1028  06E6  2EE3               	goto	u527
  1029  06E7  0BF5               	decfsz	??_teclado+2,f
  1030  06E8  2EE3               	goto	u527
  1031  06E9  2EEA               	nop2
  1032  06EA                     l1217:
  1033                           
  1034                           ;main.c: 144:         liga_buzzer();
  1035  06EA  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1036  06EF                     l1219:
  1037                           
  1038                           ;main.c: 145:         LCD_escreve('7');
  1039  06EF  3037               	movlw	55
  1040  06F0  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1041  06F5                     l1221:
  1042                           
  1043                           ;main.c: 152:     PORTB = 0b10111111;
  1044  06F5  30BF               	movlw	191
  1045  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1046  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1047  06F8  0086               	movwf	6	;volatile
  1048  06F9                     l1223:
  1049                           
  1050                           ;main.c: 157:     if (RB0 == 0){
  1051  06F9  1806               	btfsc	6,0	;volatile
  1052  06FA  2EFC               	goto	u351
  1053  06FB  2EFD               	goto	u350
  1054  06FC                     u351:
  1055  06FC  2F15               	goto	l1231
  1056  06FD                     u350:
  1057  06FD                     l1225:
  1058                           
  1059                           ;main.c: 158:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1060  06FD  3006               	movlw	6
  1061  06FE  00F5               	movwf	??_teclado+2
  1062  06FF  3013               	movlw	19
  1063  0700  00F4               	movwf	??_teclado+1
  1064  0701  30AD               	movlw	173
  1065  0702  00F3               	movwf	??_teclado
  1066  0703                     u537:
  1067  0703  0BF3               	decfsz	??_teclado,f
  1068  0704  2F03               	goto	u537
  1069  0705  0BF4               	decfsz	??_teclado+1,f
  1070  0706  2F03               	goto	u537
  1071  0707  0BF5               	decfsz	??_teclado+2,f
  1072  0708  2F03               	goto	u537
  1073  0709  2F0A               	nop2
  1074  070A                     l1227:
  1075                           
  1076                           ;main.c: 159:         liga_buzzer();
  1077  070A  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1078  070F                     l1229:
  1079                           
  1080                           ;main.c: 160:         LCD_escreve('8');
  1081  070F  3038               	movlw	56
  1082  0710  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1083  0715                     l1231:
  1084                           
  1085                           ;main.c: 167:     if (RB1 == 0){
  1086  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0717  1886               	btfsc	6,1	;volatile
  1089  0718  2F1A               	goto	u361
  1090  0719  2F1B               	goto	u360
  1091  071A                     u361:
  1092  071A  2F33               	goto	l1239
  1093  071B                     u360:
  1094  071B                     l1233:
  1095                           
  1096                           ;main.c: 168:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1097  071B  3006               	movlw	6
  1098  071C  00F5               	movwf	??_teclado+2
  1099  071D  3013               	movlw	19
  1100  071E  00F4               	movwf	??_teclado+1
  1101  071F  30AD               	movlw	173
  1102  0720  00F3               	movwf	??_teclado
  1103  0721                     u547:
  1104  0721  0BF3               	decfsz	??_teclado,f
  1105  0722  2F21               	goto	u547
  1106  0723  0BF4               	decfsz	??_teclado+1,f
  1107  0724  2F21               	goto	u547
  1108  0725  0BF5               	decfsz	??_teclado+2,f
  1109  0726  2F21               	goto	u547
  1110  0727  2F28               	nop2
  1111  0728                     l1235:
  1112                           
  1113                           ;main.c: 169:         liga_buzzer();
  1114  0728  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1115  072D                     l1237:
  1116                           
  1117                           ;main.c: 170:         LCD_escreve('9');
  1118  072D  3039               	movlw	57
  1119  072E  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1120  0733                     l1239:
  1121                           
  1122                           ;main.c: 177:     if (RB2 == 0){
  1123  0733  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0734  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0735  1906               	btfsc	6,2	;volatile
  1126  0736  2F38               	goto	u371
  1127  0737  2F39               	goto	u370
  1128  0738                     u371:
  1129  0738  2F51               	goto	l1247
  1130  0739                     u370:
  1131  0739                     l1241:
  1132                           
  1133                           ;main.c: 178:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1134  0739  3006               	movlw	6
  1135  073A  00F5               	movwf	??_teclado+2
  1136  073B  3013               	movlw	19
  1137  073C  00F4               	movwf	??_teclado+1
  1138  073D  30AD               	movlw	173
  1139  073E  00F3               	movwf	??_teclado
  1140  073F                     u557:
  1141  073F  0BF3               	decfsz	??_teclado,f
  1142  0740  2F3F               	goto	u557
  1143  0741  0BF4               	decfsz	??_teclado+1,f
  1144  0742  2F3F               	goto	u557
  1145  0743  0BF5               	decfsz	??_teclado+2,f
  1146  0744  2F3F               	goto	u557
  1147  0745  2F46               	nop2
  1148  0746                     l1243:
  1149                           
  1150                           ;main.c: 179:         liga_buzzer();
  1151  0746  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1152  074B                     l1245:
  1153                           
  1154                           ;main.c: 180:         LCD_escreve('A');
  1155  074B  3041               	movlw	65
  1156  074C  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1157  0751                     l1247:
  1158                           
  1159                           ;main.c: 187:     if (RB3 == 0){
  1160  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0753  1986               	btfsc	6,3	;volatile
  1163  0754  2F56               	goto	u381
  1164  0755  2F57               	goto	u380
  1165  0756                     u381:
  1166  0756  2F6F               	goto	l1255
  1167  0757                     u380:
  1168  0757                     l1249:
  1169                           
  1170                           ;main.c: 188:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1171  0757  3006               	movlw	6
  1172  0758  00F5               	movwf	??_teclado+2
  1173  0759  3013               	movlw	19
  1174  075A  00F4               	movwf	??_teclado+1
  1175  075B  30AD               	movlw	173
  1176  075C  00F3               	movwf	??_teclado
  1177  075D                     u567:
  1178  075D  0BF3               	decfsz	??_teclado,f
  1179  075E  2F5D               	goto	u567
  1180  075F  0BF4               	decfsz	??_teclado+1,f
  1181  0760  2F5D               	goto	u567
  1182  0761  0BF5               	decfsz	??_teclado+2,f
  1183  0762  2F5D               	goto	u567
  1184  0763  2F64               	nop2
  1185  0764                     l1251:
  1186                           
  1187                           ;main.c: 189:         liga_buzzer();
  1188  0764  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1189  0769                     l1253:
  1190                           
  1191                           ;main.c: 190:         LCD_escreve('B');
  1192  0769  3042               	movlw	66
  1193  076A  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1194  076F                     l1255:
  1195                           
  1196                           ;main.c: 197:     PORTB = 0b01111111;
  1197  076F  307F               	movlw	127
  1198  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0772  0086               	movwf	6	;volatile
  1201  0773                     l1257:
  1202                           
  1203                           ;main.c: 202:     if (RB0 == 0){
  1204  0773  1806               	btfsc	6,0	;volatile
  1205  0774  2F76               	goto	u391
  1206  0775  2F77               	goto	u390
  1207  0776                     u391:
  1208  0776  2F8F               	goto	l1265
  1209  0777                     u390:
  1210  0777                     l1259:
  1211                           
  1212                           ;main.c: 203:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1213  0777  3006               	movlw	6
  1214  0778  00F5               	movwf	??_teclado+2
  1215  0779  3013               	movlw	19
  1216  077A  00F4               	movwf	??_teclado+1
  1217  077B  30AD               	movlw	173
  1218  077C  00F3               	movwf	??_teclado
  1219  077D                     u577:
  1220  077D  0BF3               	decfsz	??_teclado,f
  1221  077E  2F7D               	goto	u577
  1222  077F  0BF4               	decfsz	??_teclado+1,f
  1223  0780  2F7D               	goto	u577
  1224  0781  0BF5               	decfsz	??_teclado+2,f
  1225  0782  2F7D               	goto	u577
  1226  0783  2F84               	nop2
  1227  0784                     l1261:
  1228                           
  1229                           ;main.c: 204:         liga_buzzer();
  1230  0784  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1231  0789                     l1263:
  1232                           
  1233                           ;main.c: 205:         LCD_escreve('C');
  1234  0789  3043               	movlw	67
  1235  078A  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1236  078F                     l1265:
  1237                           
  1238                           ;main.c: 212:     if (RB1 == 0){
  1239  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0791  1886               	btfsc	6,1	;volatile
  1242  0792  2F94               	goto	u401
  1243  0793  2F95               	goto	u400
  1244  0794                     u401:
  1245  0794  2FAD               	goto	l1273
  1246  0795                     u400:
  1247  0795                     l1267:
  1248                           
  1249                           ;main.c: 213:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1250  0795  3006               	movlw	6
  1251  0796  00F5               	movwf	??_teclado+2
  1252  0797  3013               	movlw	19
  1253  0798  00F4               	movwf	??_teclado+1
  1254  0799  30AD               	movlw	173
  1255  079A  00F3               	movwf	??_teclado
  1256  079B                     u587:
  1257  079B  0BF3               	decfsz	??_teclado,f
  1258  079C  2F9B               	goto	u587
  1259  079D  0BF4               	decfsz	??_teclado+1,f
  1260  079E  2F9B               	goto	u587
  1261  079F  0BF5               	decfsz	??_teclado+2,f
  1262  07A0  2F9B               	goto	u587
  1263  07A1  2FA2               	nop2
  1264  07A2                     l1269:
  1265                           
  1266                           ;main.c: 214:         liga_buzzer();
  1267  07A2  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1268  07A7                     l1271:
  1269                           
  1270                           ;main.c: 215:         LCD_escreve('D');
  1271  07A7  3044               	movlw	68
  1272  07A8  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1273  07AD                     l1273:
  1274                           
  1275                           ;main.c: 222:     if (RB2 == 0){
  1276  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1277  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1278  07AF  1906               	btfsc	6,2	;volatile
  1279  07B0  2FB2               	goto	u411
  1280  07B1  2FB3               	goto	u410
  1281  07B2                     u411:
  1282  07B2  2FCB               	goto	l1281
  1283  07B3                     u410:
  1284  07B3                     l1275:
  1285                           
  1286                           ;main.c: 223:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1287  07B3  3006               	movlw	6
  1288  07B4  00F5               	movwf	??_teclado+2
  1289  07B5  3013               	movlw	19
  1290  07B6  00F4               	movwf	??_teclado+1
  1291  07B7  30AD               	movlw	173
  1292  07B8  00F3               	movwf	??_teclado
  1293  07B9                     u597:
  1294  07B9  0BF3               	decfsz	??_teclado,f
  1295  07BA  2FB9               	goto	u597
  1296  07BB  0BF4               	decfsz	??_teclado+1,f
  1297  07BC  2FB9               	goto	u597
  1298  07BD  0BF5               	decfsz	??_teclado+2,f
  1299  07BE  2FB9               	goto	u597
  1300  07BF  2FC0               	nop2
  1301  07C0                     l1277:
  1302                           
  1303                           ;main.c: 224:         liga_buzzer();
  1304  07C0  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1305  07C5                     l1279:
  1306                           
  1307                           ;main.c: 225:         LCD_escreve('E');
  1308  07C5  3045               	movlw	69
  1309  07C6  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1310  07CB                     l1281:
  1311                           
  1312                           ;main.c: 232:     if (RB3 == 0){
  1313  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1314  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1315  07CD  1986               	btfsc	6,3	;volatile
  1316  07CE  2FD0               	goto	u421
  1317  07CF  2FD1               	goto	u420
  1318  07D0                     u421:
  1319  07D0  2FE9               	goto	l122
  1320  07D1                     u420:
  1321  07D1                     l1283:
  1322                           
  1323                           ;main.c: 233:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1324  07D1  3006               	movlw	6
  1325  07D2  00F5               	movwf	??_teclado+2
  1326  07D3  3013               	movlw	19
  1327  07D4  00F4               	movwf	??_teclado+1
  1328  07D5  30AD               	movlw	173
  1329  07D6  00F3               	movwf	??_teclado
  1330  07D7                     u607:
  1331  07D7  0BF3               	decfsz	??_teclado,f
  1332  07D8  2FD7               	goto	u607
  1333  07D9  0BF4               	decfsz	??_teclado+1,f
  1334  07DA  2FD7               	goto	u607
  1335  07DB  0BF5               	decfsz	??_teclado+2,f
  1336  07DC  2FD7               	goto	u607
  1337  07DD  2FDE               	nop2
  1338  07DE                     l1285:
  1339                           
  1340                           ;main.c: 234:         liga_buzzer();
  1341  07DE  120A  118A  244B  120A  118A  	fcall	_liga_buzzer
  1342  07E3                     l1287:
  1343                           
  1344                           ;main.c: 235:         LCD_escreve('F');
  1345  07E3  3046               	movlw	70
  1346  07E4  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1347  07E9                     l122:
  1348  07E9  0008               	return
  1349  07EA                     __end_of_teclado:
  1350                           
  1351                           	psect	text4
  1352  044B                     __ptext4:	
  1353 ;; *************** function _liga_buzzer *****************
  1354 ;; Defined at:
  1355 ;;		line 55 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0
  1372 ;;      Totals:         2       0       0       0       0
  1373 ;;Total ram usage:        2 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_teclado
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _liga_buzzer
  1384  044B                     _liga_buzzer:
  1385  044B                     l795:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _liga_buzzer: [wreg+status,2]
  1388                           
  1389                           
  1390                           ;main.c: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1391  044B  3041               	movlw	65
  1392  044C  00F1               	movwf	??_liga_buzzer+1
  1393  044D  30EE               	movlw	238
  1394  044E  00F0               	movwf	??_liga_buzzer
  1395  044F                     u617:
  1396  044F  0BF0               	decfsz	??_liga_buzzer,f
  1397  0450  2C4F               	goto	u617
  1398  0451  0BF1               	decfsz	??_liga_buzzer+1,f
  1399  0452  2C4F               	goto	u617
  1400  0453  0000               	nop
  1401  0454                     l797:
  1402                           
  1403                           ;main.c: 57:     PORTE = 0;
  1404  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0456  0189               	clrf	9	;volatile
  1407  0457                     l103:
  1408  0457  0008               	return
  1409  0458                     __end_of_liga_buzzer:
  1410                           
  1411                           	psect	text5
  1412  0587                     __ptext5:	
  1413 ;; *************** function _Linha2 *****************
  1414 ;; Defined at:
  1415 ;;		line 253 in file "main.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  i               2    7[COMMON] int 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         2       0       0       0       0
  1431 ;;      Temps:          2       0       0       0       0
  1432 ;;      Totals:         4       0       0       0       0
  1433 ;;Total ram usage:        4 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 3
  1436 ;; This function calls:
  1437 ;;		_LCD_escreve
  1438 ;;		_LCD_linha2
  1439 ;;		_espacoLivre
  1440 ;;		_strlen
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _Linha2
  1448  0587                     _Linha2:
  1449  0587                     l1141:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _Linha2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1452                           
  1453                           
  1454                           ;main.c: 254:     LCD_linha2();
  1455  0587  120A  118A  2476  120A  118A  	fcall	_LCD_linha2
  1456                           
  1457                           ;main.c: 255:     espacoLivre();
  1458  058C  120A  118A  24FD  120A  118A  	fcall	_espacoLivre
  1459  0591                     l1143:
  1460                           
  1461                           ;main.c: 256:     for (int i = 0; i <= strlen(msg2)-1; i++){
  1462  0591  01F7               	clrf	Linha2@i
  1463  0592  01F8               	clrf	Linha2@i+1
  1464  0593  2DA4               	goto	l1149
  1465  0594                     l1145:
  1466                           
  1467                           ;main.c: 257:         LCD_escreve(msg2[i]);
  1468  0594  0877               	movf	Linha2@i,w
  1469  0595  3E2F               	addlw	(low (_msg2| 0))& (0+255)
  1470  0596  0084               	movwf	4
  1471  0597  1383               	bcf	3,7	;select IRP bank0
  1472  0598  0800               	movf	0,w
  1473  0599  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1474  059E                     l1147:
  1475                           
  1476                           ;main.c: 258:     }
  1477  059E  3001               	movlw	1
  1478  059F  07F7               	addwf	Linha2@i,f
  1479  05A0  1803               	skipnc
  1480  05A1  0AF8               	incf	Linha2@i+1,f
  1481  05A2  3000               	movlw	0
  1482  05A3  07F8               	addwf	Linha2@i+1,f
  1483  05A4                     l1149:
  1484  05A4  302F               	movlw	(low (_msg2| 0))& (0+255)
  1485  05A5  120A  118A  24E4  120A  118A  	fcall	_strlen
  1486  05AA  0870               	movf	?_strlen,w
  1487  05AB  3EFF               	addlw	255
  1488  05AC  00F5               	movwf	??_Linha2
  1489  05AD  0871               	movf	?_strlen+1,w
  1490  05AE  1803               	skipnc
  1491  05AF  3E01               	addlw	1
  1492  05B0  3EFF               	addlw	255
  1493  05B1  00F6               	movwf	??_Linha2+1
  1494  05B2  0878               	movf	Linha2@i+1,w
  1495  05B3  0276               	subwf	??_Linha2+1,w
  1496  05B4  1D03               	skipz
  1497  05B5  2DB8               	goto	u265
  1498  05B6  0877               	movf	Linha2@i,w
  1499  05B7  0275               	subwf	??_Linha2,w
  1500  05B8                     u265:
  1501  05B8  1803               	skipnc
  1502  05B9  2DBB               	goto	u261
  1503  05BA  2DBC               	goto	u260
  1504  05BB                     u261:
  1505  05BB  2D94               	goto	l1145
  1506  05BC                     u260:
  1507  05BC                     l1151:
  1508                           
  1509                           ;main.c: 259:     espacoLivre();
  1510  05BC  120A  118A  24FD  120A  118A  	fcall	_espacoLivre
  1511  05C1                     l134:
  1512  05C1  0008               	return
  1513  05C2                     __end_of_Linha2:
  1514                           
  1515                           	psect	text6
  1516  04E4                     __ptext6:	
  1517 ;; *************** function _strlen *****************
  1518 ;; Defined at:
  1519 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  s               1    wreg     PTR const unsigned char 
  1522 ;;		 -> msg2(5), msg(15), 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  s               1    4[COMMON] PTR const unsigned char 
  1525 ;;		 -> msg2(5), msg(15), 
  1526 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1527 ;;		 -> msg2(5), msg(15), 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  2    0[COMMON] unsigned int 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         2       0       0       0       0
  1538 ;;      Locals:         2       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0
  1540 ;;      Totals:         5       0       0       0       0
  1541 ;;Total ram usage:        5 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_telaInicial
  1547 ;;		_Linha2
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _strlen
  1553  04E4                     _strlen:
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1557                           ;strlen@s stored from wreg
  1558  04E4  00F4               	movwf	strlen@s
  1559  04E5                     l1083:
  1560  04E5  0874               	movf	strlen@s,w
  1561  04E6  00F2               	movwf	??_strlen
  1562  04E7  0872               	movf	??_strlen,w
  1563  04E8  00F3               	movwf	strlen@cp
  1564  04E9  2CEE               	goto	l1087
  1565  04EA                     l1085:
  1566  04EA  3001               	movlw	1
  1567  04EB  00F2               	movwf	??_strlen
  1568  04EC  0872               	movf	??_strlen,w
  1569  04ED  07F3               	addwf	strlen@cp,f
  1570  04EE                     l1087:
  1571  04EE  0873               	movf	strlen@cp,w
  1572  04EF  0084               	movwf	4
  1573  04F0  1383               	bcf	3,7	;select IRP bank0
  1574  04F1  0800               	movf	0,w
  1575  04F2  1D03               	btfss	3,2
  1576  04F3  2CF5               	goto	u241
  1577  04F4  2CF6               	goto	u240
  1578  04F5                     u241:
  1579  04F5  2CEA               	goto	l1085
  1580  04F6                     u240:
  1581  04F6                     l1089:
  1582  04F6  0874               	movf	strlen@s,w
  1583  04F7  0273               	subwf	strlen@cp,w
  1584  04F8  00F0               	movwf	?_strlen
  1585  04F9  01F1               	clrf	?_strlen+1
  1586  04FA  1BF0               	btfsc	?_strlen,7
  1587  04FB  03F1               	decf	?_strlen+1,f
  1588  04FC                     l677:
  1589  04FC  0008               	return
  1590  04FD                     __end_of_strlen:
  1591                           
  1592                           	psect	text7
  1593  04FD                     __ptext7:	
  1594 ;; *************** function _espacoLivre *****************
  1595 ;; Defined at:
  1596 ;;		line 263 in file "main.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 2
  1617 ;; This function calls:
  1618 ;;		_LCD_escreve
  1619 ;;		_LCD_linha2
  1620 ;; This function is called by:
  1621 ;;		_Linha2
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _espacoLivre
  1627  04FD                     _espacoLivre:
  1628  04FD                     l1093:	
  1629                           ;incstack = 0
  1630                           ; Regs used in _espacoLivre: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1631                           
  1632                           
  1633                           ;main.c: 264:     LCD_linha2();
  1634  04FD  120A  118A  2476  120A  118A  	fcall	_LCD_linha2
  1635                           
  1636                           ;main.c: 265:     LCD_escreve(' ');
  1637  0502  3020               	movlw	32
  1638  0503  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1639                           
  1640                           ;main.c: 266:     LCD_escreve(' ');
  1641  0508  3020               	movlw	32
  1642  0509  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1643                           
  1644                           ;main.c: 267:     LCD_escreve(' ');
  1645  050E  3020               	movlw	32
  1646  050F  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1647                           
  1648                           ;main.c: 268:     LCD_escreve(' ');
  1649  0514  3020               	movlw	32
  1650  0515  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1651                           
  1652                           ;main.c: 269:     LCD_escreve(' ');
  1653  051A  3020               	movlw	32
  1654  051B  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1655                           
  1656                           ;main.c: 270:     LCD_escreve(' ');
  1657  0520  3020               	movlw	32
  1658  0521  120A  118A  2496  120A  118A  	fcall	_LCD_escreve
  1659  0526                     l137:
  1660  0526  0008               	return
  1661  0527                     __end_of_espacoLivre:
  1662                           
  1663                           	psect	text8
  1664  0476                     __ptext8:	
  1665 ;; *************** function _LCD_linha2 *****************
  1666 ;; Defined at:
  1667 ;;		line 73 in file "./lcd.h"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1681 ;;      Params:         0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 1
  1688 ;; This function calls:
  1689 ;;		_delay
  1690 ;; This function is called by:
  1691 ;;		_Linha2
  1692 ;;		_espacoLivre
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _LCD_linha2
  1698  0476                     _LCD_linha2:
  1699  0476                     l1053:	
  1700                           ;incstack = 0
  1701                           ; Regs used in _LCD_linha2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1702                           
  1703                           
  1704                           ;./lcd.h: 74:     PORTD = 0xC0;
  1705  0476  30C0               	movlw	192
  1706  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0479  0088               	movwf	8	;volatile
  1709  047A                     l1055:
  1710                           
  1711                           ;./lcd.h: 75:     RA5 = 0;
  1712  047A  1285               	bcf	5,5	;volatile
  1713  047B                     l1057:
  1714                           
  1715                           ;./lcd.h: 76:     RA4 = 0;
  1716  047B  1205               	bcf	5,4	;volatile
  1717  047C                     l1059:
  1718                           
  1719                           ;./lcd.h: 77:     RA3=0;
  1720  047C  1185               	bcf	5,3	;volatile
  1721  047D                     l1061:
  1722                           
  1723                           ;./lcd.h: 78:     delay();
  1724  047D  120A  118A  24CE  120A  118A  	fcall	_delay
  1725  0482                     l1063:
  1726                           
  1727                           ;./lcd.h: 79:  RA3 = 1;
  1728  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0484  1585               	bsf	5,3	;volatile
  1731  0485                     l66:
  1732  0485  0008               	return
  1733  0486                     __end_of_LCD_linha2:
  1734                           
  1735                           	psect	text9
  1736  0496                     __ptext9:	
  1737 ;; *************** function _LCD_escreve *****************
  1738 ;; Defined at:
  1739 ;;		line 46 in file "./lcd.h"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  x               1    wreg     unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  x               1    2[COMMON] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       0       0       0
  1754 ;;      Locals:         1       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0
  1756 ;;      Totals:         1       0       0       0       0
  1757 ;;Total ram usage:        1 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 1
  1760 ;; This function calls:
  1761 ;;		_delay
  1762 ;; This function is called by:
  1763 ;;		_teclado
  1764 ;;		_telaInicial
  1765 ;;		_Linha2
  1766 ;;		_espacoLivre
  1767 ;;		_LCD_escreveFrase
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _LCD_escreve
  1773  0496                     _LCD_escreve:
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in _LCD_escreve: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1777                           ;LCD_escreve@x stored from wreg
  1778  0496  00F2               	movwf	LCD_escreve@x
  1779  0497                     l1041:
  1780                           
  1781                           ;./lcd.h: 46: void LCD_escreve(char x);./lcd.h: 47: {;./lcd.h: 48:  PORTD = x;
  1782  0497  0872               	movf	LCD_escreve@x,w
  1783  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1785  049A  0088               	movwf	8	;volatile
  1786  049B                     l1043:
  1787                           
  1788                           ;./lcd.h: 49:  RA5 = 1;
  1789  049B  1685               	bsf	5,5	;volatile
  1790  049C                     l1045:
  1791                           
  1792                           ;./lcd.h: 50:  RA4 = 0;
  1793  049C  1205               	bcf	5,4	;volatile
  1794  049D                     l1047:
  1795                           
  1796                           ;./lcd.h: 51:  RA3 = 0;
  1797  049D  1185               	bcf	5,3	;volatile
  1798  049E                     l1049:
  1799                           
  1800                           ;./lcd.h: 52:  delay();
  1801  049E  120A  118A  24CE  120A  118A  	fcall	_delay
  1802  04A3                     l1051:
  1803                           
  1804                           ;./lcd.h: 53:  RA3 = 1;
  1805  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1806  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1807  04A5  1585               	bsf	5,3	;volatile
  1808  04A6                     l57:
  1809  04A6  0008               	return
  1810  04A7                     __end_of_LCD_escreve:
  1811                           
  1812                           	psect	text10
  1813  0466                     __ptext10:	
  1814 ;; *************** function _LCD_limpa *****************
  1815 ;; Defined at:
  1816 ;;		line 56 in file "./lcd.h"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         0       0       0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 1
  1837 ;; This function calls:
  1838 ;;		_delay
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _LCD_limpa
  1846  0466                     _LCD_limpa:
  1847  0466                     l1117:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _LCD_limpa: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1850                           
  1851                           
  1852                           ;./lcd.h: 57:     PORTD = 0x01;
  1853  0466  3001               	movlw	1
  1854  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0469  0088               	movwf	8	;volatile
  1857  046A                     l1119:
  1858                           
  1859                           ;./lcd.h: 58:     RA5 = 0;
  1860  046A  1285               	bcf	5,5	;volatile
  1861  046B                     l1121:
  1862                           
  1863                           ;./lcd.h: 59:     RA4 = 0;
  1864  046B  1205               	bcf	5,4	;volatile
  1865  046C                     l1123:
  1866                           
  1867                           ;./lcd.h: 60:     RA3=0;
  1868  046C  1185               	bcf	5,3	;volatile
  1869  046D                     l1125:
  1870                           
  1871                           ;./lcd.h: 61:     delay();
  1872  046D  120A  118A  24CE  120A  118A  	fcall	_delay
  1873  0472                     l1127:
  1874                           
  1875                           ;./lcd.h: 62:  RA3 = 1;
  1876  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0474  1585               	bsf	5,3	;volatile
  1879  0475                     l60:
  1880  0475  0008               	return
  1881  0476                     __end_of_LCD_limpa:
  1882                           
  1883                           	psect	text11
  1884  0554                     __ptext11:	
  1885 ;; *************** function _LCD_init *****************
  1886 ;; Defined at:
  1887 ;;		line 31 in file "./lcd.h"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 2
  1908 ;; This function calls:
  1909 ;;		_LCD_enable
  1910 ;;		_init
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _LCD_init
  1918  0554                     _LCD_init:
  1919  0554                     l1095:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1922                           
  1923                           
  1924                           ;./lcd.h: 33:     init();
  1925  0554  120A  118A  243F  120A  118A  	fcall	_init
  1926  0559                     l1097:
  1927                           
  1928                           ;./lcd.h: 34:  PORTD = 0X1;
  1929  0559  3001               	movlw	1
  1930  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1931  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1932  055C  0088               	movwf	8	;volatile
  1933  055D                     l1099:
  1934                           
  1935                           ;./lcd.h: 35:  LCD_enable();
  1936  055D  120A  118A  2458  120A  118A  	fcall	_LCD_enable
  1937  0562                     l1101:
  1938                           
  1939                           ;./lcd.h: 36:  PORTD = 0X38;
  1940  0562  3038               	movlw	56
  1941  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0565  0088               	movwf	8	;volatile
  1944  0566                     l1103:
  1945                           
  1946                           ;./lcd.h: 37:  LCD_enable();
  1947  0566  120A  118A  2458  120A  118A  	fcall	_LCD_enable
  1948  056B                     l1105:
  1949                           
  1950                           ;./lcd.h: 38:  PORTD = 0X0e;
  1951  056B  300E               	movlw	14
  1952  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1953  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1954  056E  0088               	movwf	8	;volatile
  1955  056F                     l1107:
  1956                           
  1957                           ;./lcd.h: 39:  LCD_enable();
  1958  056F  120A  118A  2458  120A  118A  	fcall	_LCD_enable
  1959  0574                     l1109:
  1960                           
  1961                           ;./lcd.h: 40:  PORTD = 0X06;
  1962  0574  3006               	movlw	6
  1963  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0577  0088               	movwf	8	;volatile
  1966  0578                     l1111:
  1967                           
  1968                           ;./lcd.h: 41:  LCD_enable();
  1969  0578  120A  118A  2458  120A  118A  	fcall	_LCD_enable
  1970  057D                     l1113:
  1971                           
  1972                           ;./lcd.h: 42:  PORTD = 0X80;
  1973  057D  3080               	movlw	128
  1974  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1975  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1976  0580  0088               	movwf	8	;volatile
  1977  0581                     l1115:
  1978                           
  1979                           ;./lcd.h: 43:  LCD_enable();
  1980  0581  120A  118A  2458  120A  118A  	fcall	_LCD_enable
  1981  0586                     l54:
  1982  0586  0008               	return
  1983  0587                     __end_of_LCD_init:
  1984                           
  1985                           	psect	text12
  1986  043F                     __ptext12:	
  1987 ;; *************** function _init *****************
  1988 ;; Defined at:
  1989 ;;		line 23 in file "./lcd.h"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_LCD_init
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _init
  2018  043F                     _init:
  2019  043F                     l769:	
  2020                           ;incstack = 0
  2021                           ; Regs used in _init: [wreg+status,2]
  2022                           
  2023                           
  2024                           ;./lcd.h: 25:  ADCON1 = 0X07;
  2025  043F  3007               	movlw	7
  2026  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0442  009F               	movwf	31	;volatile
  2029  0443                     l771:
  2030                           
  2031                           ;./lcd.h: 26:      RA1=1;
  2032  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0445  1485               	bsf	5,1	;volatile
  2035  0446                     l773:
  2036                           
  2037                           ;./lcd.h: 27:  TRISA = 0X00;
  2038  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0448  0185               	clrf	5	;volatile
  2041  0449                     l775:
  2042                           
  2043                           ;./lcd.h: 28:  TRISD = 0X00;
  2044  0449  0188               	clrf	8	;volatile
  2045  044A                     l51:
  2046  044A  0008               	return
  2047  044B                     __end_of_init:
  2048                           
  2049                           	psect	text13
  2050  0458                     __ptext13:	
  2051 ;; *************** function _LCD_enable *****************
  2052 ;; Defined at:
  2053 ;;		line 85 in file "./lcd.h"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 1
  2074 ;; This function calls:
  2075 ;;		_delay
  2076 ;; This function is called by:
  2077 ;;		_LCD_init
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _LCD_enable
  2083  0458                     _LCD_enable:
  2084  0458                     l1065:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2087                           
  2088                           
  2089                           ;./lcd.h: 87:  RA5 = 0;
  2090  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2092  045A  1285               	bcf	5,5	;volatile
  2093                           
  2094                           ;./lcd.h: 88:  RA4 = 0;
  2095  045B  1205               	bcf	5,4	;volatile
  2096                           
  2097                           ;./lcd.h: 89:  RA3 = 0;
  2098  045C  1185               	bcf	5,3	;volatile
  2099  045D                     l1067:
  2100                           
  2101                           ;./lcd.h: 90:  delay();
  2102  045D  120A  118A  24CE  120A  118A  	fcall	_delay
  2103  0462                     l1069:
  2104                           
  2105                           ;./lcd.h: 91:  RA3 = 1;
  2106  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0464  1585               	bsf	5,3	;volatile
  2109  0465                     l69:
  2110  0465  0008               	return
  2111  0466                     __end_of_LCD_enable:
  2112                           
  2113                           	psect	text14
  2114  04CE                     __ptext14:	
  2115 ;; *************** function _delay *****************
  2116 ;; Defined at:
  2117 ;;		line 94 in file "./lcd.h"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  i               2    0[COMMON] int 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, btemp+1
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         2       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         2       0       0       0       0
  2135 ;;Total ram usage:        2 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_LCD_escreve
  2141 ;;		_LCD_limpa
  2142 ;;		_LCD_linha1
  2143 ;;		_LCD_linha2
  2144 ;;		_LCD_enable
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _delay
  2150  04CE                     _delay:
  2151  04CE                     l1031:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2154                           
  2155                           
  2156                           ;./lcd.h: 96:  int i;;./lcd.h: 97:  for (i = 0;i < 5000;i++);
  2157  04CE  01F0               	clrf	delay@i
  2158  04CF  01F1               	clrf	delay@i+1
  2159  04D0                     l1037:
  2160  04D0  3001               	movlw	1
  2161  04D1  07F0               	addwf	delay@i,f
  2162  04D2  1803               	skipnc
  2163  04D3  0AF1               	incf	delay@i+1,f
  2164  04D4  3000               	movlw	0
  2165  04D5  07F1               	addwf	delay@i+1,f
  2166  04D6                     l1039:
  2167  04D6  0871               	movf	delay@i+1,w
  2168  04D7  3A80               	xorlw	128
  2169  04D8  00FF               	movwf	btemp+1
  2170  04D9  3093               	movlw	147
  2171  04DA  027F               	subwf	btemp+1,w
  2172  04DB  1D03               	skipz
  2173  04DC  2CDF               	goto	u235
  2174  04DD  3088               	movlw	136
  2175  04DE  0270               	subwf	delay@i,w
  2176  04DF                     u235:
  2177  04DF  1C03               	skipc
  2178  04E0  2CE2               	goto	u231
  2179  04E1  2CE3               	goto	u230
  2180  04E2                     u231:
  2181  04E2  2CD0               	goto	l1037
  2182  04E3                     u230:
  2183  04E3                     l74:
  2184  04E3  0008               	return
  2185  04E4                     __end_of_delay:
  2186  007E                     btemp	set	126	;btemp
  2187  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_Linha2
    _main->_telaInicial
    _telaInicial->_strlen
    _LCD_linha1->_delay
    _teclado->_LCD_escreve
    _Linha2->_strlen
    _espacoLivre->_LCD_escreve
    _LCD_linha2->_delay
    _LCD_escreve->_delay
    _LCD_limpa->_delay
    _LCD_enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     906
                           _LCD_init
                          _LCD_limpa
                             _Linha2
                            _teclado
                        _telaInicial
 ---------------------------------------------------------------------------------
 (1) _telaInicial                                          4     4      0     316
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LCD_linha1                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _teclado                                              3     3      0      68
                                              3 COMMON     3     3      0
                        _LCD_escreve
                        _liga_buzzer
 ---------------------------------------------------------------------------------
 (2) _liga_buzzer                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Linha2                                               4     4      0     430
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha2
                        _espacoLivre
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _espacoLivre                                          0     0      0     114
                        _LCD_escreve
                         _LCD_linha2
 ---------------------------------------------------------------------------------
 (3) _LCD_linha2                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_escreve                                          1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_limpa                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      46
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_limpa
     _delay
   _Linha2
     _LCD_escreve
       _delay
     _LCD_linha2
       _delay
     _espacoLivre
       _LCD_escreve
       _LCD_linha2
     _strlen
   _teclado
     _LCD_escreve
     _liga_buzzer
   _telaInicial
     _LCD_escreve
     _LCD_linha1
       _delay
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 28 18:09:41 2021

                      pc 0002                       l51 044A                       l60 0475  
                     l54 0586                       l63 0495                       l57 04A6  
                     l74 04E3                       l66 0485                       l69 0465  
                     l97 0550                       fsr 0004              ?_LCD_enable 0070  
                    l103 0457                      l122 07E9                      l134 05C1  
                    l128 05FE                      l137 0526                      l771 0443  
                    l773 0446                      l677 04FC                      l775 0449  
                    l769 043F                      l795 044B                      l797 0454  
                    _RA1 0029                      _RB0 0030                      _RA3 002B  
                    _RB1 0031                      _RA4 002C                      _RB2 0032  
                    _RA5 002D                      _RB3 0033                      u300 0663  
                    u301 0662                      u230 04E3                      u310 0683  
                    u231 04E2                      u311 0682                      u240 04F6  
                    u400 0795                      u320 06A1                      u241 04F5  
                    u401 0794                      u321 06A0                      u410 07B3  
                    u330 06BF                      u250 05F8                      u235 04DF  
                    u411 07B2                      u331 06BE                      u251 05F7  
                    u260 05BC                      u420 07D1                      u340 06DD  
                    u261 05BB                      u421 07D0                      u341 06DC  
                    u350 06FD                      u270 0609                      u351 06FC  
                    u271 0608                      u255 05F4                      u360 071B  
                    u280 0627                      u440 0541                      u265 05B8  
                    u361 071A                      u281 0626                      u441 0540  
                    u370 0739                      u290 0645                      u371 0738  
                    u507 06A7                      u291 0644                      u380 0757  
                    u381 0756                      u517 06C5                      u390 0777  
                    u607 07D7                      u391 0776                      u527 06E3  
                    u617 044F                      u537 0703                      u457 060F  
                    u547 0721                      u467 062D                      u557 073F  
                    u477 064B                      u567 075D                      u487 0669  
                    u577 077D                      u497 0689                      u587 079B  
                    u597 07B9              ?_LCD_linha1 0070              ?_LCD_linha2 0070  
                    _msg 0020                      fsr0 0004                      indf 0000  
                   l1101 0562                     l1031 04CE                     l1111 0578  
                   l1103 0566                     l1113 057D                     l1105 056B  
                   l1121 046B                     l1041 0497                     l1201 06AE  
                   l1115 0581                     l1107 056F                     l1123 046C  
                   l1051 04A3                     l1043 049B                     l1211 06D1  
                   l1203 06B3                     l1131 05CD                     l1037 04D0  
                   l1109 0574                     l1125 046D                     l1117 0466  
                   l1045 049C                     l1061 047D                     l1053 0476  
                   l1141 0587                     l1221 06F5                     l1213 06D7  
                   l1205 06B9                     l1133 05D0                     l1301 052D  
                   l1039 04D6                     l1127 0472                     l1119 046A  
                   l1047 049D                     l1063 0482                     l1055 047A  
                   l1151 05BC                     l1143 0591                     l1231 0715  
                   l1223 06F9                     l1215 06DD                     l1207 06BF  
                   l1071 0486                     l1135 05DA                     l1311 054B  
                   l1303 0531                     l1065 0458                     l1049 049E  
                   l1057 047B                     l1145 0594                     l1241 0739  
                   l1233 071B                     l1225 06FD                     l1217 06EA  
                   l1209 06CC                     l1161 061B                     l1153 05FF  
                   l1081 0492                     l1073 048A                     l1137 05E0  
                   l1129 05C2                     l1305 0536                     l1067 045D  
                   l1059 047C                     l1083 04E5                     l1147 059E  
                   l1251 0764                     l1243 0746                     l1235 0728  
                   l1227 070A                     l1219 06EF                     l1171 063F  
                   l1163 0621                     l1155 0605                     l1075 048B  
                   l1139 05F8                     l1307 053B                     l1069 0462  
                   l1093 04FD                     l1085 04EA                     l1149 05A4  
                   l1261 0784                     l1253 0769                     l1245 074B  
                   l1237 072D                     l1229 070F                     l1181 0663  
                   l1173 0645                     l1165 0627                     l1157 0609  
                   l1077 048C                     l1309 0541                     l1095 0554  
                   l1087 04EE                     l1271 07A7                     l1263 0789  
                   l1255 076F                     l1247 0751                     l1239 0733  
                   l1191 0683                     l1183 0670                     l1175 0652  
                   l1167 0634                     l1159 0616                     l1079 048D  
                   l1097 0559                     l1089 04F6                     l1281 07CB  
                   l1273 07AD                     l1265 078F                     l1257 0773  
                   l1249 0757                     l1193 0690                     l1185 0675  
                   l1177 0657                     l1169 0639                     l1099 055D  
                   l1283 07D1                     l1275 07B3                     l1267 0795  
                   l1259 0777                     l1195 0695                     l1187 067B  
                   l1179 065D                     l1285 07DE                     l1277 07C0  
                   l1269 07A2                     l1197 069B                     l1189 067F  
                   l1287 07E3                     l1279 07C5                     l1199 06A1  
                   l1297 0527                     l1299 052B             ?_LCD_escreve 0070  
                   _main 0527                     _msg2 002F                     _init 043F  
           ?_liga_buzzer 0070                     btemp 007E             ?_espacoLivre 0070  
                   start 0000       __size_of_LCD_limpa 0010         __end_of_LCD_init 0587  
                  ?_main 0070                    ?_init 0070                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _delay 04CE          __end_of_teclado 07EA                    pclath 000A  
                  status 0003                    wtemp0 007E      __size_of_LCD_enable 000E  
    __size_of_LCD_linha1 0010      __size_of_LCD_linha2 0010          __initialization 07EA  
           __end_of_main 0554             __end_of_init 044B             ?_telaInicial 0070  
                 ??_main 0079                   ??_init 0070        __end_of_LCD_limpa 0476  
                 ?_delay 0070                   _ADCON1 009F                   _Linha2 0587  
                 _config 0079                   _painel 007B                   delay@i 0070  
                 _strlen 04E4                ??_teclado 0073  __end_of__initialization 07FC  
              ?_LCD_init 0070     __size_of_LCD_escreve 0011             LCD_escreve@x 0072  
   __size_of_liga_buzzer 000D     __size_of_espacoLivre 002A           __pcstackCOMMON 0070  
           __pidataBANK0 04BA            __end_of_delay 04E4             ??_LCD_enable 0072  
           ??_LCD_linha1 0072             ??_LCD_linha2 0072                  ??_delay 0070  
             ??_LCD_init 0072                  ?_Linha2 0070       __end_of_LCD_enable 0466  
     __end_of_LCD_linha1 0496       __end_of_LCD_linha2 0486               __pmaintext 0527  
                ?_strlen 0070     __size_of_telaInicial 003D                  Linha2@i 0077  
        __size_of_Linha2 003B                  __ptext1 05C2                  __ptext2 0486  
                __ptext3 05FF                  __ptext4 044B                  __ptext5 0587  
                __ptext6 04E4                  __ptext7 04FD                  __ptext8 0476  
                __ptext9 0496          __size_of_strlen 0019                  _teclado 05FF  
   end_of_initialization 07FC                _LCD_limpa 0466                  strlen@s 0074  
             ?_LCD_limpa 0070        __size_of_LCD_init 0033           __end_of_Linha2 05C2  
         __end_of_strlen 04FD      start_initialization 07EA            ??_LCD_escreve 0072  
          ??_liga_buzzer 0070            ??_espacoLivre 0073                 ??_Linha2 0075  
             init_fetch0 04A7              __pdataBANK0 0020                 ??_strlen 0072  
            __pbssCOMMON 0079                ___latbits 0002              ??_LCD_limpa 0072  
    __end_of_LCD_escreve 04A7      __end_of_liga_buzzer 0458      __end_of_espacoLivre 0527  
           telaInicial@i 0077            ??_telaInicial 0075                 ?_teclado 0070  
         __size_of_delay 0016                 _LCD_init 0554      __end_of_telaInicial 05FF  
            _LCD_escreve 0496              _liga_buzzer 044B              _espacoLivre 04FD  
       __size_of_teclado 01EB                 __ptext10 0466                 __ptext11 0554  
               __ptext12 043F                 __ptext13 0458                 __ptext14 04CE  
          __size_of_main 002D            __size_of_init 000C              _telaInicial 05C2  
             _LCD_enable 0458               _LCD_linha1 0486               _LCD_linha2 0476  
               init_ram0 04AB                 strlen@cp 0073  
