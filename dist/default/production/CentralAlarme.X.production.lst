

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 29 15:24:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataCOMMON
   186  055C                     __pidataCOMMON:
   187                           
   188                           ;initializer for _userFalse
   189  055C  3401               	retlw	1
   190  055D  3400               	retlw	0
   191                           
   192                           	psect	idataBANK0
   193  05FB                     __pidataBANK0:
   194                           
   195                           ;initializer for _painel
   196  05FB  3401               	retlw	1
   197  05FC  3400               	retlw	0
   198                           
   199                           ;initializer for _msg
   200  05FD  3444               	retlw	68
   201  05FE  3469               	retlw	105
   202  05FF  3467               	retlw	103
   203  0600  3469               	retlw	105
   204  0601  3474               	retlw	116
   205  0602  3465               	retlw	101
   206  0603  3420               	retlw	32
   207  0604  3461               	retlw	97
   208  0605  3420               	retlw	32
   209  0606  3473               	retlw	115
   210  0607  3465               	retlw	101
   211  0608  346E               	retlw	110
   212  0609  3468               	retlw	104
   213  060A  3461               	retlw	97
   214  060B  3400               	retlw	0
   215                           
   216                           ;initializer for _msg2
   217  060C  345F               	retlw	95
   218  060D  345F               	retlw	95
   219  060E  345F               	retlw	95
   220  060F  345F               	retlw	95
   221  0610  3400               	retlw	0
   222                           
   223                           ;initializer for _senhaUserConfere
   224  0611  3431               	retlw	49
   225  0612  3432               	retlw	50
   226  0613  3431               	retlw	49
   227  0614  3432               	retlw	50
   228  0615  3400               	retlw	0
   229                           
   230                           ;initializer for _senhaUser
   231  0616  3431               	retlw	49
   232  0617  3432               	retlw	50
   233  0618  3431               	retlw	49
   234  0619  3432               	retlw	50
   235  061A  3400               	retlw	0
   236  0006                     _PORTB	set	6
   237  0009                     _PORTE	set	9
   238  0008                     _PORTD	set	8
   239  0033                     _RB3	set	51
   240  0032                     _RB2	set	50
   241  0031                     _RB1	set	49
   242  0030                     _RB0	set	48
   243  002B                     _RA3	set	43
   244  002C                     _RA4	set	44
   245  002D                     _RA5	set	45
   246  0029                     _RA1	set	41
   247  0086                     _TRISB	set	134
   248  0089                     _TRISE	set	137
   249  0088                     _TRISD	set	136
   250  0085                     _TRISA	set	133
   251  009F                     _ADCON1	set	159
   252                           
   253                           	psect	cinit
   254  07D3                     start_initialization:	
   255                           ; #config settings
   256                           
   257  07D3                     __initialization:
   258                           
   259                           ; Initialize objects allocated to BANK0
   260  07D3  1383               	bcf	3,7	;select IRP bank0
   261  07D4  3040               	movlw	low (__pdataBANK0+32)
   262  07D5  00FD               	movwf	btemp+-1
   263  07D6  3005               	movlw	high __pidataBANK0
   264  07D7  00FE               	movwf	btemp
   265  07D8  30FB               	movlw	low __pidataBANK0
   266  07D9  00FF               	movwf	btemp+1
   267  07DA  3020               	movlw	low __pdataBANK0
   268  07DB  0084               	movwf	4
   269  07DC  120A  118A  25BD  120A  118A  	fcall	init_ram0
   270                           
   271                           ; Initialize objects allocated to COMMON
   272  07E1  120A  118A  255C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   273  07E6  00FA               	movwf	__pdataCOMMON& (0+127)
   274  07E7  120A  118A  255D  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   275  07EC  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   276                           
   277                           ; Clear objects allocated to BANK0
   278  07ED  01C0               	clrf	__pbssBANK0& (0+127)
   279  07EE  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   280  07EF  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   281  07F0  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   282  07F1  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   283  07F2  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   284  07F3  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   285  07F4  01C7               	clrf	(__pbssBANK0+7)& (0+127)
   286  07F5  01C8               	clrf	(__pbssBANK0+8)& (0+127)
   287  07F6  01C9               	clrf	(__pbssBANK0+9)& (0+127)
   288  07F7  01CA               	clrf	(__pbssBANK0+10)& (0+127)
   289  07F8  01CB               	clrf	(__pbssBANK0+11)& (0+127)
   290  07F9  01CC               	clrf	(__pbssBANK0+12)& (0+127)
   291  07FA  01CD               	clrf	(__pbssBANK0+13)& (0+127)
   292                           
   293                           ; Clear objects allocated to COMMON
   294  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   295  07FC                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  07FC                     __end_of__initialization:
   299  07FC  0183               	clrf	3
   300  07FD  120A  118A  2F1A   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  007C                     __pbssCOMMON:
   304  007C                     _aux:
   305  007C                     	ds	1
   306                           
   307                           	psect	dataCOMMON
   308  007A                     __pdataCOMMON:
   309  007A                     _userFalse:
   310  007A                     	ds	2
   311                           
   312                           	psect	bssBANK0
   313  0040                     __pbssBANK0:
   314  0040                     _senhaConfig:
   315  0040                     	ds	5
   316  0045                     _senhaCoa:
   317  0045                     	ds	5
   318  004A                     _config:
   319  004A                     	ds	2
   320  004C                     _input:
   321  004C                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324  0020                     __pdataBANK0:
   325  0020                     _painel:
   326  0020                     	ds	2
   327  0022                     _msg:
   328  0022                     	ds	15
   329  0031                     _msg2:
   330  0031                     	ds	5
   331  0036                     _senhaUserConfere:
   332  0036                     	ds	5
   333  003B                     _senhaUser:
   334  003B                     	ds	5
   335                           
   336                           	psect	inittext
   337  05B9                     init_fetch0:	
   338                           ;	Called with low address in FSR and high address in W
   339                           
   340  05B9  087E               	movf	btemp,w
   341  05BA  008A               	movwf	10
   342  05BB  087F               	movf	btemp+1,w
   343  05BC  0082               	movwf	2
   344  05BD                     init_ram0:	
   345                           ;Called with:
   346                           ;	high address of idata address in btemp 
   347                           ;	low address of idata address in btemp+1 
   348                           ;	low address of data in FSR
   349                           ;	high address + 1 of data in btemp-1
   350                           
   351  05BD  120A  118A  25B9  120A  118A  	fcall	init_fetch0
   352  05C2  0080               	movwf	0
   353  05C3  0A84               	incf	4,f
   354  05C4  0804               	movf	4,w
   355  05C5  067D               	xorwf	btemp+-1,w
   356  05C6  1903               	btfsc	3,2
   357  05C7  3400               	retlw	0
   358  05C8  0AFF               	incf	btemp+1,f
   359  05C9  1903               	btfsc	3,2
   360  05CA  0AFE               	incf	btemp,f
   361  05CB  2DBD               	goto	init_ram0
   362                           
   363                           	psect	cstackCOMMON
   364  0070                     __pcstackCOMMON:
   365  0070                     ?_LCD_enable:
   366  0070                     ?_delay:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ??_delay:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_telaInicial:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_Linha2:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_validaUser:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_espacoLivre:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_init:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ??_init:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_LCD_init:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_LCD_escreve:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_LCD_limpa:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_LCD_linha1:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_LCD_linha2:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_main:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_strlen:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_strcmp:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0070                     strcmp@s2:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0070                     delay@i:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 2 bytes @ 0x0
   422  0070                     	ds	2
   423  0072                     ??_LCD_enable:
   424  0072                     ??_strlen:	
   425                           ; 1 bytes @ 0x2
   426                           
   427  0072                     ??_strcmp:	
   428                           ; 1 bytes @ 0x2
   429                           
   430  0072                     ??_LCD_init:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     ??_LCD_escreve:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ??_LCD_limpa:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ??_LCD_linha1:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     ??_LCD_linha2:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     LCD_escreve@x:	
   446                           ; 1 bytes @ 0x2
   447                           
   448                           
   449                           ; 1 bytes @ 0x2
   450  0072                     	ds	1
   451  0073                     ??_espacoLivre:
   452  0073                     strlen@cp:	
   453                           ; 1 bytes @ 0x3
   454                           
   455                           
   456                           ; 1 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     strlen@s:
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     ??_telaInicial:
   463  0075                     ??_Linha2:	
   464                           ; 1 bytes @ 0x5
   465                           
   466  0075                     strcmp@r:	
   467                           ; 1 bytes @ 0x5
   468                           
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     strcmp@s1:
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ??_validaUser:
   477  0077                     telaInicial@i:	
   478                           ; 1 bytes @ 0x7
   479                           
   480  0077                     Linha2@i:	
   481                           ; 2 bytes @ 0x7
   482                           
   483                           
   484                           ; 2 bytes @ 0x7
   485  0077                     	ds	3
   486  007A                     ??_main:
   487                           
   488                           	psect	maintext
   489  071A                     __pmaintext:	
   490                           ; 1 bytes @ 0xA
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 39 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B00/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels required when called: 4
   516 ;; This function calls:
   517 ;;		_LCD_escreve
   518 ;;		_LCD_init
   519 ;;		_LCD_limpa
   520 ;;		_Linha2
   521 ;;		_telaInicial
   522 ;;		_validaUser
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _main
   530  071A                     _main:
   531  071A                     l1581:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   534                           
   535                           
   536                           ;main.c: 40:     TRISE = 0;
   537  071A  1683               	bsf	3,5	;RP0=1, select bank1
   538  071B  1303               	bcf	3,6	;RP1=0, select bank1
   539  071C  0189               	clrf	9	;volatile
   540                           
   541                           ;main.c: 41:     TRISD = 0;
   542  071D  0188               	clrf	8	;volatile
   543  071E                     l1583:
   544                           
   545                           ;main.c: 42:     TRISB = 0x0F;
   546  071E  300F               	movlw	15
   547  071F  0086               	movwf	6	;volatile
   548  0720                     l1585:
   549                           
   550                           ;main.c: 44:     PORTE = 0x01;
   551  0720  3001               	movlw	1
   552  0721  1283               	bcf	3,5	;RP0=0, select bank0
   553  0722  1303               	bcf	3,6	;RP1=0, select bank0
   554  0723  0089               	movwf	9	;volatile
   555  0724                     l1587:
   556                           
   557                           ;main.c: 47:     LCD_init();
   558  0724  120A  118A  266F  120A  118A  	fcall	_LCD_init
   559  0729                     l1589:
   560                           
   561                           ;main.c: 48:     LCD_limpa();
   562  0729  120A  118A  2578  120A  118A  	fcall	_LCD_limpa
   563  072E                     l1591:
   564                           
   565                           ;main.c: 53:         if (painel){
   566  072E  1283               	bcf	3,5	;RP0=0, select bank0
   567  072F  1303               	bcf	3,6	;RP1=0, select bank0
   568  0730  0820               	movf	_painel,w
   569  0731  0421               	iorwf	_painel+1,w
   570  0732  1903               	btfsc	3,2
   571  0733  2F35               	goto	u951
   572  0734  2F36               	goto	u950
   573  0735                     u951:
   574  0735  2F44               	goto	l1597
   575  0736                     u950:
   576  0736                     l1593:
   577                           
   578                           ;main.c: 54:             telaInicial();
   579  0736  120A  118A  26DD  120A  118A  	fcall	_telaInicial
   580                           
   581                           ;main.c: 55:             Linha2();
   582  073B  120A  118A  26A2  120A  118A  	fcall	_Linha2
   583  0740                     l1595:
   584                           
   585                           ;main.c: 56:             painel = 0;
   586  0740  1283               	bcf	3,5	;RP0=0, select bank0
   587  0741  1303               	bcf	3,6	;RP1=0, select bank0
   588  0742  01A0               	clrf	_painel
   589  0743  01A1               	clrf	_painel+1
   590  0744                     l1597:
   591                           
   592                           ;main.c: 59:         if (userFalse == 1){
   593  0744  037A               	decf	_userFalse,w
   594  0745  047B               	iorwf	_userFalse+1,w
   595  0746  1D03               	btfss	3,2
   596  0747  2F49               	goto	u961
   597  0748  2F4A               	goto	u960
   598  0749                     u961:
   599  0749  2F2E               	goto	l1591
   600  074A                     u960:
   601  074A                     l1599:
   602                           
   603                           ;main.c: 60:             LCD_limpa();
   604  074A  120A  118A  2578  120A  118A  	fcall	_LCD_limpa
   605                           
   606                           ;main.c: 61:             LCD_escreve('E');
   607  074F  3045               	movlw	69
   608  0750  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   609  0755                     l1601:
   610                           
   611                           ;main.c: 63:             validaUser();
   612  0755  120A  118A  275E  120A  118A  	fcall	_validaUser
   613  075A  2F2E               	goto	l1591
   614  075B  120A  118A  2800   	ljmp	start
   615  075E                     __end_of_main:
   616                           
   617                           	psect	text1
   618  075E                     __ptext1:	
   619 ;; *************** function _validaUser *****************
   620 ;; Defined at:
   621 ;;		line 365 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          3       0       0       0       0
   638 ;;      Totals:         3       0       0       0       0
   639 ;;Total ram usage:        3 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 2
   642 ;; This function calls:
   643 ;;		_LCD_escreve
   644 ;;		_strcmp
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _validaUser
   652  075E                     _validaUser:
   653  075E                     l1329:	
   654                           ;incstack = 0
   655                           ; Regs used in _validaUser: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;main.c: 367:     while(userFalse == 1){
   659  075E  2FCC               	goto	l1363
   660  075F                     l1331:
   661                           
   662                           ;main.c: 405:         if (strcmp(senhaUser, senhaUserConfere)==0){
   663  075F  3036               	movlw	(low (_senhaUserConfere| 0))& (0+255)
   664  0760  00F7               	movwf	??_validaUser
   665  0761  0877               	movf	??_validaUser,w
   666  0762  00F0               	movwf	strcmp@s2
   667  0763  303B               	movlw	(low (_senhaUser| 0))& (0+255)
   668  0764  120A  118A  2645  120A  118A  	fcall	_strcmp
   669  0769  0870               	movf	?_strcmp,w
   670  076A  0471               	iorwf	?_strcmp+1,w
   671  076B  1D03               	btfss	3,2
   672  076C  2F6E               	goto	u451
   673  076D  2F6F               	goto	u450
   674  076E                     u451:
   675  076E  2FCC               	goto	l1363
   676  076F                     u450:
   677  076F                     l1333:
   678                           
   679                           ;main.c: 406:             userFalse = 0;
   680  076F  01FA               	clrf	_userFalse
   681  0770  01FB               	clrf	_userFalse+1
   682  0771                     l1335:
   683                           
   684                           ;main.c: 407:             LCD_escreve('S');
   685  0771  3053               	movlw	83
   686  0772  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   687  0777                     l1337:
   688                           
   689                           ;main.c: 408:             LCD_escreve('e');
   690  0777  3065               	movlw	101
   691  0778  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   692  077D                     l1339:
   693                           
   694                           ;main.c: 409:             LCD_escreve('n');
   695  077D  306E               	movlw	110
   696  077E  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   697  0783                     l1341:
   698                           
   699                           ;main.c: 410:             LCD_escreve('h');
   700  0783  3068               	movlw	104
   701  0784  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   702  0789                     l1343:
   703                           
   704                           ;main.c: 411:             LCD_escreve('a');
   705  0789  3061               	movlw	97
   706  078A  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   707  078F                     l1345:
   708                           
   709                           ;main.c: 412:             LCD_escreve(' ');
   710  078F  3020               	movlw	32
   711  0790  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   712  0795                     l1347:
   713                           
   714                           ;main.c: 413:             LCD_escreve('c');
   715  0795  3063               	movlw	99
   716  0796  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   717  079B                     l1349:
   718                           
   719                           ;main.c: 414:             LCD_escreve('o');
   720  079B  306F               	movlw	111
   721  079C  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   722  07A1                     l1351:
   723                           
   724                           ;main.c: 415:             LCD_escreve('r');
   725  07A1  3072               	movlw	114
   726  07A2  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   727  07A7                     l1353:
   728                           
   729                           ;main.c: 416:             LCD_escreve('r');
   730  07A7  3072               	movlw	114
   731  07A8  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   732  07AD                     l1355:
   733                           
   734                           ;main.c: 417:             LCD_escreve('e');
   735  07AD  3065               	movlw	101
   736  07AE  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   737  07B3                     l1357:
   738                           
   739                           ;main.c: 418:             LCD_escreve('t');
   740  07B3  3074               	movlw	116
   741  07B4  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   742  07B9                     l1359:
   743                           
   744                           ;main.c: 419:             LCD_escreve('a');
   745  07B9  3061               	movlw	97
   746  07BA  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   747  07BF                     l1361:
   748                           
   749                           ;main.c: 420:             _delay((unsigned long)((2500)*(20000000/4000.0)));
   750  07BF  3040               	movlw	64
   751  07C0  00F9               	movwf	??_validaUser+2
   752  07C1  306A               	movlw	106
   753  07C2  00F8               	movwf	??_validaUser+1
   754  07C3  3097               	movlw	151
   755  07C4  00F7               	movwf	??_validaUser
   756  07C5                     u1707:
   757  07C5  0BF7               	decfsz	??_validaUser,f
   758  07C6  2FC5               	goto	u1707
   759  07C7  0BF8               	decfsz	??_validaUser+1,f
   760  07C8  2FC5               	goto	u1707
   761  07C9  0BF9               	decfsz	??_validaUser+2,f
   762  07CA  2FC5               	goto	u1707
   763  07CB  2FCC               	nop2
   764  07CC                     l1363:
   765                           
   766                           ;main.c: 367:     while(userFalse == 1){
   767  07CC  037A               	decf	_userFalse,w
   768  07CD  047B               	iorwf	_userFalse+1,w
   769  07CE  1903               	btfsc	3,2
   770  07CF  2FD1               	goto	u461
   771  07D0  2FD2               	goto	u460
   772  07D1                     u461:
   773  07D1  2F5F               	goto	l1331
   774  07D2                     u460:
   775  07D2                     l171:
   776  07D2  0008               	return
   777  07D3                     __end_of_validaUser:
   778                           
   779                           	psect	text2
   780  0645                     __ptext2:	
   781 ;; *************** function _strcmp *****************
   782 ;; Defined at:
   783 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcmp.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  s1              1    wreg     PTR const unsigned char 
   786 ;;		 -> senhaUser(5), 
   787 ;;  s2              1    0[COMMON] PTR const unsigned char 
   788 ;;		 -> senhaUserConfere(5), 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  s1              1    6[COMMON] PTR const unsigned char 
   791 ;;		 -> senhaUser(5), 
   792 ;;  r               1    5[COMMON] char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  2    0[COMMON] int 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         2       0       0       0       0
   803 ;;      Locals:         2       0       0       0       0
   804 ;;      Temps:          3       0       0       0       0
   805 ;;      Totals:         7       0       0       0       0
   806 ;;Total ram usage:        7 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_validaUser
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _strcmp
   817  0645                     _strcmp:
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
   821                           ;strcmp@s1 stored from wreg
   822  0645  00F6               	movwf	strcmp@s1
   823  0646                     l1257:
   824  0646  2E4F               	goto	l1263
   825  0647                     l1259:
   826  0647  3001               	movlw	1
   827  0648  00F2               	movwf	??_strcmp
   828  0649  0872               	movf	??_strcmp,w
   829  064A  07F6               	addwf	strcmp@s1,f
   830  064B                     l1261:
   831  064B  3001               	movlw	1
   832  064C  00F2               	movwf	??_strcmp
   833  064D  0872               	movf	??_strcmp,w
   834  064E  07F0               	addwf	strcmp@s2,f
   835  064F                     l1263:
   836  064F  0870               	movf	strcmp@s2,w
   837  0650  0084               	movwf	4
   838  0651  1383               	bcf	3,7	;select IRP bank0
   839  0652  0800               	movf	0,w
   840  0653  00F2               	movwf	??_strcmp
   841  0654  0876               	movf	strcmp@s1,w
   842  0655  0084               	movwf	4
   843  0656  0800               	movf	0,w
   844  0657  00F3               	movwf	??_strcmp+1
   845  0658  0872               	movf	??_strcmp,w
   846  0659  0273               	subwf	??_strcmp+1,w
   847  065A  00F4               	movwf	??_strcmp+2
   848  065B  0874               	movf	??_strcmp+2,w
   849  065C  00F5               	movwf	strcmp@r
   850  065D  0875               	movf	strcmp@r,w
   851  065E  1D03               	btfss	3,2
   852  065F  2E61               	goto	u411
   853  0660  2E62               	goto	u410
   854  0661                     u411:
   855  0661  2E69               	goto	l1267
   856  0662                     u410:
   857  0662                     l1265:
   858  0662  0876               	movf	strcmp@s1,w
   859  0663  0084               	movwf	4
   860  0664  0800               	movf	0,w
   861  0665  1D03               	btfss	3,2
   862  0666  2E68               	goto	u421
   863  0667  2E69               	goto	u420
   864  0668                     u421:
   865  0668  2E47               	goto	l1259
   866  0669                     u420:
   867  0669                     l1267:
   868  0669  0875               	movf	strcmp@r,w
   869  066A  00F0               	movwf	?_strcmp
   870  066B  01F1               	clrf	?_strcmp+1
   871  066C  1BF0               	btfsc	?_strcmp,7
   872  066D  03F1               	decf	?_strcmp+1,f
   873  066E                     l713:
   874  066E  0008               	return
   875  066F                     __end_of_strcmp:
   876                           
   877                           	psect	text3
   878  06DD                     __ptext3:	
   879 ;; *************** function _telaInicial *****************
   880 ;; Defined at:
   881 ;;		line 327 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  i               2    7[COMMON] int 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         2       0       0       0       0
   897 ;;      Temps:          2       0       0       0       0
   898 ;;      Totals:         4       0       0       0       0
   899 ;;Total ram usage:        4 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; Hardware stack levels required when called: 2
   902 ;; This function calls:
   903 ;;		_LCD_escreve
   904 ;;		_LCD_linha1
   905 ;;		_strlen
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _telaInicial
   913  06DD                     _telaInicial:
   914  06DD                     l1305:	
   915                           ;incstack = 0
   916                           ; Regs used in _telaInicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   917                           
   918                           
   919                           ;main.c: 329:     LCD_linha1();
   920  06DD  120A  118A  2598  120A  118A  	fcall	_LCD_linha1
   921                           
   922                           ;main.c: 330:     LCD_escreve(' ');
   923  06E2  3020               	movlw	32
   924  06E3  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   925  06E8                     l1307:
   926                           
   927                           ;main.c: 331:     for (int i = 0; i <= strlen(msg)-1; i++){
   928  06E8  01F7               	clrf	telaInicial@i
   929  06E9  01F8               	clrf	telaInicial@i+1
   930  06EA  2EFB               	goto	l1313
   931  06EB                     l1309:
   932                           
   933                           ;main.c: 332:         LCD_escreve(msg[i]);
   934  06EB  0877               	movf	telaInicial@i,w
   935  06EC  3E22               	addlw	(low (_msg| 0))& (0+255)
   936  06ED  0084               	movwf	4
   937  06EE  1383               	bcf	3,7	;select IRP bank0
   938  06EF  0800               	movf	0,w
   939  06F0  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   940  06F5                     l1311:
   941                           
   942                           ;main.c: 333:     }
   943  06F5  3001               	movlw	1
   944  06F6  07F7               	addwf	telaInicial@i,f
   945  06F7  1803               	skipnc
   946  06F8  0AF8               	incf	telaInicial@i+1,f
   947  06F9  3000               	movlw	0
   948  06FA  07F8               	addwf	telaInicial@i+1,f
   949  06FB                     l1313:
   950  06FB  3022               	movlw	(low (_msg| 0))& (0+255)
   951  06FC  120A  118A  25E2  120A  118A  	fcall	_strlen
   952  0701  0870               	movf	?_strlen,w
   953  0702  3EFF               	addlw	255
   954  0703  00F5               	movwf	??_telaInicial
   955  0704  0871               	movf	?_strlen+1,w
   956  0705  1803               	skipnc
   957  0706  3E01               	addlw	1
   958  0707  3EFF               	addlw	255
   959  0708  00F6               	movwf	??_telaInicial+1
   960  0709  0878               	movf	telaInicial@i+1,w
   961  070A  0276               	subwf	??_telaInicial+1,w
   962  070B  1D03               	skipz
   963  070C  2F0F               	goto	u435
   964  070D  0877               	movf	telaInicial@i,w
   965  070E  0275               	subwf	??_telaInicial,w
   966  070F                     u435:
   967  070F  1803               	skipnc
   968  0710  2F12               	goto	u431
   969  0711  2F13               	goto	u430
   970  0712                     u431:
   971  0712  2EEB               	goto	l1309
   972  0713                     u430:
   973  0713                     l1315:
   974                           
   975                           ;main.c: 334:     LCD_escreve(' ');
   976  0713  3020               	movlw	32
   977  0714  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
   978  0719                     l155:
   979  0719  0008               	return
   980  071A                     __end_of_telaInicial:
   981                           
   982                           	psect	text4
   983  0598                     __ptext4:	
   984 ;; *************** function _LCD_linha1 *****************
   985 ;; Defined at:
   986 ;;		line 65 in file "./lcd.h"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 1
  1007 ;; This function calls:
  1008 ;;		_delay
  1009 ;; This function is called by:
  1010 ;;		_telaInicial
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _LCD_linha1
  1016  0598                     _LCD_linha1:
  1017  0598                     l1233:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _LCD_linha1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1020                           
  1021                           
  1022                           ;./lcd.h: 66:     PORTD = 0x02;
  1023  0598  3002               	movlw	2
  1024  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1025  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1026  059B  0088               	movwf	8	;volatile
  1027  059C                     l1235:
  1028                           
  1029                           ;./lcd.h: 67:     RA5 = 0;
  1030  059C  1285               	bcf	5,5	;volatile
  1031  059D                     l1237:
  1032                           
  1033                           ;./lcd.h: 68:     RA4 = 0;
  1034  059D  1205               	bcf	5,4	;volatile
  1035  059E                     l1239:
  1036                           
  1037                           ;./lcd.h: 69:     RA3=0;
  1038  059E  1185               	bcf	5,3	;volatile
  1039  059F                     l1241:
  1040                           
  1041                           ;./lcd.h: 70:     delay();
  1042  059F  120A  118A  25CC  120A  118A  	fcall	_delay
  1043  05A4                     l1243:
  1044                           
  1045                           ;./lcd.h: 71:  RA3 = 1;
  1046  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1047  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1048  05A6  1585               	bsf	5,3	;volatile
  1049  05A7                     l65:
  1050  05A7  0008               	return
  1051  05A8                     __end_of_LCD_linha1:
  1052                           
  1053                           	psect	text5
  1054  06A2                     __ptext5:	
  1055 ;; *************** function _Linha2 *****************
  1056 ;; Defined at:
  1057 ;;		line 342 in file "main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  i               2    7[COMMON] int 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         2       0       0       0       0
  1073 ;;      Temps:          2       0       0       0       0
  1074 ;;      Totals:         4       0       0       0       0
  1075 ;;Total ram usage:        4 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 3
  1078 ;; This function calls:
  1079 ;;		_LCD_escreve
  1080 ;;		_LCD_linha2
  1081 ;;		_espacoLivre
  1082 ;;		_strlen
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _Linha2
  1090  06A2                     _Linha2:
  1091  06A2                     l1317:	
  1092                           ;incstack = 0
  1093                           ; Regs used in _Linha2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1094                           
  1095                           
  1096                           ;main.c: 343:     LCD_linha2();
  1097  06A2  120A  118A  2588  120A  118A  	fcall	_LCD_linha2
  1098                           
  1099                           ;main.c: 344:     espacoLivre();
  1100  06A7  120A  118A  261B  120A  118A  	fcall	_espacoLivre
  1101  06AC                     l1319:
  1102                           
  1103                           ;main.c: 345:     for (int i = 0; i <= strlen(msg2)-1; i++){
  1104  06AC  01F7               	clrf	Linha2@i
  1105  06AD  01F8               	clrf	Linha2@i+1
  1106  06AE  2EBF               	goto	l1325
  1107  06AF                     l1321:
  1108                           
  1109                           ;main.c: 346:         LCD_escreve(msg2[i]);
  1110  06AF  0877               	movf	Linha2@i,w
  1111  06B0  3E31               	addlw	(low (_msg2| 0))& (0+255)
  1112  06B1  0084               	movwf	4
  1113  06B2  1383               	bcf	3,7	;select IRP bank0
  1114  06B3  0800               	movf	0,w
  1115  06B4  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1116  06B9                     l1323:
  1117                           
  1118                           ;main.c: 347:     }
  1119  06B9  3001               	movlw	1
  1120  06BA  07F7               	addwf	Linha2@i,f
  1121  06BB  1803               	skipnc
  1122  06BC  0AF8               	incf	Linha2@i+1,f
  1123  06BD  3000               	movlw	0
  1124  06BE  07F8               	addwf	Linha2@i+1,f
  1125  06BF                     l1325:
  1126  06BF  3031               	movlw	(low (_msg2| 0))& (0+255)
  1127  06C0  120A  118A  25E2  120A  118A  	fcall	_strlen
  1128  06C5  0870               	movf	?_strlen,w
  1129  06C6  3EFF               	addlw	255
  1130  06C7  00F5               	movwf	??_Linha2
  1131  06C8  0871               	movf	?_strlen+1,w
  1132  06C9  1803               	skipnc
  1133  06CA  3E01               	addlw	1
  1134  06CB  3EFF               	addlw	255
  1135  06CC  00F6               	movwf	??_Linha2+1
  1136  06CD  0878               	movf	Linha2@i+1,w
  1137  06CE  0276               	subwf	??_Linha2+1,w
  1138  06CF  1D03               	skipz
  1139  06D0  2ED3               	goto	u445
  1140  06D1  0877               	movf	Linha2@i,w
  1141  06D2  0275               	subwf	??_Linha2,w
  1142  06D3                     u445:
  1143  06D3  1803               	skipnc
  1144  06D4  2ED6               	goto	u441
  1145  06D5  2ED7               	goto	u440
  1146  06D6                     u441:
  1147  06D6  2EAF               	goto	l1321
  1148  06D7                     u440:
  1149  06D7                     l1327:
  1150                           
  1151                           ;main.c: 348:     espacoLivre();
  1152  06D7  120A  118A  261B  120A  118A  	fcall	_espacoLivre
  1153  06DC                     l161:
  1154  06DC  0008               	return
  1155  06DD                     __end_of_Linha2:
  1156                           
  1157                           	psect	text6
  1158  05E2                     __ptext6:	
  1159 ;; *************** function _strlen *****************
  1160 ;; Defined at:
  1161 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  s               1    wreg     PTR const unsigned char 
  1164 ;;		 -> msg2(5), msg(15), 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  s               1    4[COMMON] PTR const unsigned char 
  1167 ;;		 -> msg2(5), msg(15), 
  1168 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1169 ;;		 -> msg2(5), msg(15), 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2    0[COMMON] unsigned int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         2       0       0       0       0
  1180 ;;      Locals:         2       0       0       0       0
  1181 ;;      Temps:          1       0       0       0       0
  1182 ;;      Totals:         5       0       0       0       0
  1183 ;;Total ram usage:        5 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_telaInicial
  1189 ;;		_Linha2
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _strlen
  1195  05E2                     _strlen:
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1199                           ;strlen@s stored from wreg
  1200  05E2  00F4               	movwf	strlen@s
  1201  05E3                     l1245:
  1202  05E3  0874               	movf	strlen@s,w
  1203  05E4  00F2               	movwf	??_strlen
  1204  05E5  0872               	movf	??_strlen,w
  1205  05E6  00F3               	movwf	strlen@cp
  1206  05E7  2DEC               	goto	l1249
  1207  05E8                     l1247:
  1208  05E8  3001               	movlw	1
  1209  05E9  00F2               	movwf	??_strlen
  1210  05EA  0872               	movf	??_strlen,w
  1211  05EB  07F3               	addwf	strlen@cp,f
  1212  05EC                     l1249:
  1213  05EC  0873               	movf	strlen@cp,w
  1214  05ED  0084               	movwf	4
  1215  05EE  1383               	bcf	3,7	;select IRP bank0
  1216  05EF  0800               	movf	0,w
  1217  05F0  1D03               	btfss	3,2
  1218  05F1  2DF3               	goto	u401
  1219  05F2  2DF4               	goto	u400
  1220  05F3                     u401:
  1221  05F3  2DE8               	goto	l1247
  1222  05F4                     u400:
  1223  05F4                     l1251:
  1224  05F4  0874               	movf	strlen@s,w
  1225  05F5  0273               	subwf	strlen@cp,w
  1226  05F6  00F0               	movwf	?_strlen
  1227  05F7  01F1               	clrf	?_strlen+1
  1228  05F8  1BF0               	btfsc	?_strlen,7
  1229  05F9  03F1               	decf	?_strlen+1,f
  1230  05FA                     l719:
  1231  05FA  0008               	return
  1232  05FB                     __end_of_strlen:
  1233                           
  1234                           	psect	text7
  1235  061B                     __ptext7:	
  1236 ;; *************** function _espacoLivre *****************
  1237 ;; Defined at:
  1238 ;;		line 354 in file "main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0
  1255 ;;      Totals:         0       0       0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; Hardware stack levels required when called: 2
  1259 ;; This function calls:
  1260 ;;		_LCD_escreve
  1261 ;;		_LCD_linha2
  1262 ;; This function is called by:
  1263 ;;		_Linha2
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _espacoLivre
  1269  061B                     _espacoLivre:
  1270  061B                     l1255:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _espacoLivre: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1273                           
  1274                           
  1275                           ;main.c: 355:     LCD_linha2();
  1276  061B  120A  118A  2588  120A  118A  	fcall	_LCD_linha2
  1277                           
  1278                           ;main.c: 356:     LCD_escreve(' ');
  1279  0620  3020               	movlw	32
  1280  0621  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1281                           
  1282                           ;main.c: 357:     LCD_escreve(' ');
  1283  0626  3020               	movlw	32
  1284  0627  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1285                           
  1286                           ;main.c: 358:     LCD_escreve(' ');
  1287  062C  3020               	movlw	32
  1288  062D  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1289                           
  1290                           ;main.c: 359:     LCD_escreve(' ');
  1291  0632  3020               	movlw	32
  1292  0633  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1293                           
  1294                           ;main.c: 360:     LCD_escreve(' ');
  1295  0638  3020               	movlw	32
  1296  0639  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1297                           
  1298                           ;main.c: 361:     LCD_escreve(' ');
  1299  063E  3020               	movlw	32
  1300  063F  120A  118A  25A8  120A  118A  	fcall	_LCD_escreve
  1301  0644                     l164:
  1302  0644  0008               	return
  1303  0645                     __end_of_espacoLivre:
  1304                           
  1305                           	psect	text8
  1306  0588                     __ptext8:	
  1307 ;; *************** function _LCD_linha2 *****************
  1308 ;; Defined at:
  1309 ;;		line 73 in file "./lcd.h"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 1
  1330 ;; This function calls:
  1331 ;;		_delay
  1332 ;; This function is called by:
  1333 ;;		_Linha2
  1334 ;;		_espacoLivre
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _LCD_linha2
  1340  0588                     _LCD_linha2:
  1341  0588                     l1207:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _LCD_linha2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1344                           
  1345                           
  1346                           ;./lcd.h: 74:     PORTD = 0xC0;
  1347  0588  30C0               	movlw	192
  1348  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1349  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1350  058B  0088               	movwf	8	;volatile
  1351  058C                     l1209:
  1352                           
  1353                           ;./lcd.h: 75:     RA5 = 0;
  1354  058C  1285               	bcf	5,5	;volatile
  1355  058D                     l1211:
  1356                           
  1357                           ;./lcd.h: 76:     RA4 = 0;
  1358  058D  1205               	bcf	5,4	;volatile
  1359  058E                     l1213:
  1360                           
  1361                           ;./lcd.h: 77:     RA3=0;
  1362  058E  1185               	bcf	5,3	;volatile
  1363  058F                     l1215:
  1364                           
  1365                           ;./lcd.h: 78:     delay();
  1366  058F  120A  118A  25CC  120A  118A  	fcall	_delay
  1367  0594                     l1217:
  1368                           
  1369                           ;./lcd.h: 79:  RA3 = 1;
  1370  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0596  1585               	bsf	5,3	;volatile
  1373  0597                     l68:
  1374  0597  0008               	return
  1375  0598                     __end_of_LCD_linha2:
  1376                           
  1377                           	psect	text9
  1378  05A8                     __ptext9:	
  1379 ;; *************** function _LCD_escreve *****************
  1380 ;; Defined at:
  1381 ;;		line 46 in file "./lcd.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  x               1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  x               1    2[COMMON] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0
  1398 ;;      Totals:         1       0       0       0       0
  1399 ;;Total ram usage:        1 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 1
  1402 ;; This function calls:
  1403 ;;		_delay
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;;		_telaInicial
  1407 ;;		_Linha2
  1408 ;;		_espacoLivre
  1409 ;;		_validaUser
  1410 ;;		_LCD_escreveFrase
  1411 ;;		_teclado
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _LCD_escreve
  1417  05A8                     _LCD_escreve:
  1418                           
  1419                           ;incstack = 0
  1420                           ; Regs used in _LCD_escreve: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1421                           ;LCD_escreve@x stored from wreg
  1422  05A8  00F2               	movwf	LCD_escreve@x
  1423  05A9                     l1195:
  1424                           
  1425                           ;./lcd.h: 46: void LCD_escreve(char x);./lcd.h: 47: {;./lcd.h: 48:  PORTD = x;
  1426  05A9  0872               	movf	LCD_escreve@x,w
  1427  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1428  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1429  05AC  0088               	movwf	8	;volatile
  1430  05AD                     l1197:
  1431                           
  1432                           ;./lcd.h: 49:  RA5 = 1;
  1433  05AD  1685               	bsf	5,5	;volatile
  1434  05AE                     l1199:
  1435                           
  1436                           ;./lcd.h: 50:  RA4 = 0;
  1437  05AE  1205               	bcf	5,4	;volatile
  1438  05AF                     l1201:
  1439                           
  1440                           ;./lcd.h: 51:  RA3 = 0;
  1441  05AF  1185               	bcf	5,3	;volatile
  1442  05B0                     l1203:
  1443                           
  1444                           ;./lcd.h: 52:  delay();
  1445  05B0  120A  118A  25CC  120A  118A  	fcall	_delay
  1446  05B5                     l1205:
  1447                           
  1448                           ;./lcd.h: 53:  RA3 = 1;
  1449  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1450  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1451  05B7  1585               	bsf	5,3	;volatile
  1452  05B8                     l59:
  1453  05B8  0008               	return
  1454  05B9                     __end_of_LCD_escreve:
  1455                           
  1456                           	psect	text10
  1457  0578                     __ptext10:	
  1458 ;; *************** function _LCD_limpa *****************
  1459 ;; Defined at:
  1460 ;;		line 56 in file "./lcd.h"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 1
  1481 ;; This function calls:
  1482 ;;		_delay
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _LCD_limpa
  1490  0578                     _LCD_limpa:
  1491  0578                     l1293:	
  1492                           ;incstack = 0
  1493                           ; Regs used in _LCD_limpa: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1494                           
  1495                           
  1496                           ;./lcd.h: 57:     PORTD = 0x01;
  1497  0578  3001               	movlw	1
  1498  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1499  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1500  057B  0088               	movwf	8	;volatile
  1501  057C                     l1295:
  1502                           
  1503                           ;./lcd.h: 58:     RA5 = 0;
  1504  057C  1285               	bcf	5,5	;volatile
  1505  057D                     l1297:
  1506                           
  1507                           ;./lcd.h: 59:     RA4 = 0;
  1508  057D  1205               	bcf	5,4	;volatile
  1509  057E                     l1299:
  1510                           
  1511                           ;./lcd.h: 60:     RA3=0;
  1512  057E  1185               	bcf	5,3	;volatile
  1513  057F                     l1301:
  1514                           
  1515                           ;./lcd.h: 61:     delay();
  1516  057F  120A  118A  25CC  120A  118A  	fcall	_delay
  1517  0584                     l1303:
  1518                           
  1519                           ;./lcd.h: 62:  RA3 = 1;
  1520  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0586  1585               	bsf	5,3	;volatile
  1523  0587                     l62:
  1524  0587  0008               	return
  1525  0588                     __end_of_LCD_limpa:
  1526                           
  1527                           	psect	text11
  1528  066F                     __ptext11:	
  1529 ;; *************** function _LCD_init *****************
  1530 ;; Defined at:
  1531 ;;		line 31 in file "./lcd.h"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 2
  1552 ;; This function calls:
  1553 ;;		_LCD_enable
  1554 ;;		_init
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _LCD_init
  1562  066F                     _LCD_init:
  1563  066F                     l1271:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1566                           
  1567                           
  1568                           ;./lcd.h: 33:     init();
  1569  066F  120A  118A  255E  120A  118A  	fcall	_init
  1570  0674                     l1273:
  1571                           
  1572                           ;./lcd.h: 34:  PORTD = 0X1;
  1573  0674  3001               	movlw	1
  1574  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0677  0088               	movwf	8	;volatile
  1577  0678                     l1275:
  1578                           
  1579                           ;./lcd.h: 35:  LCD_enable();
  1580  0678  120A  118A  256A  120A  118A  	fcall	_LCD_enable
  1581  067D                     l1277:
  1582                           
  1583                           ;./lcd.h: 36:  PORTD = 0X38;
  1584  067D  3038               	movlw	56
  1585  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1586  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0680  0088               	movwf	8	;volatile
  1588  0681                     l1279:
  1589                           
  1590                           ;./lcd.h: 37:  LCD_enable();
  1591  0681  120A  118A  256A  120A  118A  	fcall	_LCD_enable
  1592  0686                     l1281:
  1593                           
  1594                           ;./lcd.h: 38:  PORTD = 0X0e;
  1595  0686  300E               	movlw	14
  1596  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0689  0088               	movwf	8	;volatile
  1599  068A                     l1283:
  1600                           
  1601                           ;./lcd.h: 39:  LCD_enable();
  1602  068A  120A  118A  256A  120A  118A  	fcall	_LCD_enable
  1603  068F                     l1285:
  1604                           
  1605                           ;./lcd.h: 40:  PORTD = 0X06;
  1606  068F  3006               	movlw	6
  1607  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0692  0088               	movwf	8	;volatile
  1610  0693                     l1287:
  1611                           
  1612                           ;./lcd.h: 41:  LCD_enable();
  1613  0693  120A  118A  256A  120A  118A  	fcall	_LCD_enable
  1614  0698                     l1289:
  1615                           
  1616                           ;./lcd.h: 42:  PORTD = 0X80;
  1617  0698  3080               	movlw	128
  1618  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1619  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1620  069B  0088               	movwf	8	;volatile
  1621  069C                     l1291:
  1622                           
  1623                           ;./lcd.h: 43:  LCD_enable();
  1624  069C  120A  118A  256A  120A  118A  	fcall	_LCD_enable
  1625  06A1                     l56:
  1626  06A1  0008               	return
  1627  06A2                     __end_of_LCD_init:
  1628                           
  1629                           	psect	text12
  1630  055E                     __ptext12:	
  1631 ;; *************** function _init *****************
  1632 ;; Defined at:
  1633 ;;		line 23 in file "./lcd.h"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_LCD_init
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _init
  1662  055E                     _init:
  1663  055E                     l1219:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _init: [wreg+status,2]
  1666                           
  1667                           
  1668                           ;./lcd.h: 25:  ADCON1 = 0X07;
  1669  055E  3007               	movlw	7
  1670  055F  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0560  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0561  009F               	movwf	31	;volatile
  1673  0562                     l1221:
  1674                           
  1675                           ;./lcd.h: 26:      RA1=1;
  1676  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0564  1485               	bsf	5,1	;volatile
  1679  0565                     l1223:
  1680                           
  1681                           ;./lcd.h: 27:  TRISA = 0X00;
  1682  0565  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0566  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0567  0185               	clrf	5	;volatile
  1685  0568                     l1225:
  1686                           
  1687                           ;./lcd.h: 28:  TRISD = 0X00;
  1688  0568  0188               	clrf	8	;volatile
  1689  0569                     l53:
  1690  0569  0008               	return
  1691  056A                     __end_of_init:
  1692                           
  1693                           	psect	text13
  1694  056A                     __ptext13:	
  1695 ;; *************** function _LCD_enable *****************
  1696 ;; Defined at:
  1697 ;;		line 85 in file "./lcd.h"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		_delay
  1720 ;; This function is called by:
  1721 ;;		_LCD_init
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _LCD_enable
  1727  056A                     _LCD_enable:
  1728  056A                     l1227:	
  1729                           ;incstack = 0
  1730                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1731                           
  1732                           
  1733                           ;./lcd.h: 87:  RA5 = 0;
  1734  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1735  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1736  056C  1285               	bcf	5,5	;volatile
  1737                           
  1738                           ;./lcd.h: 88:  RA4 = 0;
  1739  056D  1205               	bcf	5,4	;volatile
  1740                           
  1741                           ;./lcd.h: 89:  RA3 = 0;
  1742  056E  1185               	bcf	5,3	;volatile
  1743  056F                     l1229:
  1744                           
  1745                           ;./lcd.h: 90:  delay();
  1746  056F  120A  118A  25CC  120A  118A  	fcall	_delay
  1747  0574                     l1231:
  1748                           
  1749                           ;./lcd.h: 91:  RA3 = 1;
  1750  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0576  1585               	bsf	5,3	;volatile
  1753  0577                     l71:
  1754  0577  0008               	return
  1755  0578                     __end_of_LCD_enable:
  1756                           
  1757                           	psect	text14
  1758  05CC                     __ptext14:	
  1759 ;; *************** function _delay *****************
  1760 ;; Defined at:
  1761 ;;		line 94 in file "./lcd.h"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  i               2    0[COMMON] int 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, btemp+1
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       0       0       0       0
  1776 ;;      Locals:         2       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0
  1778 ;;      Totals:         2       0       0       0       0
  1779 ;;Total ram usage:        2 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_LCD_escreve
  1785 ;;		_LCD_limpa
  1786 ;;		_LCD_linha1
  1787 ;;		_LCD_linha2
  1788 ;;		_LCD_enable
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _delay
  1794  05CC                     _delay:
  1795  05CC                     l1185:	
  1796                           ;incstack = 0
  1797                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1798                           
  1799                           
  1800                           ;./lcd.h: 96:  int i;;./lcd.h: 97:  for (i = 0;i < 5000;i++);
  1801  05CC  01F0               	clrf	delay@i
  1802  05CD  01F1               	clrf	delay@i+1
  1803  05CE                     l1191:
  1804  05CE  3001               	movlw	1
  1805  05CF  07F0               	addwf	delay@i,f
  1806  05D0  1803               	skipnc
  1807  05D1  0AF1               	incf	delay@i+1,f
  1808  05D2  3000               	movlw	0
  1809  05D3  07F1               	addwf	delay@i+1,f
  1810  05D4                     l1193:
  1811  05D4  0871               	movf	delay@i+1,w
  1812  05D5  3A80               	xorlw	128
  1813  05D6  00FF               	movwf	btemp+1
  1814  05D7  3093               	movlw	147
  1815  05D8  027F               	subwf	btemp+1,w
  1816  05D9  1D03               	skipz
  1817  05DA  2DDD               	goto	u395
  1818  05DB  3088               	movlw	136
  1819  05DC  0270               	subwf	delay@i,w
  1820  05DD                     u395:
  1821  05DD  1C03               	skipc
  1822  05DE  2DE0               	goto	u391
  1823  05DF  2DE1               	goto	u390
  1824  05E0                     u391:
  1825  05E0  2DCE               	goto	l1191
  1826  05E1                     u390:
  1827  05E1                     l76:
  1828  05E1  0008               	return
  1829  05E2                     __end_of_delay:
  1830  007E                     btemp	set	126	;btemp
  1831  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    aux	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> senhaUserConfere(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> senhaUser(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_validaUser
    _validaUser->_strcmp
    _telaInicial->_strlen
    _LCD_linha1->_delay
    _Linha2->_strlen
    _espacoLivre->_LCD_escreve
    _LCD_linha2->_delay
    _LCD_escreve->_delay
    _LCD_limpa->_delay
    _LCD_enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1174
                        _LCD_escreve
                           _LCD_init
                          _LCD_limpa
                             _Linha2
                        _telaInicial
                         _validaUser
 ---------------------------------------------------------------------------------
 (1) _validaUser                                           3     3      0     268
                                              7 COMMON     3     3      0
                        _LCD_escreve
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _telaInicial                                          4     4      0     316
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LCD_linha1                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _Linha2                                               4     4      0     430
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha2
                        _espacoLivre
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _espacoLivre                                          0     0      0     114
                        _LCD_escreve
                         _LCD_linha2
 ---------------------------------------------------------------------------------
 (3) _LCD_linha2                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_escreve                                          1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_limpa                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      46
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_escreve
     _delay
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_limpa
     _delay
   _Linha2
     _LCD_escreve
     _LCD_linha2
       _delay
     _espacoLivre
       _LCD_escreve
       _LCD_linha2
     _strlen
   _telaInicial
     _LCD_escreve
     _LCD_linha1
       _delay
     _strlen
   _validaUser
     _LCD_escreve
     _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 29 15:24:44 2021

                      pc 0002                       l53 0569                       l62 0587  
                     l71 0577                       l56 06A1                       l65 05A7  
                     l59 05B8                       l76 05E1                       l68 0597  
                     fsr 0004              ?_LCD_enable 0070                      l161 06DC  
                    l155 0719                      l171 07D2                      l164 0644  
                    l713 066E                      l719 05FA                      _RA1 0029  
                    _RB0 0030                      _RA3 002B                      _RB1 0031  
                    _RA4 002C                      _RB2 0032                      _RA5 002D  
                    _RB3 0033                      u400 05F4                      u401 05F3  
                    u410 0662                      u411 0661                      u420 0669  
                    u421 0668                      u430 0713                      u431 0712  
                    u440 06D7                      u441 06D6                      u450 076F  
                    u435 070F                      u451 076E                      u460 07D2  
                    u445 06D3                      u461 07D1                      u390 05E1  
                    u391 05E0                      u395 05DD                      u950 0736  
                    u951 0735                      u960 074A                      u961 0749  
            ?_LCD_linha1 0070              ?_LCD_linha2 0070                      _aux 007C  
                    _msg 0022                      fsr0 0004                      indf 0000  
                   l1201 05AF                     l1203 05B0                     l1211 058D  
                   l1221 0562                     l1301 057F                     l1205 05B5  
                   l1213 058E                     l1231 0574                     l1223 0565  
                   l1303 0584                     l1215 058F                     l1207 0588  
                   l1311 06F5                     l1225 0568                     l1217 0594  
                   l1209 058C                     l1321 06AF                     l1241 059F  
                   l1233 0598                     l1313 06FB                     l1305 06DD  
                   l1227 056A                     l1219 055E                     l1251 05F4  
                   l1323 06B9                     l1243 05A4                     l1235 059C  
                   l1315 0713                     l1307 06E8                     l1331 075F  
                   l1229 056F                     l1245 05E3                     l1325 06BF  
                   l1317 06A2                     l1237 059D                     l1309 06EB  
                   l1261 064B                     l1341 0783                     l1333 076F  
                   l1191 05CE                     l1271 066F                     l1255 061B  
                   l1247 05E8                     l1327 06D7                     l1319 06AC  
                   l1239 059E                     l1263 064F                     l1351 07A1  
                   l1343 0789                     l1335 0771                     l1193 05D4  
                   l1185 05CC                     l1281 0686                     l1273 0674  
                   l1249 05EC                     l1265 0662                     l1257 0646  
                   l1361 07BF                     l1353 07A7                     l1345 078F  
                   l1337 0777                     l1329 075E                     l1601 0755  
                   l1291 069C                     l1283 068A                     l1275 0678  
                   l1195 05A9                     l1267 0669                     l1259 0647  
                   l1355 07AD                     l1347 0795                     l1339 077D  
                   l1363 07CC                     l1285 068F                     l1277 067D  
                   l1293 0578                     l1197 05AD                     l1357 07B3  
                   l1349 079B                     l1287 0693                     l1279 0681  
                   l1295 057C                     l1199 05AE                     l1359 07B9  
                   l1289 0698                     l1297 057D                     l1299 057E  
                   l1581 071A                     l1591 072E                     l1583 071E  
                   l1593 0736                     l1585 0720                     l1595 0740  
                   l1587 0724                     l1597 0744                     l1589 0729  
                   l1599 074A                     u1707 07C5             ?_LCD_escreve 0070  
                   _main 071A                     _msg2 0031                     _init 055E  
                   btemp 007E             ?_espacoLivre 0070         _senhaUserConfere 0036  
                   start 0000       __size_of_LCD_limpa 0010         __end_of_LCD_init 06A2  
                  ?_main 0070                    ?_init 0070                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _delay 05CC                    _input 004C                    pclath 000A  
                  status 0003                    wtemp0 007E      __size_of_LCD_enable 000E  
    __size_of_LCD_linha1 0010      __size_of_LCD_linha2 0010          __initialization 07D3  
           __end_of_main 075E             __end_of_init 056A             ?_telaInicial 0070  
                 ??_main 007A                   ??_init 0070        __end_of_LCD_limpa 0588  
                 ?_delay 0070                   _ADCON1 009F                   _Linha2 06A2  
                 _config 004A                   _painel 0020                   delay@i 0070  
                 _strcmp 0645                   _strlen 05E2             __pdataCOMMON 007A  
__end_of__initialization 07FC                ?_LCD_init 0070     __size_of_LCD_escreve 0011  
           LCD_escreve@x 0072     __size_of_espacoLivre 002A           __pcstackCOMMON 0070  
           __pidataBANK0 05FB            __end_of_delay 05E2             ??_LCD_enable 0072  
           ??_LCD_linha1 0072             ??_LCD_linha2 0072                  ??_delay 0070  
             __pbssBANK0 0040               ??_LCD_init 0072                  ?_Linha2 0070  
     __end_of_LCD_enable 0578       __end_of_LCD_linha1 05A8       __end_of_LCD_linha2 0598  
             __pmaintext 071A                  ?_strcmp 0070                  ?_strlen 0070  
   __size_of_telaInicial 003D                  Linha2@i 0077          __size_of_Linha2 003B  
                __ptext1 075E                  __ptext2 0645                  __ptext3 06DD  
                __ptext4 0598                  __ptext5 06A2                  __ptext6 05E2  
                __ptext7 061B                  __ptext8 0588                  __ptext9 05A8  
        __size_of_strcmp 002A          __size_of_strlen 0019     end_of_initialization 07FC  
              _LCD_limpa 0578               _validaUser 075E                  strcmp@r 0075  
                strlen@s 0074               ?_LCD_limpa 0070        __size_of_LCD_init 0033  
         __end_of_Linha2 06DD            __pidataCOMMON 055C           __end_of_strcmp 066F  
         __end_of_strlen 05FB      start_initialization 07D3            ??_LCD_escreve 0072  
          ??_espacoLivre 0073              ?_validaUser 0070                 ??_Linha2 0075  
             init_fetch0 05B9              __pdataBANK0 0020                 ??_strcmp 0072  
               ??_strlen 0072              __pbssCOMMON 007C                ___latbits 0002  
            ??_LCD_limpa 0072      __end_of_LCD_escreve 05B9      __end_of_espacoLivre 0645  
           telaInicial@i 0077            ??_telaInicial 0075      __size_of_validaUser 0075  
         __size_of_delay 0016                 _LCD_init 066F                _senhaUser 003B  
              _userFalse 007A      __end_of_telaInicial 071A              _LCD_escreve 05A8  
            _espacoLivre 061B                 __ptext10 0578                 __ptext11 066F  
               __ptext12 055E                 __ptext13 056A                 __ptext14 05CC  
          __size_of_main 0044            __size_of_init 000C             ??_validaUser 0077  
               _senhaCoa 0045              _telaInicial 06DD               _LCD_enable 056A  
             _LCD_linha1 0598               _LCD_linha2 0588              _senhaConfig 0040  
               init_ram0 05BD       __end_of_validaUser 07D3                 strcmp@s1 0076  
               strcmp@s2 0070                 strlen@cp 0073  
