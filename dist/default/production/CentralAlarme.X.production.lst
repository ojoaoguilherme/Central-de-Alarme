

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 27 01:48:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183  04C4                     __pidataBANK0:
   184                           
   185                           ;initializer for _msg
   186  04C4  3444               	retlw	68
   187  04C5  3469               	retlw	105
   188  04C6  3467               	retlw	103
   189  04C7  3469               	retlw	105
   190  04C8  3474               	retlw	116
   191  04C9  3465               	retlw	101
   192  04CA  3420               	retlw	32
   193  04CB  3461               	retlw	97
   194  04CC  3420               	retlw	32
   195  04CD  3473               	retlw	115
   196  04CE  3465               	retlw	101
   197  04CF  346E               	retlw	110
   198  04D0  3468               	retlw	104
   199  04D1  3461               	retlw	97
   200  04D2  3400               	retlw	0
   201                           
   202                           ;initializer for _msg2
   203  04D3  345F               	retlw	95
   204  04D4  345F               	retlw	95
   205  04D5  345F               	retlw	95
   206  04D6  345F               	retlw	95
   207  04D7  3400               	retlw	0
   208  0006                     _PORTB	set	6
   209  0009                     _PORTE	set	9
   210  0008                     _PORTD	set	8
   211  0033                     _RB3	set	51
   212  0032                     _RB2	set	50
   213  0031                     _RB1	set	49
   214  0030                     _RB0	set	48
   215  002B                     _RA3	set	43
   216  002C                     _RA4	set	44
   217  002D                     _RA5	set	45
   218  0029                     _RA1	set	41
   219  0086                     _TRISB	set	134
   220  0089                     _TRISE	set	137
   221  0088                     _TRISD	set	136
   222  0085                     _TRISA	set	133
   223  009F                     _ADCON1	set	159
   224                           
   225                           	psect	cinit
   226  07EC                     start_initialization:	
   227                           ; #config settings
   228                           
   229  07EC                     __initialization:
   230                           
   231                           ; Initialize objects allocated to BANK0
   232  07EC  1383               	bcf	3,7	;select IRP bank0
   233  07ED  3034               	movlw	low (__pdataBANK0+20)
   234  07EE  00FD               	movwf	btemp+-1
   235  07EF  3004               	movlw	high __pidataBANK0
   236  07F0  00FE               	movwf	btemp
   237  07F1  30C4               	movlw	low __pidataBANK0
   238  07F2  00FF               	movwf	btemp+1
   239  07F3  3020               	movlw	low __pdataBANK0
   240  07F4  0084               	movwf	4
   241  07F5  120A  118A  24B5  120A  118A  	fcall	init_ram0
   242                           
   243                           ; Clear objects allocated to COMMON
   244  07FA  01F9               	clrf	__pbssCOMMON& (0+127)
   245  07FB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2D62   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  0079                     __pbssCOMMON:
   255  0079                     _state:
   256  0079                     	ds	2
   257                           
   258                           	psect	dataBANK0
   259  0020                     __pdataBANK0:
   260  0020                     _msg:
   261  0020                     	ds	15
   262  002F                     _msg2:
   263  002F                     	ds	5
   264                           
   265                           	psect	inittext
   266  04B1                     init_fetch0:	
   267                           ;	Called with low address in FSR and high address in W
   268                           
   269  04B1  087E               	movf	btemp,w
   270  04B2  008A               	movwf	10
   271  04B3  087F               	movf	btemp+1,w
   272  04B4  0082               	movwf	2
   273  04B5                     init_ram0:	
   274                           ;Called with:
   275                           ;	high address of idata address in btemp 
   276                           ;	low address of idata address in btemp+1 
   277                           ;	low address of data in FSR
   278                           ;	high address + 1 of data in btemp-1
   279                           
   280  04B5  120A  118A  24B1  120A  118A  	fcall	init_fetch0
   281  04BA  0080               	movwf	0
   282  04BB  0A84               	incf	4,f
   283  04BC  0804               	movf	4,w
   284  04BD  067D               	xorwf	btemp+-1,w
   285  04BE  1903               	btfsc	3,2
   286  04BF  3400               	retlw	0
   287  04C0  0AFF               	incf	btemp+1,f
   288  04C1  1903               	btfsc	3,2
   289  04C2  0AFE               	incf	btemp,f
   290  04C3  2CB5               	goto	init_ram0
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:
   294  0070                     ?_LCD_enable:
   295  0070                     ?_delay:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ??_delay:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_telaInicial:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_Linha2:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_teclado:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_espacoLivre:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_init:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ??_init:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_LCD_init:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_LCD_escreve:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_LCD_limpa:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_LCD_linha1:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_LCD_linha2:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_liga_buzzer:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_liga_buzzer:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_strlen:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     delay@i:	
   347                           ; 2 bytes @ 0x0
   348                           
   349                           
   350                           ; 2 bytes @ 0x0
   351  0070                     	ds	2
   352  0072                     ??_LCD_enable:
   353  0072                     ??_strlen:	
   354                           ; 1 bytes @ 0x2
   355                           
   356  0072                     ??_LCD_init:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  0072                     ??_LCD_escreve:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ??_LCD_limpa:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ??_LCD_linha1:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ??_LCD_linha2:	
   369                           ; 1 bytes @ 0x2
   370                           
   371  0072                     LCD_escreve@x:	
   372                           ; 1 bytes @ 0x2
   373                           
   374                           
   375                           ; 1 bytes @ 0x2
   376  0072                     	ds	1
   377  0073                     ??_teclado:
   378  0073                     ??_espacoLivre:	
   379                           ; 1 bytes @ 0x3
   380                           
   381  0073                     strlen@cp:	
   382                           ; 1 bytes @ 0x3
   383                           
   384                           
   385                           ; 1 bytes @ 0x3
   386  0073                     	ds	1
   387  0074                     strlen@s:
   388                           
   389                           ; 1 bytes @ 0x4
   390  0074                     	ds	1
   391  0075                     ??_telaInicial:
   392  0075                     ??_Linha2:	
   393                           ; 1 bytes @ 0x5
   394                           
   395                           
   396                           ; 1 bytes @ 0x5
   397  0075                     	ds	2
   398  0077                     telaInicial@i:
   399  0077                     Linha2@i:	
   400                           ; 2 bytes @ 0x7
   401                           
   402                           
   403                           ; 2 bytes @ 0x7
   404  0077                     	ds	2
   405  0079                     ??_main:
   406                           
   407                           	psect	maintext
   408  0562                     __pmaintext:	
   409                           ; 1 bytes @ 0x9
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 25 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : B00/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels required when called: 4
   435 ;; This function calls:
   436 ;;		_LCD_init
   437 ;;		_LCD_limpa
   438 ;;		_Linha2
   439 ;;		_teclado
   440 ;;		_telaInicial
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _main
   448  0562                     _main:
   449  0562                     l1288:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   452                           
   453                           
   454                           ;main.c: 26:     TRISE = 0;
   455  0562  1683               	bsf	3,5	;RP0=1, select bank1
   456  0563  1303               	bcf	3,6	;RP1=0, select bank1
   457  0564  0189               	clrf	9	;volatile
   458                           
   459                           ;main.c: 27:     TRISD = 0;
   460  0565  0188               	clrf	8	;volatile
   461  0566                     l1290:
   462                           
   463                           ;main.c: 28:     TRISB = 0x0F;
   464  0566  300F               	movlw	15
   465  0567  0086               	movwf	6	;volatile
   466  0568                     l1292:
   467                           
   468                           ;main.c: 30:     PORTE = 0x01;
   469  0568  3001               	movlw	1
   470  0569  1283               	bcf	3,5	;RP0=0, select bank0
   471  056A  1303               	bcf	3,6	;RP1=0, select bank0
   472  056B  0089               	movwf	9	;volatile
   473  056C                     l1294:
   474                           
   475                           ;main.c: 32:     LCD_init();
   476  056C  120A  118A  2593  120A  118A  	fcall	_LCD_init
   477  0571                     l1296:
   478                           
   479                           ;main.c: 33:     LCD_limpa();
   480  0571  120A  118A  2470  120A  118A  	fcall	_LCD_limpa
   481  0576                     l1298:
   482                           
   483                           ;main.c: 37:         if (state == 0){
   484  0576  0879               	movf	_state,w
   485  0577  047A               	iorwf	_state+1,w
   486  0578  1D03               	btfss	3,2
   487  0579  2D7B               	goto	u441
   488  057A  2D7C               	goto	u440
   489  057B                     u441:
   490  057B  2D8A               	goto	l1304
   491  057C                     u440:
   492  057C                     l1300:
   493                           
   494                           ;main.c: 38:             telaInicial();
   495  057C  120A  118A  2531  120A  118A  	fcall	_telaInicial
   496                           
   497                           ;main.c: 39:             Linha2();
   498  0581  120A  118A  25C6  120A  118A  	fcall	_Linha2
   499  0586                     l1302:
   500                           
   501                           ;main.c: 40:             state = 1;
   502  0586  3001               	movlw	1
   503  0587  00F9               	movwf	_state
   504  0588  3000               	movlw	0
   505  0589  00FA               	movwf	_state+1
   506  058A                     l1304:
   507                           
   508                           ;main.c: 43:         teclado();
   509  058A  120A  118A  2601  120A  118A  	fcall	_teclado
   510  058F  2D76               	goto	l1298
   511  0590  120A  118A  2800   	ljmp	start
   512  0593                     __end_of_main:
   513                           
   514                           	psect	text1
   515  0531                     __ptext1:	
   516 ;; *************** function _telaInicial *****************
   517 ;; Defined at:
   518 ;;		line 234 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  i               2    7[COMMON] int 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         2       0       0       0       0
   534 ;;      Temps:          2       0       0       0       0
   535 ;;      Totals:         4       0       0       0       0
   536 ;;Total ram usage:        4 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 2
   539 ;; This function calls:
   540 ;;		_LCD_escreve
   541 ;;		_LCD_linha1
   542 ;;		_strlen
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _telaInicial
   550  0531                     _telaInicial:
   551  0531                     l1122:	
   552                           ;incstack = 0
   553                           ; Regs used in _telaInicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   554                           
   555                           
   556                           ;main.c: 236:     LCD_linha1();
   557  0531  120A  118A  2490  120A  118A  	fcall	_LCD_linha1
   558  0536                     l1124:
   559                           
   560                           ;main.c: 237:     for (int i = 0; i <= strlen(msg)-1; i++){
   561  0536  01F7               	clrf	telaInicial@i
   562  0537  01F8               	clrf	telaInicial@i+1
   563  0538  2D49               	goto	l1130
   564  0539                     l1126:
   565                           
   566                           ;main.c: 238:         LCD_escreve(msg[i]);
   567  0539  0877               	movf	telaInicial@i,w
   568  053A  3E20               	addlw	(low (_msg| 0))& (0+255)
   569  053B  0084               	movwf	4
   570  053C  1383               	bcf	3,7	;select IRP bank0
   571  053D  0800               	movf	0,w
   572  053E  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   573  0543                     l1128:
   574                           
   575                           ;main.c: 239:     }
   576  0543  3001               	movlw	1
   577  0544  07F7               	addwf	telaInicial@i,f
   578  0545  1803               	skipnc
   579  0546  0AF8               	incf	telaInicial@i+1,f
   580  0547  3000               	movlw	0
   581  0548  07F8               	addwf	telaInicial@i+1,f
   582  0549                     l1130:
   583  0549  3020               	movlw	(low (_msg| 0))& (0+255)
   584  054A  120A  118A  24EE  120A  118A  	fcall	_strlen
   585  054F  0870               	movf	?_strlen,w
   586  0550  3EFF               	addlw	255
   587  0551  00F5               	movwf	??_telaInicial
   588  0552  0871               	movf	?_strlen+1,w
   589  0553  1803               	skipnc
   590  0554  3E01               	addlw	1
   591  0555  3EFF               	addlw	255
   592  0556  00F6               	movwf	??_telaInicial+1
   593  0557  0878               	movf	telaInicial@i+1,w
   594  0558  0276               	subwf	??_telaInicial+1,w
   595  0559  1D03               	skipz
   596  055A  2D5D               	goto	u255
   597  055B  0877               	movf	telaInicial@i,w
   598  055C  0275               	subwf	??_telaInicial,w
   599  055D                     u255:
   600  055D  1803               	skipnc
   601  055E  2D60               	goto	u251
   602  055F  2D61               	goto	u250
   603  0560                     u251:
   604  0560  2D39               	goto	l1126
   605  0561                     u250:
   606  0561                     l123:
   607  0561  0008               	return
   608  0562                     __end_of_telaInicial:
   609                           
   610                           	psect	text2
   611  0490                     __ptext2:	
   612 ;; *************** function _LCD_linha1 *****************
   613 ;; Defined at:
   614 ;;		line 65 in file "./lcd.h"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 1
   635 ;; This function calls:
   636 ;;		_delay
   637 ;; This function is called by:
   638 ;;		_telaInicial
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _LCD_linha1
   644  0490                     _LCD_linha1:
   645  0490                     l1064:	
   646                           ;incstack = 0
   647                           ; Regs used in _LCD_linha1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   648                           
   649                           
   650                           ;./lcd.h: 66:     PORTD = 0x02;
   651  0490  3002               	movlw	2
   652  0491  1283               	bcf	3,5	;RP0=0, select bank0
   653  0492  1303               	bcf	3,6	;RP1=0, select bank0
   654  0493  0088               	movwf	8	;volatile
   655  0494                     l1066:
   656                           
   657                           ;./lcd.h: 67:     RA5 = 0;
   658  0494  1285               	bcf	5,5	;volatile
   659  0495                     l1068:
   660                           
   661                           ;./lcd.h: 68:     RA4 = 0;
   662  0495  1205               	bcf	5,4	;volatile
   663  0496                     l1070:
   664                           
   665                           ;./lcd.h: 69:     RA3=0;
   666  0496  1185               	bcf	5,3	;volatile
   667  0497                     l1072:
   668                           
   669                           ;./lcd.h: 70:     delay();
   670  0497  120A  118A  24D8  120A  118A  	fcall	_delay
   671  049C                     l1074:
   672                           
   673                           ;./lcd.h: 71:  RA3 = 1;
   674  049C  1283               	bcf	3,5	;RP0=0, select bank0
   675  049D  1303               	bcf	3,6	;RP1=0, select bank0
   676  049E  1585               	bsf	5,3	;volatile
   677  049F                     l63:
   678  049F  0008               	return
   679  04A0                     __end_of_LCD_linha1:
   680                           
   681                           	psect	text3
   682  0601                     __ptext3:	
   683 ;; *************** function _teclado *****************
   684 ;; Defined at:
   685 ;;		line 54 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          3       0       0       0       0
   702 ;;      Totals:         3       0       0       0       0
   703 ;;Total ram usage:        3 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 2
   706 ;; This function calls:
   707 ;;		_LCD_escreve
   708 ;;		_liga_buzzer
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _teclado
   716  0601                     _teclado:
   717  0601                     l1144:	
   718                           ;incstack = 0
   719                           ; Regs used in _teclado: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   720                           
   721                           
   722                           ;main.c: 56:     PORTE = 0x01;
   723  0601  3001               	movlw	1
   724  0602  1283               	bcf	3,5	;RP0=0, select bank0
   725  0603  1303               	bcf	3,6	;RP1=0, select bank0
   726  0604  0089               	movwf	9	;volatile
   727                           
   728                           ;main.c: 60:     PORTB = 0b11101111;
   729  0605  30EF               	movlw	239
   730  0606  0086               	movwf	6	;volatile
   731  0607                     l1146:
   732                           
   733                           ;main.c: 64:     if (RB0 == 0){
   734  0607  1806               	btfsc	6,0	;volatile
   735  0608  2E0A               	goto	u271
   736  0609  2E0B               	goto	u270
   737  060A                     u271:
   738  060A  2E23               	goto	l1154
   739  060B                     u270:
   740  060B                     l1148:
   741                           
   742                           ;main.c: 65:         _delay((unsigned long)((200)*(20000000/4000.0)));
   743  060B  3006               	movlw	6
   744  060C  00F5               	movwf	??_teclado+2
   745  060D  3013               	movlw	19
   746  060E  00F4               	movwf	??_teclado+1
   747  060F  30AD               	movlw	173
   748  0610  00F3               	movwf	??_teclado
   749  0611                     u457:
   750  0611  0BF3               	decfsz	??_teclado,f
   751  0612  2E11               	goto	u457
   752  0613  0BF4               	decfsz	??_teclado+1,f
   753  0614  2E11               	goto	u457
   754  0615  0BF5               	decfsz	??_teclado+2,f
   755  0616  2E11               	goto	u457
   756  0617  2E18               	nop2
   757  0618                     l1150:
   758                           
   759                           ;main.c: 66:         liga_buzzer();
   760  0618  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   761  061D                     l1152:
   762                           
   763                           ;main.c: 67:         LCD_escreve('0');
   764  061D  3030               	movlw	48
   765  061E  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   766  0623                     l1154:
   767                           
   768                           ;main.c: 73:     if (RB1 == 0){
   769  0623  1283               	bcf	3,5	;RP0=0, select bank0
   770  0624  1303               	bcf	3,6	;RP1=0, select bank0
   771  0625  1886               	btfsc	6,1	;volatile
   772  0626  2E28               	goto	u281
   773  0627  2E29               	goto	u280
   774  0628                     u281:
   775  0628  2E41               	goto	l1162
   776  0629                     u280:
   777  0629                     l1156:
   778                           
   779                           ;main.c: 74:         _delay((unsigned long)((200)*(20000000/4000.0)));
   780  0629  3006               	movlw	6
   781  062A  00F5               	movwf	??_teclado+2
   782  062B  3013               	movlw	19
   783  062C  00F4               	movwf	??_teclado+1
   784  062D  30AD               	movlw	173
   785  062E  00F3               	movwf	??_teclado
   786  062F                     u467:
   787  062F  0BF3               	decfsz	??_teclado,f
   788  0630  2E2F               	goto	u467
   789  0631  0BF4               	decfsz	??_teclado+1,f
   790  0632  2E2F               	goto	u467
   791  0633  0BF5               	decfsz	??_teclado+2,f
   792  0634  2E2F               	goto	u467
   793  0635  2E36               	nop2
   794  0636                     l1158:
   795                           
   796                           ;main.c: 75:         liga_buzzer();
   797  0636  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   798  063B                     l1160:
   799                           
   800                           ;main.c: 76:         LCD_escreve('1');
   801  063B  3031               	movlw	49
   802  063C  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   803  0641                     l1162:
   804                           
   805                           ;main.c: 83:     if (RB2 == 0){
   806  0641  1283               	bcf	3,5	;RP0=0, select bank0
   807  0642  1303               	bcf	3,6	;RP1=0, select bank0
   808  0643  1906               	btfsc	6,2	;volatile
   809  0644  2E46               	goto	u291
   810  0645  2E47               	goto	u290
   811  0646                     u291:
   812  0646  2E5F               	goto	l1170
   813  0647                     u290:
   814  0647                     l1164:
   815                           
   816                           ;main.c: 84:         _delay((unsigned long)((200)*(20000000/4000.0)));
   817  0647  3006               	movlw	6
   818  0648  00F5               	movwf	??_teclado+2
   819  0649  3013               	movlw	19
   820  064A  00F4               	movwf	??_teclado+1
   821  064B  30AD               	movlw	173
   822  064C  00F3               	movwf	??_teclado
   823  064D                     u477:
   824  064D  0BF3               	decfsz	??_teclado,f
   825  064E  2E4D               	goto	u477
   826  064F  0BF4               	decfsz	??_teclado+1,f
   827  0650  2E4D               	goto	u477
   828  0651  0BF5               	decfsz	??_teclado+2,f
   829  0652  2E4D               	goto	u477
   830  0653  2E54               	nop2
   831  0654                     l1166:
   832                           
   833                           ;main.c: 85:         liga_buzzer();
   834  0654  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   835  0659                     l1168:
   836                           
   837                           ;main.c: 86:         LCD_escreve('2');
   838  0659  3032               	movlw	50
   839  065A  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   840  065F                     l1170:
   841                           
   842                           ;main.c: 92:     if (RB3 == 0){
   843  065F  1283               	bcf	3,5	;RP0=0, select bank0
   844  0660  1303               	bcf	3,6	;RP1=0, select bank0
   845  0661  1986               	btfsc	6,3	;volatile
   846  0662  2E64               	goto	u301
   847  0663  2E65               	goto	u300
   848  0664                     u301:
   849  0664  2E7D               	goto	l1178
   850  0665                     u300:
   851  0665                     l1172:
   852                           
   853                           ;main.c: 93:         _delay((unsigned long)((200)*(20000000/4000.0)));
   854  0665  3006               	movlw	6
   855  0666  00F5               	movwf	??_teclado+2
   856  0667  3013               	movlw	19
   857  0668  00F4               	movwf	??_teclado+1
   858  0669  30AD               	movlw	173
   859  066A  00F3               	movwf	??_teclado
   860  066B                     u487:
   861  066B  0BF3               	decfsz	??_teclado,f
   862  066C  2E6B               	goto	u487
   863  066D  0BF4               	decfsz	??_teclado+1,f
   864  066E  2E6B               	goto	u487
   865  066F  0BF5               	decfsz	??_teclado+2,f
   866  0670  2E6B               	goto	u487
   867  0671  2E72               	nop2
   868  0672                     l1174:
   869                           
   870                           ;main.c: 94:         liga_buzzer();
   871  0672  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   872  0677                     l1176:
   873                           
   874                           ;main.c: 95:         LCD_escreve('3');
   875  0677  3033               	movlw	51
   876  0678  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   877  067D                     l1178:
   878                           
   879                           ;main.c: 102:     PORTB = 0b11011111;
   880  067D  30DF               	movlw	223
   881  067E  1283               	bcf	3,5	;RP0=0, select bank0
   882  067F  1303               	bcf	3,6	;RP1=0, select bank0
   883  0680  0086               	movwf	6	;volatile
   884  0681                     l1180:
   885                           
   886                           ;main.c: 107:     if (RB0 == 0){
   887  0681  1806               	btfsc	6,0	;volatile
   888  0682  2E84               	goto	u311
   889  0683  2E85               	goto	u310
   890  0684                     u311:
   891  0684  2E9D               	goto	l1188
   892  0685                     u310:
   893  0685                     l1182:
   894                           
   895                           ;main.c: 108:         _delay((unsigned long)((200)*(20000000/4000.0)));
   896  0685  3006               	movlw	6
   897  0686  00F5               	movwf	??_teclado+2
   898  0687  3013               	movlw	19
   899  0688  00F4               	movwf	??_teclado+1
   900  0689  30AD               	movlw	173
   901  068A  00F3               	movwf	??_teclado
   902  068B                     u497:
   903  068B  0BF3               	decfsz	??_teclado,f
   904  068C  2E8B               	goto	u497
   905  068D  0BF4               	decfsz	??_teclado+1,f
   906  068E  2E8B               	goto	u497
   907  068F  0BF5               	decfsz	??_teclado+2,f
   908  0690  2E8B               	goto	u497
   909  0691  2E92               	nop2
   910  0692                     l1184:
   911                           
   912                           ;main.c: 109:         liga_buzzer();
   913  0692  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   914  0697                     l1186:
   915                           
   916                           ;main.c: 110:         LCD_escreve('4');
   917  0697  3034               	movlw	52
   918  0698  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   919  069D                     l1188:
   920                           
   921                           ;main.c: 116:     if (RB1 == 0){
   922  069D  1283               	bcf	3,5	;RP0=0, select bank0
   923  069E  1303               	bcf	3,6	;RP1=0, select bank0
   924  069F  1886               	btfsc	6,1	;volatile
   925  06A0  2EA2               	goto	u321
   926  06A1  2EA3               	goto	u320
   927  06A2                     u321:
   928  06A2  2EBB               	goto	l1196
   929  06A3                     u320:
   930  06A3                     l1190:
   931                           
   932                           ;main.c: 117:         _delay((unsigned long)((200)*(20000000/4000.0)));
   933  06A3  3006               	movlw	6
   934  06A4  00F5               	movwf	??_teclado+2
   935  06A5  3013               	movlw	19
   936  06A6  00F4               	movwf	??_teclado+1
   937  06A7  30AD               	movlw	173
   938  06A8  00F3               	movwf	??_teclado
   939  06A9                     u507:
   940  06A9  0BF3               	decfsz	??_teclado,f
   941  06AA  2EA9               	goto	u507
   942  06AB  0BF4               	decfsz	??_teclado+1,f
   943  06AC  2EA9               	goto	u507
   944  06AD  0BF5               	decfsz	??_teclado+2,f
   945  06AE  2EA9               	goto	u507
   946  06AF  2EB0               	nop2
   947  06B0                     l1192:
   948                           
   949                           ;main.c: 118:         liga_buzzer();
   950  06B0  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   951  06B5                     l1194:
   952                           
   953                           ;main.c: 119:         LCD_escreve('5');
   954  06B5  3035               	movlw	53
   955  06B6  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   956  06BB                     l1196:
   957                           
   958                           ;main.c: 126:     if (RB2 == 0){
   959  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   960  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   961  06BD  1906               	btfsc	6,2	;volatile
   962  06BE  2EC0               	goto	u331
   963  06BF  2EC1               	goto	u330
   964  06C0                     u331:
   965  06C0  2ED9               	goto	l1204
   966  06C1                     u330:
   967  06C1                     l1198:
   968                           
   969                           ;main.c: 127:         _delay((unsigned long)((200)*(20000000/4000.0)));
   970  06C1  3006               	movlw	6
   971  06C2  00F5               	movwf	??_teclado+2
   972  06C3  3013               	movlw	19
   973  06C4  00F4               	movwf	??_teclado+1
   974  06C5  30AD               	movlw	173
   975  06C6  00F3               	movwf	??_teclado
   976  06C7                     u517:
   977  06C7  0BF3               	decfsz	??_teclado,f
   978  06C8  2EC7               	goto	u517
   979  06C9  0BF4               	decfsz	??_teclado+1,f
   980  06CA  2EC7               	goto	u517
   981  06CB  0BF5               	decfsz	??_teclado+2,f
   982  06CC  2EC7               	goto	u517
   983  06CD  2ECE               	nop2
   984  06CE                     l1200:
   985                           
   986                           ;main.c: 128:         liga_buzzer();
   987  06CE  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
   988  06D3                     l1202:
   989                           
   990                           ;main.c: 129:         LCD_escreve('6');
   991  06D3  3036               	movlw	54
   992  06D4  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
   993  06D9                     l1204:
   994                           
   995                           ;main.c: 135:     if (RB3 == 0){
   996  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   997  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   998  06DB  1986               	btfsc	6,3	;volatile
   999  06DC  2EDE               	goto	u341
  1000  06DD  2EDF               	goto	u340
  1001  06DE                     u341:
  1002  06DE  2EF7               	goto	l1212
  1003  06DF                     u340:
  1004  06DF                     l1206:
  1005                           
  1006                           ;main.c: 136:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1007  06DF  3006               	movlw	6
  1008  06E0  00F5               	movwf	??_teclado+2
  1009  06E1  3013               	movlw	19
  1010  06E2  00F4               	movwf	??_teclado+1
  1011  06E3  30AD               	movlw	173
  1012  06E4  00F3               	movwf	??_teclado
  1013  06E5                     u527:
  1014  06E5  0BF3               	decfsz	??_teclado,f
  1015  06E6  2EE5               	goto	u527
  1016  06E7  0BF4               	decfsz	??_teclado+1,f
  1017  06E8  2EE5               	goto	u527
  1018  06E9  0BF5               	decfsz	??_teclado+2,f
  1019  06EA  2EE5               	goto	u527
  1020  06EB  2EEC               	nop2
  1021  06EC                     l1208:
  1022                           
  1023                           ;main.c: 137:         liga_buzzer();
  1024  06EC  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1025  06F1                     l1210:
  1026                           
  1027                           ;main.c: 138:         LCD_escreve('7');
  1028  06F1  3037               	movlw	55
  1029  06F2  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1030  06F7                     l1212:
  1031                           
  1032                           ;main.c: 145:     PORTB = 0b10111111;
  1033  06F7  30BF               	movlw	191
  1034  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1035  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1036  06FA  0086               	movwf	6	;volatile
  1037  06FB                     l1214:
  1038                           
  1039                           ;main.c: 150:     if (RB0 == 0){
  1040  06FB  1806               	btfsc	6,0	;volatile
  1041  06FC  2EFE               	goto	u351
  1042  06FD  2EFF               	goto	u350
  1043  06FE                     u351:
  1044  06FE  2F17               	goto	l1222
  1045  06FF                     u350:
  1046  06FF                     l1216:
  1047                           
  1048                           ;main.c: 151:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1049  06FF  3006               	movlw	6
  1050  0700  00F5               	movwf	??_teclado+2
  1051  0701  3013               	movlw	19
  1052  0702  00F4               	movwf	??_teclado+1
  1053  0703  30AD               	movlw	173
  1054  0704  00F3               	movwf	??_teclado
  1055  0705                     u537:
  1056  0705  0BF3               	decfsz	??_teclado,f
  1057  0706  2F05               	goto	u537
  1058  0707  0BF4               	decfsz	??_teclado+1,f
  1059  0708  2F05               	goto	u537
  1060  0709  0BF5               	decfsz	??_teclado+2,f
  1061  070A  2F05               	goto	u537
  1062  070B  2F0C               	nop2
  1063  070C                     l1218:
  1064                           
  1065                           ;main.c: 152:         liga_buzzer();
  1066  070C  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1067  0711                     l1220:
  1068                           
  1069                           ;main.c: 153:         LCD_escreve('8');
  1070  0711  3038               	movlw	56
  1071  0712  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1072  0717                     l1222:
  1073                           
  1074                           ;main.c: 160:     if (RB1 == 0){
  1075  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0719  1886               	btfsc	6,1	;volatile
  1078  071A  2F1C               	goto	u361
  1079  071B  2F1D               	goto	u360
  1080  071C                     u361:
  1081  071C  2F35               	goto	l1230
  1082  071D                     u360:
  1083  071D                     l1224:
  1084                           
  1085                           ;main.c: 161:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1086  071D  3006               	movlw	6
  1087  071E  00F5               	movwf	??_teclado+2
  1088  071F  3013               	movlw	19
  1089  0720  00F4               	movwf	??_teclado+1
  1090  0721  30AD               	movlw	173
  1091  0722  00F3               	movwf	??_teclado
  1092  0723                     u547:
  1093  0723  0BF3               	decfsz	??_teclado,f
  1094  0724  2F23               	goto	u547
  1095  0725  0BF4               	decfsz	??_teclado+1,f
  1096  0726  2F23               	goto	u547
  1097  0727  0BF5               	decfsz	??_teclado+2,f
  1098  0728  2F23               	goto	u547
  1099  0729  2F2A               	nop2
  1100  072A                     l1226:
  1101                           
  1102                           ;main.c: 162:         liga_buzzer();
  1103  072A  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1104  072F                     l1228:
  1105                           
  1106                           ;main.c: 163:         LCD_escreve('9');
  1107  072F  3039               	movlw	57
  1108  0730  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1109  0735                     l1230:
  1110                           
  1111                           ;main.c: 170:     if (RB2 == 0){
  1112  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0737  1906               	btfsc	6,2	;volatile
  1115  0738  2F3A               	goto	u371
  1116  0739  2F3B               	goto	u370
  1117  073A                     u371:
  1118  073A  2F53               	goto	l1238
  1119  073B                     u370:
  1120  073B                     l1232:
  1121                           
  1122                           ;main.c: 171:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1123  073B  3006               	movlw	6
  1124  073C  00F5               	movwf	??_teclado+2
  1125  073D  3013               	movlw	19
  1126  073E  00F4               	movwf	??_teclado+1
  1127  073F  30AD               	movlw	173
  1128  0740  00F3               	movwf	??_teclado
  1129  0741                     u557:
  1130  0741  0BF3               	decfsz	??_teclado,f
  1131  0742  2F41               	goto	u557
  1132  0743  0BF4               	decfsz	??_teclado+1,f
  1133  0744  2F41               	goto	u557
  1134  0745  0BF5               	decfsz	??_teclado+2,f
  1135  0746  2F41               	goto	u557
  1136  0747  2F48               	nop2
  1137  0748                     l1234:
  1138                           
  1139                           ;main.c: 172:         liga_buzzer();
  1140  0748  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1141  074D                     l1236:
  1142                           
  1143                           ;main.c: 173:         LCD_escreve('A');
  1144  074D  3041               	movlw	65
  1145  074E  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1146  0753                     l1238:
  1147                           
  1148                           ;main.c: 180:     if (RB3 == 0){
  1149  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0755  1986               	btfsc	6,3	;volatile
  1152  0756  2F58               	goto	u381
  1153  0757  2F59               	goto	u380
  1154  0758                     u381:
  1155  0758  2F71               	goto	l1246
  1156  0759                     u380:
  1157  0759                     l1240:
  1158                           
  1159                           ;main.c: 181:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1160  0759  3006               	movlw	6
  1161  075A  00F5               	movwf	??_teclado+2
  1162  075B  3013               	movlw	19
  1163  075C  00F4               	movwf	??_teclado+1
  1164  075D  30AD               	movlw	173
  1165  075E  00F3               	movwf	??_teclado
  1166  075F                     u567:
  1167  075F  0BF3               	decfsz	??_teclado,f
  1168  0760  2F5F               	goto	u567
  1169  0761  0BF4               	decfsz	??_teclado+1,f
  1170  0762  2F5F               	goto	u567
  1171  0763  0BF5               	decfsz	??_teclado+2,f
  1172  0764  2F5F               	goto	u567
  1173  0765  2F66               	nop2
  1174  0766                     l1242:
  1175                           
  1176                           ;main.c: 182:         liga_buzzer();
  1177  0766  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1178  076B                     l1244:
  1179                           
  1180                           ;main.c: 183:         LCD_escreve('B');
  1181  076B  3042               	movlw	66
  1182  076C  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1183  0771                     l1246:
  1184                           
  1185                           ;main.c: 190:     PORTB = 0b01111111;
  1186  0771  307F               	movlw	127
  1187  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0774  0086               	movwf	6	;volatile
  1190  0775                     l1248:
  1191                           
  1192                           ;main.c: 195:     if (RB0 == 0){
  1193  0775  1806               	btfsc	6,0	;volatile
  1194  0776  2F78               	goto	u391
  1195  0777  2F79               	goto	u390
  1196  0778                     u391:
  1197  0778  2F91               	goto	l1256
  1198  0779                     u390:
  1199  0779                     l1250:
  1200                           
  1201                           ;main.c: 196:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1202  0779  3006               	movlw	6
  1203  077A  00F5               	movwf	??_teclado+2
  1204  077B  3013               	movlw	19
  1205  077C  00F4               	movwf	??_teclado+1
  1206  077D  30AD               	movlw	173
  1207  077E  00F3               	movwf	??_teclado
  1208  077F                     u577:
  1209  077F  0BF3               	decfsz	??_teclado,f
  1210  0780  2F7F               	goto	u577
  1211  0781  0BF4               	decfsz	??_teclado+1,f
  1212  0782  2F7F               	goto	u577
  1213  0783  0BF5               	decfsz	??_teclado+2,f
  1214  0784  2F7F               	goto	u577
  1215  0785  2F86               	nop2
  1216  0786                     l1252:
  1217                           
  1218                           ;main.c: 197:         liga_buzzer();
  1219  0786  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1220  078B                     l1254:
  1221                           
  1222                           ;main.c: 198:         LCD_escreve('C');
  1223  078B  3043               	movlw	67
  1224  078C  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1225  0791                     l1256:
  1226                           
  1227                           ;main.c: 205:     if (RB1 == 0){
  1228  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0793  1886               	btfsc	6,1	;volatile
  1231  0794  2F96               	goto	u401
  1232  0795  2F97               	goto	u400
  1233  0796                     u401:
  1234  0796  2FAF               	goto	l1264
  1235  0797                     u400:
  1236  0797                     l1258:
  1237                           
  1238                           ;main.c: 206:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1239  0797  3006               	movlw	6
  1240  0798  00F5               	movwf	??_teclado+2
  1241  0799  3013               	movlw	19
  1242  079A  00F4               	movwf	??_teclado+1
  1243  079B  30AD               	movlw	173
  1244  079C  00F3               	movwf	??_teclado
  1245  079D                     u587:
  1246  079D  0BF3               	decfsz	??_teclado,f
  1247  079E  2F9D               	goto	u587
  1248  079F  0BF4               	decfsz	??_teclado+1,f
  1249  07A0  2F9D               	goto	u587
  1250  07A1  0BF5               	decfsz	??_teclado+2,f
  1251  07A2  2F9D               	goto	u587
  1252  07A3  2FA4               	nop2
  1253  07A4                     l1260:
  1254                           
  1255                           ;main.c: 207:         liga_buzzer();
  1256  07A4  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1257  07A9                     l1262:
  1258                           
  1259                           ;main.c: 208:         LCD_escreve('D');
  1260  07A9  3044               	movlw	68
  1261  07AA  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1262  07AF                     l1264:
  1263                           
  1264                           ;main.c: 215:     if (RB2 == 0){
  1265  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1266  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1267  07B1  1906               	btfsc	6,2	;volatile
  1268  07B2  2FB4               	goto	u411
  1269  07B3  2FB5               	goto	u410
  1270  07B4                     u411:
  1271  07B4  2FCD               	goto	l1272
  1272  07B5                     u410:
  1273  07B5                     l1266:
  1274                           
  1275                           ;main.c: 216:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1276  07B5  3006               	movlw	6
  1277  07B6  00F5               	movwf	??_teclado+2
  1278  07B7  3013               	movlw	19
  1279  07B8  00F4               	movwf	??_teclado+1
  1280  07B9  30AD               	movlw	173
  1281  07BA  00F3               	movwf	??_teclado
  1282  07BB                     u597:
  1283  07BB  0BF3               	decfsz	??_teclado,f
  1284  07BC  2FBB               	goto	u597
  1285  07BD  0BF4               	decfsz	??_teclado+1,f
  1286  07BE  2FBB               	goto	u597
  1287  07BF  0BF5               	decfsz	??_teclado+2,f
  1288  07C0  2FBB               	goto	u597
  1289  07C1  2FC2               	nop2
  1290  07C2                     l1268:
  1291                           
  1292                           ;main.c: 217:         liga_buzzer();
  1293  07C2  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1294  07C7                     l1270:
  1295                           
  1296                           ;main.c: 218:         LCD_escreve('E');
  1297  07C7  3045               	movlw	69
  1298  07C8  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1299  07CD                     l1272:
  1300                           
  1301                           ;main.c: 225:     if (RB3 == 0){
  1302  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1303  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1304  07CF  1986               	btfsc	6,3	;volatile
  1305  07D0  2FD2               	goto	u421
  1306  07D1  2FD3               	goto	u420
  1307  07D2                     u421:
  1308  07D2  2FEB               	goto	l117
  1309  07D3                     u420:
  1310  07D3                     l1274:
  1311                           
  1312                           ;main.c: 226:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1313  07D3  3006               	movlw	6
  1314  07D4  00F5               	movwf	??_teclado+2
  1315  07D5  3013               	movlw	19
  1316  07D6  00F4               	movwf	??_teclado+1
  1317  07D7  30AD               	movlw	173
  1318  07D8  00F3               	movwf	??_teclado
  1319  07D9                     u607:
  1320  07D9  0BF3               	decfsz	??_teclado,f
  1321  07DA  2FD9               	goto	u607
  1322  07DB  0BF4               	decfsz	??_teclado+1,f
  1323  07DC  2FD9               	goto	u607
  1324  07DD  0BF5               	decfsz	??_teclado+2,f
  1325  07DE  2FD9               	goto	u607
  1326  07DF  2FE0               	nop2
  1327  07E0                     l1276:
  1328                           
  1329                           ;main.c: 227:         liga_buzzer();
  1330  07E0  120A  118A  2455  120A  118A  	fcall	_liga_buzzer
  1331  07E5                     l1278:
  1332                           
  1333                           ;main.c: 228:         LCD_escreve('F');
  1334  07E5  3046               	movlw	70
  1335  07E6  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1336  07EB                     l117:
  1337  07EB  0008               	return
  1338  07EC                     __end_of_teclado:
  1339                           
  1340                           	psect	text4
  1341  0455                     __ptext4:	
  1342 ;; *************** function _liga_buzzer *****************
  1343 ;; Defined at:
  1344 ;;		line 48 in file "main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0
  1360 ;;      Temps:          2       0       0       0       0
  1361 ;;      Totals:         2       0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_teclado
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _liga_buzzer
  1373  0455                     _liga_buzzer:
  1374  0455                     l790:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _liga_buzzer: [wreg+status,2]
  1377                           
  1378                           
  1379                           ;main.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1380  0455  3041               	movlw	65
  1381  0456  00F1               	movwf	??_liga_buzzer+1
  1382  0457  30EE               	movlw	238
  1383  0458  00F0               	movwf	??_liga_buzzer
  1384  0459                     u617:
  1385  0459  0BF0               	decfsz	??_liga_buzzer,f
  1386  045A  2C59               	goto	u617
  1387  045B  0BF1               	decfsz	??_liga_buzzer+1,f
  1388  045C  2C59               	goto	u617
  1389  045D  0000               	nop
  1390  045E                     l792:
  1391                           
  1392                           ;main.c: 50:     PORTE = 0;
  1393  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1394  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0460  0189               	clrf	9	;volatile
  1396  0461                     l98:
  1397  0461  0008               	return
  1398  0462                     __end_of_liga_buzzer:
  1399                           
  1400                           	psect	text5
  1401  05C6                     __ptext5:	
  1402 ;; *************** function _Linha2 *****************
  1403 ;; Defined at:
  1404 ;;		line 243 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  i               2    7[COMMON] int 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         2       0       0       0       0
  1420 ;;      Temps:          2       0       0       0       0
  1421 ;;      Totals:         4       0       0       0       0
  1422 ;;Total ram usage:        4 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 3
  1425 ;; This function calls:
  1426 ;;		_LCD_escreve
  1427 ;;		_LCD_linha2
  1428 ;;		_espacoLivre
  1429 ;;		_strlen
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _Linha2
  1437  05C6                     _Linha2:
  1438  05C6                     l1132:	
  1439                           ;incstack = 0
  1440                           ; Regs used in _Linha2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1441                           
  1442                           
  1443                           ;main.c: 244:     LCD_linha2();
  1444  05C6  120A  118A  2480  120A  118A  	fcall	_LCD_linha2
  1445                           
  1446                           ;main.c: 245:     espacoLivre();
  1447  05CB  120A  118A  2507  120A  118A  	fcall	_espacoLivre
  1448  05D0                     l1134:
  1449                           
  1450                           ;main.c: 246:     for (int i = 0; i <= strlen(msg2)-1; i++){
  1451  05D0  01F7               	clrf	Linha2@i
  1452  05D1  01F8               	clrf	Linha2@i+1
  1453  05D2  2DE3               	goto	l1140
  1454  05D3                     l1136:
  1455                           
  1456                           ;main.c: 247:         LCD_escreve(msg2[i]);
  1457  05D3  0877               	movf	Linha2@i,w
  1458  05D4  3E2F               	addlw	(low (_msg2| 0))& (0+255)
  1459  05D5  0084               	movwf	4
  1460  05D6  1383               	bcf	3,7	;select IRP bank0
  1461  05D7  0800               	movf	0,w
  1462  05D8  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1463  05DD                     l1138:
  1464                           
  1465                           ;main.c: 248:     }
  1466  05DD  3001               	movlw	1
  1467  05DE  07F7               	addwf	Linha2@i,f
  1468  05DF  1803               	skipnc
  1469  05E0  0AF8               	incf	Linha2@i+1,f
  1470  05E1  3000               	movlw	0
  1471  05E2  07F8               	addwf	Linha2@i+1,f
  1472  05E3                     l1140:
  1473  05E3  302F               	movlw	(low (_msg2| 0))& (0+255)
  1474  05E4  120A  118A  24EE  120A  118A  	fcall	_strlen
  1475  05E9  0870               	movf	?_strlen,w
  1476  05EA  3EFF               	addlw	255
  1477  05EB  00F5               	movwf	??_Linha2
  1478  05EC  0871               	movf	?_strlen+1,w
  1479  05ED  1803               	skipnc
  1480  05EE  3E01               	addlw	1
  1481  05EF  3EFF               	addlw	255
  1482  05F0  00F6               	movwf	??_Linha2+1
  1483  05F1  0878               	movf	Linha2@i+1,w
  1484  05F2  0276               	subwf	??_Linha2+1,w
  1485  05F3  1D03               	skipz
  1486  05F4  2DF7               	goto	u265
  1487  05F5  0877               	movf	Linha2@i,w
  1488  05F6  0275               	subwf	??_Linha2,w
  1489  05F7                     u265:
  1490  05F7  1803               	skipnc
  1491  05F8  2DFA               	goto	u261
  1492  05F9  2DFB               	goto	u260
  1493  05FA                     u261:
  1494  05FA  2DD3               	goto	l1136
  1495  05FB                     u260:
  1496  05FB                     l1142:
  1497                           
  1498                           ;main.c: 249:     espacoLivre();
  1499  05FB  120A  118A  2507  120A  118A  	fcall	_espacoLivre
  1500  0600                     l129:
  1501  0600  0008               	return
  1502  0601                     __end_of_Linha2:
  1503                           
  1504                           	psect	text6
  1505  04EE                     __ptext6:	
  1506 ;; *************** function _strlen *****************
  1507 ;; Defined at:
  1508 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  s               1    wreg     PTR const unsigned char 
  1511 ;;		 -> msg2(5), msg(15), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  s               1    4[COMMON] PTR const unsigned char 
  1514 ;;		 -> msg2(5), msg(15), 
  1515 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1516 ;;		 -> msg2(5), msg(15), 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    0[COMMON] unsigned int 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         2       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0
  1528 ;;      Temps:          1       0       0       0       0
  1529 ;;      Totals:         5       0       0       0       0
  1530 ;;Total ram usage:        5 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_telaInicial
  1536 ;;		_Linha2
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _strlen
  1542  04EE                     _strlen:
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1546                           ;strlen@s stored from wreg
  1547  04EE  00F4               	movwf	strlen@s
  1548  04EF                     l1076:
  1549  04EF  0874               	movf	strlen@s,w
  1550  04F0  00F2               	movwf	??_strlen
  1551  04F1  0872               	movf	??_strlen,w
  1552  04F2  00F3               	movwf	strlen@cp
  1553  04F3  2CF8               	goto	l1080
  1554  04F4                     l1078:
  1555  04F4  3001               	movlw	1
  1556  04F5  00F2               	movwf	??_strlen
  1557  04F6  0872               	movf	??_strlen,w
  1558  04F7  07F3               	addwf	strlen@cp,f
  1559  04F8                     l1080:
  1560  04F8  0873               	movf	strlen@cp,w
  1561  04F9  0084               	movwf	4
  1562  04FA  1383               	bcf	3,7	;select IRP bank0
  1563  04FB  0800               	movf	0,w
  1564  04FC  1D03               	btfss	3,2
  1565  04FD  2CFF               	goto	u241
  1566  04FE  2D00               	goto	u240
  1567  04FF                     u241:
  1568  04FF  2CF4               	goto	l1078
  1569  0500                     u240:
  1570  0500                     l1082:
  1571  0500  0874               	movf	strlen@s,w
  1572  0501  0273               	subwf	strlen@cp,w
  1573  0502  00F0               	movwf	?_strlen
  1574  0503  01F1               	clrf	?_strlen+1
  1575  0504  1BF0               	btfsc	?_strlen,7
  1576  0505  03F1               	decf	?_strlen+1,f
  1577  0506                     l672:
  1578  0506  0008               	return
  1579  0507                     __end_of_strlen:
  1580                           
  1581                           	psect	text7
  1582  0507                     __ptext7:	
  1583 ;; *************** function _espacoLivre *****************
  1584 ;; Defined at:
  1585 ;;		line 253 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 2
  1606 ;; This function calls:
  1607 ;;		_LCD_escreve
  1608 ;;		_LCD_linha2
  1609 ;; This function is called by:
  1610 ;;		_Linha2
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _espacoLivre
  1616  0507                     _espacoLivre:
  1617  0507                     l1086:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _espacoLivre: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1620                           
  1621                           
  1622                           ;main.c: 254:     LCD_linha2();
  1623  0507  120A  118A  2480  120A  118A  	fcall	_LCD_linha2
  1624                           
  1625                           ;main.c: 255:     LCD_escreve(' ');
  1626  050C  3020               	movlw	32
  1627  050D  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1628                           
  1629                           ;main.c: 256:     LCD_escreve(' ');
  1630  0512  3020               	movlw	32
  1631  0513  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1632                           
  1633                           ;main.c: 257:     LCD_escreve(' ');
  1634  0518  3020               	movlw	32
  1635  0519  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1636                           
  1637                           ;main.c: 258:     LCD_escreve(' ');
  1638  051E  3020               	movlw	32
  1639  051F  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1640                           
  1641                           ;main.c: 259:     LCD_escreve(' ');
  1642  0524  3020               	movlw	32
  1643  0525  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1644                           
  1645                           ;main.c: 260:     LCD_escreve(' ');
  1646  052A  3020               	movlw	32
  1647  052B  120A  118A  24A0  120A  118A  	fcall	_LCD_escreve
  1648  0530                     l132:
  1649  0530  0008               	return
  1650  0531                     __end_of_espacoLivre:
  1651                           
  1652                           	psect	text8
  1653  0480                     __ptext8:	
  1654 ;; *************** function _LCD_linha2 *****************
  1655 ;; Defined at:
  1656 ;;		line 73 in file "./lcd.h"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 1
  1677 ;; This function calls:
  1678 ;;		_delay
  1679 ;; This function is called by:
  1680 ;;		_Linha2
  1681 ;;		_espacoLivre
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _LCD_linha2
  1687  0480                     _LCD_linha2:
  1688  0480                     l1046:	
  1689                           ;incstack = 0
  1690                           ; Regs used in _LCD_linha2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1691                           
  1692                           
  1693                           ;./lcd.h: 74:     PORTD = 0xC0;
  1694  0480  30C0               	movlw	192
  1695  0481  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0482  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0483  0088               	movwf	8	;volatile
  1698  0484                     l1048:
  1699                           
  1700                           ;./lcd.h: 75:     RA5 = 0;
  1701  0484  1285               	bcf	5,5	;volatile
  1702  0485                     l1050:
  1703                           
  1704                           ;./lcd.h: 76:     RA4 = 0;
  1705  0485  1205               	bcf	5,4	;volatile
  1706  0486                     l1052:
  1707                           
  1708                           ;./lcd.h: 77:     RA3=0;
  1709  0486  1185               	bcf	5,3	;volatile
  1710  0487                     l1054:
  1711                           
  1712                           ;./lcd.h: 78:     delay();
  1713  0487  120A  118A  24D8  120A  118A  	fcall	_delay
  1714  048C                     l1056:
  1715                           
  1716                           ;./lcd.h: 79:  RA3 = 1;
  1717  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1718  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1719  048E  1585               	bsf	5,3	;volatile
  1720  048F                     l66:
  1721  048F  0008               	return
  1722  0490                     __end_of_LCD_linha2:
  1723                           
  1724                           	psect	text9
  1725  04A0                     __ptext9:	
  1726 ;; *************** function _LCD_escreve *****************
  1727 ;; Defined at:
  1728 ;;		line 46 in file "./lcd.h"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  x               1    wreg     unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  x               1    2[COMMON] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         1       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         1       0       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 1
  1749 ;; This function calls:
  1750 ;;		_delay
  1751 ;; This function is called by:
  1752 ;;		_teclado
  1753 ;;		_telaInicial
  1754 ;;		_Linha2
  1755 ;;		_espacoLivre
  1756 ;;		_LCD_escreveFrase
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _LCD_escreve
  1762  04A0                     _LCD_escreve:
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _LCD_escreve: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1766                           ;LCD_escreve@x stored from wreg
  1767  04A0  00F2               	movwf	LCD_escreve@x
  1768  04A1                     l1034:
  1769                           
  1770                           ;./lcd.h: 46: void LCD_escreve(char x);./lcd.h: 47: {;./lcd.h: 48:  PORTD = x;
  1771  04A1  0872               	movf	LCD_escreve@x,w
  1772  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1773  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1774  04A4  0088               	movwf	8	;volatile
  1775  04A5                     l1036:
  1776                           
  1777                           ;./lcd.h: 49:  RA5 = 1;
  1778  04A5  1685               	bsf	5,5	;volatile
  1779  04A6                     l1038:
  1780                           
  1781                           ;./lcd.h: 50:  RA4 = 0;
  1782  04A6  1205               	bcf	5,4	;volatile
  1783  04A7                     l1040:
  1784                           
  1785                           ;./lcd.h: 51:  RA3 = 0;
  1786  04A7  1185               	bcf	5,3	;volatile
  1787  04A8                     l1042:
  1788                           
  1789                           ;./lcd.h: 52:  delay();
  1790  04A8  120A  118A  24D8  120A  118A  	fcall	_delay
  1791  04AD                     l1044:
  1792                           
  1793                           ;./lcd.h: 53:  RA3 = 1;
  1794  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1795  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1796  04AF  1585               	bsf	5,3	;volatile
  1797  04B0                     l57:
  1798  04B0  0008               	return
  1799  04B1                     __end_of_LCD_escreve:
  1800                           
  1801                           	psect	text10
  1802  0470                     __ptext10:	
  1803 ;; *************** function _LCD_limpa *****************
  1804 ;; Defined at:
  1805 ;;		line 56 in file "./lcd.h"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 1
  1826 ;; This function calls:
  1827 ;;		_delay
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _LCD_limpa
  1835  0470                     _LCD_limpa:
  1836  0470                     l1110:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _LCD_limpa: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1839                           
  1840                           
  1841                           ;./lcd.h: 57:     PORTD = 0x01;
  1842  0470  3001               	movlw	1
  1843  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0473  0088               	movwf	8	;volatile
  1846  0474                     l1112:
  1847                           
  1848                           ;./lcd.h: 58:     RA5 = 0;
  1849  0474  1285               	bcf	5,5	;volatile
  1850  0475                     l1114:
  1851                           
  1852                           ;./lcd.h: 59:     RA4 = 0;
  1853  0475  1205               	bcf	5,4	;volatile
  1854  0476                     l1116:
  1855                           
  1856                           ;./lcd.h: 60:     RA3=0;
  1857  0476  1185               	bcf	5,3	;volatile
  1858  0477                     l1118:
  1859                           
  1860                           ;./lcd.h: 61:     delay();
  1861  0477  120A  118A  24D8  120A  118A  	fcall	_delay
  1862  047C                     l1120:
  1863                           
  1864                           ;./lcd.h: 62:  RA3 = 1;
  1865  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1866  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1867  047E  1585               	bsf	5,3	;volatile
  1868  047F                     l60:
  1869  047F  0008               	return
  1870  0480                     __end_of_LCD_limpa:
  1871                           
  1872                           	psect	text11
  1873  0593                     __ptext11:	
  1874 ;; *************** function _LCD_init *****************
  1875 ;; Defined at:
  1876 ;;		line 31 in file "./lcd.h"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 2
  1897 ;; This function calls:
  1898 ;;		_LCD_enable
  1899 ;;		_init
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _LCD_init
  1907  0593                     _LCD_init:
  1908  0593                     l1088:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1911                           
  1912                           
  1913                           ;./lcd.h: 33:     init();
  1914  0593  120A  118A  2449  120A  118A  	fcall	_init
  1915  0598                     l1090:
  1916                           
  1917                           ;./lcd.h: 34:  PORTD = 0X1;
  1918  0598  3001               	movlw	1
  1919  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1920  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1921  059B  0088               	movwf	8	;volatile
  1922  059C                     l1092:
  1923                           
  1924                           ;./lcd.h: 35:  LCD_enable();
  1925  059C  120A  118A  2462  120A  118A  	fcall	_LCD_enable
  1926  05A1                     l1094:
  1927                           
  1928                           ;./lcd.h: 36:  PORTD = 0X38;
  1929  05A1  3038               	movlw	56
  1930  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1931  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1932  05A4  0088               	movwf	8	;volatile
  1933  05A5                     l1096:
  1934                           
  1935                           ;./lcd.h: 37:  LCD_enable();
  1936  05A5  120A  118A  2462  120A  118A  	fcall	_LCD_enable
  1937  05AA                     l1098:
  1938                           
  1939                           ;./lcd.h: 38:  PORTD = 0X0e;
  1940  05AA  300E               	movlw	14
  1941  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1942  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1943  05AD  0088               	movwf	8	;volatile
  1944  05AE                     l1100:
  1945                           
  1946                           ;./lcd.h: 39:  LCD_enable();
  1947  05AE  120A  118A  2462  120A  118A  	fcall	_LCD_enable
  1948  05B3                     l1102:
  1949                           
  1950                           ;./lcd.h: 40:  PORTD = 0X06;
  1951  05B3  3006               	movlw	6
  1952  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1953  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1954  05B6  0088               	movwf	8	;volatile
  1955  05B7                     l1104:
  1956                           
  1957                           ;./lcd.h: 41:  LCD_enable();
  1958  05B7  120A  118A  2462  120A  118A  	fcall	_LCD_enable
  1959  05BC                     l1106:
  1960                           
  1961                           ;./lcd.h: 42:  PORTD = 0X80;
  1962  05BC  3080               	movlw	128
  1963  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1964  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1965  05BF  0088               	movwf	8	;volatile
  1966  05C0                     l1108:
  1967                           
  1968                           ;./lcd.h: 43:  LCD_enable();
  1969  05C0  120A  118A  2462  120A  118A  	fcall	_LCD_enable
  1970  05C5                     l54:
  1971  05C5  0008               	return
  1972  05C6                     __end_of_LCD_init:
  1973                           
  1974                           	psect	text12
  1975  0449                     __ptext12:	
  1976 ;; *************** function _init *****************
  1977 ;; Defined at:
  1978 ;;		line 23 in file "./lcd.h"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         0       0       0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_LCD_init
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _init
  2007  0449                     _init:
  2008  0449                     l764:	
  2009                           ;incstack = 0
  2010                           ; Regs used in _init: [wreg+status,2]
  2011                           
  2012                           
  2013                           ;./lcd.h: 25:  ADCON1 = 0X07;
  2014  0449  3007               	movlw	7
  2015  044A  1683               	bsf	3,5	;RP0=1, select bank1
  2016  044B  1303               	bcf	3,6	;RP1=0, select bank1
  2017  044C  009F               	movwf	31	;volatile
  2018  044D                     l766:
  2019                           
  2020                           ;./lcd.h: 26:      RA1=1;
  2021  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2022  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2023  044F  1485               	bsf	5,1	;volatile
  2024  0450                     l768:
  2025                           
  2026                           ;./lcd.h: 27:  TRISA = 0X00;
  2027  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0452  0185               	clrf	5	;volatile
  2030  0453                     l770:
  2031                           
  2032                           ;./lcd.h: 28:  TRISD = 0X00;
  2033  0453  0188               	clrf	8	;volatile
  2034  0454                     l51:
  2035  0454  0008               	return
  2036  0455                     __end_of_init:
  2037                           
  2038                           	psect	text13
  2039  0462                     __ptext13:	
  2040 ;; *************** function _LCD_enable *****************
  2041 ;; Defined at:
  2042 ;;		line 85 in file "./lcd.h"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 1
  2063 ;; This function calls:
  2064 ;;		_delay
  2065 ;; This function is called by:
  2066 ;;		_LCD_init
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _LCD_enable
  2072  0462                     _LCD_enable:
  2073  0462                     l1058:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2076                           
  2077                           
  2078                           ;./lcd.h: 87:  RA5 = 0;
  2079  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0464  1285               	bcf	5,5	;volatile
  2082                           
  2083                           ;./lcd.h: 88:  RA4 = 0;
  2084  0465  1205               	bcf	5,4	;volatile
  2085                           
  2086                           ;./lcd.h: 89:  RA3 = 0;
  2087  0466  1185               	bcf	5,3	;volatile
  2088  0467                     l1060:
  2089                           
  2090                           ;./lcd.h: 90:  delay();
  2091  0467  120A  118A  24D8  120A  118A  	fcall	_delay
  2092  046C                     l1062:
  2093                           
  2094                           ;./lcd.h: 91:  RA3 = 1;
  2095  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2096  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2097  046E  1585               	bsf	5,3	;volatile
  2098  046F                     l69:
  2099  046F  0008               	return
  2100  0470                     __end_of_LCD_enable:
  2101                           
  2102                           	psect	text14
  2103  04D8                     __ptext14:	
  2104 ;; *************** function _delay *****************
  2105 ;; Defined at:
  2106 ;;		line 94 in file "./lcd.h"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  i               2    0[COMMON] int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, btemp+1
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       0       0       0       0
  2121 ;;      Locals:         2       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0
  2123 ;;      Totals:         2       0       0       0       0
  2124 ;;Total ram usage:        2 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_LCD_escreve
  2130 ;;		_LCD_limpa
  2131 ;;		_LCD_linha1
  2132 ;;		_LCD_linha2
  2133 ;;		_LCD_enable
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _delay
  2139  04D8                     _delay:
  2140  04D8                     l1024:	
  2141                           ;incstack = 0
  2142                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2143                           
  2144                           
  2145                           ;./lcd.h: 96:  int i;;./lcd.h: 97:  for (i = 0;i < 5000;i++);
  2146  04D8  01F0               	clrf	delay@i
  2147  04D9  01F1               	clrf	delay@i+1
  2148  04DA                     l1030:
  2149  04DA  3001               	movlw	1
  2150  04DB  07F0               	addwf	delay@i,f
  2151  04DC  1803               	skipnc
  2152  04DD  0AF1               	incf	delay@i+1,f
  2153  04DE  3000               	movlw	0
  2154  04DF  07F1               	addwf	delay@i+1,f
  2155  04E0                     l1032:
  2156  04E0  0871               	movf	delay@i+1,w
  2157  04E1  3A80               	xorlw	128
  2158  04E2  00FF               	movwf	btemp+1
  2159  04E3  3093               	movlw	147
  2160  04E4  027F               	subwf	btemp+1,w
  2161  04E5  1D03               	skipz
  2162  04E6  2CE9               	goto	u235
  2163  04E7  3088               	movlw	136
  2164  04E8  0270               	subwf	delay@i,w
  2165  04E9                     u235:
  2166  04E9  1C03               	skipc
  2167  04EA  2CEC               	goto	u231
  2168  04EB  2CED               	goto	u230
  2169  04EC                     u231:
  2170  04EC  2CDA               	goto	l1030
  2171  04ED                     u230:
  2172  04ED                     l74:
  2173  04ED  0008               	return
  2174  04EE                     __end_of_delay:
  2175  007E                     btemp	set	126	;btemp
  2176  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> msg2(BANK0[5]), msg(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_Linha2
    _main->_telaInicial
    _telaInicial->_strlen
    _LCD_linha1->_delay
    _teclado->_LCD_escreve
    _Linha2->_strlen
    _espacoLivre->_LCD_escreve
    _LCD_linha2->_delay
    _LCD_escreve->_delay
    _LCD_limpa->_delay
    _LCD_enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     906
                           _LCD_init
                          _LCD_limpa
                             _Linha2
                            _teclado
                        _telaInicial
 ---------------------------------------------------------------------------------
 (1) _telaInicial                                          4     4      0     316
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LCD_linha1                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _teclado                                              3     3      0      68
                                              3 COMMON     3     3      0
                        _LCD_escreve
                        _liga_buzzer
 ---------------------------------------------------------------------------------
 (2) _liga_buzzer                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Linha2                                               4     4      0     430
                                              5 COMMON     4     4      0
                        _LCD_escreve
                         _LCD_linha2
                        _espacoLivre
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _espacoLivre                                          0     0      0     114
                        _LCD_escreve
                         _LCD_linha2
 ---------------------------------------------------------------------------------
 (3) _LCD_linha2                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_escreve                                          1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_limpa                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      46
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_limpa
     _delay
   _Linha2
     _LCD_escreve
       _delay
     _LCD_linha2
       _delay
     _espacoLivre
       _LCD_escreve
       _LCD_linha2
     _strlen
   _teclado
     _LCD_escreve
     _liga_buzzer
   _telaInicial
     _LCD_escreve
     _LCD_linha1
       _delay
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 27 01:48:56 2021

                      pc 0002                       l51 0454                       l60 047F  
                     l54 05C5                       l63 049F                       l57 04B0  
                     l74 04ED                       l66 048F                       l69 046F  
                     l98 0461                       fsr 0004              ?_LCD_enable 0070  
                    l123 0561                      l132 0530                      l117 07EB  
                    l129 0600                      l672 0506                      l770 0453  
                    l764 0449                      l766 044D                      l790 0455  
                    l768 0450                      l792 045E                      _RA1 0029  
                    _RB0 0030                      _RA3 002B                      _RB1 0031  
                    _RA4 002C                      _RB2 0032                      _RA5 002D  
                    _RB3 0033                      u300 0665                      u301 0664  
                    u230 04ED                      u310 0685                      u231 04EC  
                    u311 0684                      u240 0500                      u400 0797  
                    u320 06A3                      u241 04FF                      u401 0796  
                    u321 06A2                      u410 07B5                      u330 06C1  
                    u250 0561                      u235 04E9                      u411 07B4  
                    u331 06C0                      u251 0560                      u260 05FB  
                    u420 07D3                      u340 06DF                      u261 05FA  
                    u421 07D2                      u341 06DE                      u350 06FF  
                    u270 060B                      u351 06FE                      u271 060A  
                    u255 055D                      u360 071D                      u280 0629  
                    u440 057C                      u265 05F7                      u361 071C  
                    u281 0628                      u441 057B                      u370 073B  
                    u290 0647                      u371 073A                      u507 06A9  
                    u291 0646                      u380 0759                      u381 0758  
                    u517 06C7                      u390 0779                      u607 07D9  
                    u391 0778                      u527 06E5                      u617 0459  
                    u537 0705                      u457 0611                      u547 0723  
                    u467 062F                      u557 0741                      u477 064D  
                    u567 075F                      u487 066B                      u577 077F  
                    u497 068B                      u587 079D                      u597 07BB  
            ?_LCD_linha1 0070              ?_LCD_linha2 0070                      _msg 0020  
                    fsr0 0004                      indf 0000                     l1100 05AE  
                   l1030 04DA                     l1102 05B3                     l1110 0470  
                   l1032 04E0                     l1024 04D8                     l1104 05B7  
                   l1120 047C                     l1112 0474                     l1040 04A7  
                   l1200 06CE                     l1106 05BC                     l1114 0475  
                   l1042 04A8                     l1034 04A1                     l1050 0485  
                   l1210 06F1                     l1202 06D3                     l1130 0549  
                   l1122 0531                     l1060 0467                     l1108 05C0  
                   l1116 0476                     l1044 04AD                     l1036 04A5  
                   l1052 0486                     l1140 05E3                     l1132 05C6  
                   l1220 0711                     l1212 06F7                     l1204 06D9  
                   l1124 0536                     l1300 057C                     l1062 046C  
                   l1118 0477                     l1038 04A6                     l1054 0487  
                   l1046 0480                     l1142 05FB                     l1134 05D0  
                   l1230 0735                     l1222 0717                     l1214 06FB  
                   l1206 06DF                     l1150 0618                     l1070 0496  
                   l1126 0539                     l1302 0586                     l1056 048C  
                   l1048 0484                     l1080 04F8                     l1136 05D3  
                   l1240 0759                     l1232 073B                     l1224 071D  
                   l1216 06FF                     l1208 06EC                     l1160 063B  
                   l1152 061D                     l1144 0601                     l1072 0497  
                   l1064 0490                     l1128 0543                     l1304 058A  
                   l1058 0462                     l1090 0598                     l1082 0500  
                   l1138 05DD                     l1250 0779                     l1242 0766  
                   l1234 0748                     l1226 072A                     l1218 070C  
                   l1170 065F                     l1162 0641                     l1154 0623  
                   l1146 0607                     l1074 049C                     l1066 0494  
                   l1092 059C                     l1076 04EF                     l1260 07A4  
                   l1252 0786                     l1244 076B                     l1236 074D  
                   l1228 072F                     l1180 0681                     l1172 0665  
                   l1164 0647                     l1156 0629                     l1148 060B  
                   l1068 0495                     l1094 05A1                     l1086 0507  
                   l1078 04F4                     l1270 07C7                     l1262 07A9  
                   l1254 078B                     l1246 0771                     l1238 0753  
                   l1190 06A3                     l1182 0685                     l1174 0672  
                   l1166 0654                     l1158 0636                     l1096 05A5  
                   l1088 0593                     l1272 07CD                     l1264 07AF  
                   l1256 0791                     l1248 0775                     l1192 06B0  
                   l1184 0692                     l1176 0677                     l1168 0659  
                   l1098 05AA                     l1274 07D3                     l1266 07B5  
                   l1258 0797                     l1194 06B5                     l1186 0697  
                   l1178 067D                     l1290 0566                     l1276 07E0  
                   l1268 07C2                     l1196 06BB                     l1188 069D  
                   l1292 0568                     l1278 07E5                     l1198 06C1  
                   l1294 056C                     l1296 0571                     l1288 0562  
                   l1298 0576             ?_LCD_escreve 0070                     _main 0562  
                   _msg2 002F                     _init 0449             ?_liga_buzzer 0070  
                   btemp 007E             ?_espacoLivre 0070                     start 0000  
     __size_of_LCD_limpa 0010         __end_of_LCD_init 05C6                    ?_main 0070  
                  ?_init 0070                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _delay 04D8  
                  _state 0079          __end_of_teclado 07EC                    pclath 000A  
                  status 0003                    wtemp0 007E      __size_of_LCD_enable 000E  
    __size_of_LCD_linha1 0010      __size_of_LCD_linha2 0010          __initialization 07EC  
           __end_of_main 0593             __end_of_init 0455             ?_telaInicial 0070  
                 ??_main 0079                   ??_init 0070        __end_of_LCD_limpa 0480  
                 ?_delay 0070                   _ADCON1 009F                   _Linha2 05C6  
                 delay@i 0070                   _strlen 04EE                ??_teclado 0073  
__end_of__initialization 07FC                ?_LCD_init 0070     __size_of_LCD_escreve 0011  
           LCD_escreve@x 0072     __size_of_liga_buzzer 000D     __size_of_espacoLivre 002A  
         __pcstackCOMMON 0070             __pidataBANK0 04C4            __end_of_delay 04EE  
           ??_LCD_enable 0072             ??_LCD_linha1 0072             ??_LCD_linha2 0072  
                ??_delay 0070               ??_LCD_init 0072                  ?_Linha2 0070  
     __end_of_LCD_enable 0470       __end_of_LCD_linha1 04A0       __end_of_LCD_linha2 0490  
             __pmaintext 0562                  ?_strlen 0070     __size_of_telaInicial 0031  
                Linha2@i 0077          __size_of_Linha2 003B                  __ptext1 0531  
                __ptext2 0490                  __ptext3 0601                  __ptext4 0455  
                __ptext5 05C6                  __ptext6 04EE                  __ptext7 0507  
                __ptext8 0480                  __ptext9 04A0          __size_of_strlen 0019  
                _teclado 0601     end_of_initialization 07FC                _LCD_limpa 0470  
                strlen@s 0074               ?_LCD_limpa 0070        __size_of_LCD_init 0033  
         __end_of_Linha2 0601           __end_of_strlen 0507      start_initialization 07EC  
          ??_LCD_escreve 0072            ??_liga_buzzer 0070            ??_espacoLivre 0073  
               ??_Linha2 0075               init_fetch0 04B1              __pdataBANK0 0020  
               ??_strlen 0072              __pbssCOMMON 0079                ___latbits 0002  
            ??_LCD_limpa 0072      __end_of_LCD_escreve 04B1      __end_of_liga_buzzer 0462  
    __end_of_espacoLivre 0531             telaInicial@i 0077            ??_telaInicial 0075  
               ?_teclado 0070           __size_of_delay 0016                 _LCD_init 0593  
    __end_of_telaInicial 0562              _LCD_escreve 04A0              _liga_buzzer 0455  
            _espacoLivre 0507         __size_of_teclado 01EB                 __ptext10 0470  
               __ptext11 0593                 __ptext12 0449                 __ptext13 0462  
               __ptext14 04D8            __size_of_main 0031            __size_of_init 000C  
            _telaInicial 0531               _LCD_enable 0462               _LCD_linha1 0490  
             _LCD_linha2 0480                 init_ram0 04B5                 strlen@cp 0073  
